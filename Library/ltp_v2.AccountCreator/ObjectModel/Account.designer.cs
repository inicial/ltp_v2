#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ltp_v2.AccountCreator.ObjectModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="lanta")]
	public partial class AccountDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLTA_Account(LTA_Account instance);
    partial void UpdateLTA_Account(LTA_Account instance);
    partial void DeleteLTA_Account(LTA_Account instance);
    partial void InsertLTA_AccountType(LTA_AccountType instance);
    partial void UpdateLTA_AccountType(LTA_AccountType instance);
    partial void DeleteLTA_AccountType(LTA_AccountType instance);
    partial void Insertdict_AccountDefaultService(dict_AccountDefaultService instance);
    partial void Updatedict_AccountDefaultService(dict_AccountDefaultService instance);
    partial void Deletedict_AccountDefaultService(dict_AccountDefaultService instance);
    partial void InsertLTA_AccountService(LTA_AccountService instance);
    partial void UpdateLTA_AccountService(LTA_AccountService instance);
    partial void DeleteLTA_AccountService(LTA_AccountService instance);
    partial void Insertdict_Partner(dict_Partner instance);
    partial void Updatedict_Partner(dict_Partner instance);
    partial void Deletedict_Partner(dict_Partner instance);
    partial void Insertdict_Rate(dict_Rate instance);
    partial void Updatedict_Rate(dict_Rate instance);
    partial void Deletedict_Rate(dict_Rate instance);
    partial void Insertdict_PrtAccount(dict_PrtAccount instance);
    partial void Updatedict_PrtAccount(dict_PrtAccount instance);
    partial void Deletedict_PrtAccount(dict_PrtAccount instance);
    partial void Insertdict_PrtBank(dict_PrtBank instance);
    partial void Updatedict_PrtBank(dict_PrtBank instance);
    partial void Deletedict_PrtBank(dict_PrtBank instance);
    partial void InsertFIN_BILL_OUT(FIN_BILL_OUT instance);
    partial void UpdateFIN_BILL_OUT(FIN_BILL_OUT instance);
    partial void DeleteFIN_BILL_OUT(FIN_BILL_OUT instance);
    partial void InsertFIN_DOCUMENT(FIN_DOCUMENT instance);
    partial void UpdateFIN_DOCUMENT(FIN_DOCUMENT instance);
    partial void DeleteFIN_DOCUMENT(FIN_DOCUMENT instance);
    partial void InsertLTA_AccountDocument(LTA_AccountDocument instance);
    partial void UpdateLTA_AccountDocument(LTA_AccountDocument instance);
    partial void DeleteLTA_AccountDocument(LTA_AccountDocument instance);
    #endregion
		
		public AccountDataContext() : 
				base(global::ltp_v2.AccountCreator.Properties.Settings.Default.lantaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LTA_Account> LTA_Accounts
		{
			get
			{
				return this.GetTable<LTA_Account>();
			}
		}
		
		public System.Data.Linq.Table<LTA_AccountType> LTA_AccountTypes
		{
			get
			{
				return this.GetTable<LTA_AccountType>();
			}
		}
		
		public System.Data.Linq.Table<dict_AccountDefaultService> dict_AccountDefaultServices
		{
			get
			{
				return this.GetTable<dict_AccountDefaultService>();
			}
		}
		
		public System.Data.Linq.Table<LTA_AccountService> LTA_AccountServices
		{
			get
			{
				return this.GetTable<LTA_AccountService>();
			}
		}
		
		public System.Data.Linq.Table<dict_Partner> dict_Partners
		{
			get
			{
				return this.GetTable<dict_Partner>();
			}
		}
		
		public System.Data.Linq.Table<dict_Rate> dict_Rates
		{
			get
			{
				return this.GetTable<dict_Rate>();
			}
		}
		
		public System.Data.Linq.Table<dict_PrtAccount> dict_PrtAccounts
		{
			get
			{
				return this.GetTable<dict_PrtAccount>();
			}
		}
		
		public System.Data.Linq.Table<dict_PrtBank> dict_PrtBanks
		{
			get
			{
				return this.GetTable<dict_PrtBank>();
			}
		}
		
		public System.Data.Linq.Table<FIN_BILL_OUT> FIN_BILL_OUTs
		{
			get
			{
				return this.GetTable<FIN_BILL_OUT>();
			}
		}
		
		public System.Data.Linq.Table<FIN_DOCUMENT> FIN_DOCUMENTs
		{
			get
			{
				return this.GetTable<FIN_DOCUMENT>();
			}
		}
		
		public System.Data.Linq.Table<LTA_AccountDocument> LTA_AccountDocuments
		{
			get
			{
				return this.GetTable<LTA_AccountDocument>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LTA_Account")]
	public partial class LTA_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AC_ID;
		
		private int _AC_ATID = default(int);
		
		private string _AC_Number;
		
		private System.DateTime _AC_CRDate = default(System.DateTime);
		
		private int _AC_PRKey = default(int);
		
		private System.Nullable<double> _AC_Course;
		
		private string _AC_Rate;
		
		private string _AC_BaseRate;
		
		private string _AC_Param1;
		
		private double _AC_TotalPrice;
		
		private System.Nullable<int> _AC_DCKey;
		
		private int _AC_USID = default(int);
		
		private System.Nullable<System.DateTime> _AC_IsAnull;
		
		private int _AC_SuplierRRKey = default(int);
		
		private string _TotalPriceString;
		
		private EntitySet<LTA_AccountService> _LTA_AccountServices;
		
		private EntitySet<LTA_AccountDocument> _LTA_AccountDocuments;
		
		private EntityRef<LTA_AccountType> _LTA_AccountType;
		
		private EntityRef<dict_Partner> _tbl_Partner;
		
		private EntityRef<dict_Partner> _Supplier;
		
		private EntityRef<FIN_DOCUMENT> _FIN_DOCUMENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAC_IDChanging(int value);
    partial void OnAC_IDChanged();
    partial void OnAC_NumberChanging(string value);
    partial void OnAC_NumberChanged();
    partial void OnAC_CourseChanging(System.Nullable<double> value);
    partial void OnAC_CourseChanged();
    partial void OnAC_RateChanging(string value);
    partial void OnAC_RateChanged();
    partial void OnAC_BaseRateChanging(string value);
    partial void OnAC_BaseRateChanged();
    partial void OnAC_Param1Changing(string value);
    partial void OnAC_Param1Changed();
    partial void OnAC_TotalPriceChanging(double value);
    partial void OnAC_TotalPriceChanged();
    partial void OnAC_DCKeyChanging(System.Nullable<int> value);
    partial void OnAC_DCKeyChanged();
    partial void OnAC_IsAnullChanging(System.Nullable<System.DateTime> value);
    partial void OnAC_IsAnullChanged();
    partial void OnTotalPriceStringChanging(string value);
    partial void OnTotalPriceStringChanged();
    #endregion
		
		public LTA_Account()
		{
			this._LTA_AccountServices = new EntitySet<LTA_AccountService>(new Action<LTA_AccountService>(this.attach_LTA_AccountServices), new Action<LTA_AccountService>(this.detach_LTA_AccountServices));
			this._LTA_AccountDocuments = new EntitySet<LTA_AccountDocument>(new Action<LTA_AccountDocument>(this.attach_LTA_AccountDocuments), new Action<LTA_AccountDocument>(this.detach_LTA_AccountDocuments));
			this._LTA_AccountType = default(EntityRef<LTA_AccountType>);
			this._tbl_Partner = default(EntityRef<dict_Partner>);
			this._Supplier = default(EntityRef<dict_Partner>);
			this._FIN_DOCUMENT = default(EntityRef<FIN_DOCUMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AC_ID
		{
			get
			{
				return this._AC_ID;
			}
			set
			{
				if ((this._AC_ID != value))
				{
					this.OnAC_IDChanging(value);
					this.SendPropertyChanging();
					this._AC_ID = value;
					this.SendPropertyChanged("AC_ID");
					this.OnAC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_ATID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int AC_ATID
		{
			get
			{
				return this._AC_ATID;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_Number", DbType="VarChar(11)", UpdateCheck=UpdateCheck.Never)]
		public string AC_Number
		{
			get
			{
				return this._AC_Number;
			}
			set
			{
				if ((this._AC_Number != value))
				{
					this.OnAC_NumberChanging(value);
					this.SendPropertyChanging();
					this._AC_Number = value;
					this.SendPropertyChanged("AC_Number");
					this.OnAC_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_CRDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime AC_CRDate
		{
			get
			{
				return this._AC_CRDate;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_PRKey", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int AC_PRKey
		{
			get
			{
				return this._AC_PRKey;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_Course", DbType="Float")]
		public System.Nullable<double> AC_Course
		{
			get
			{
				return this._AC_Course;
			}
			set
			{
				if ((this._AC_Course != value))
				{
					this.OnAC_CourseChanging(value);
					this.SendPropertyChanging();
					this._AC_Course = value;
					this.SendPropertyChanged("AC_Course");
					this.OnAC_CourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_Rate", DbType="VarChar(3)")]
		public string AC_Rate
		{
			get
			{
				return this._AC_Rate;
			}
			set
			{
				if ((this._AC_Rate != value))
				{
					this.OnAC_RateChanging(value);
					this.SendPropertyChanging();
					this._AC_Rate = value;
					this.SendPropertyChanged("AC_Rate");
					this.OnAC_RateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_BaseRate", DbType="VarChar(3)")]
		public string AC_BaseRate
		{
			get
			{
				return this._AC_BaseRate;
			}
			set
			{
				if ((this._AC_BaseRate != value))
				{
					this.OnAC_BaseRateChanging(value);
					this.SendPropertyChanging();
					this._AC_BaseRate = value;
					this.SendPropertyChanged("AC_BaseRate");
					this.OnAC_BaseRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_Param1", DbType="VarChar(10)")]
		public string AC_Param1
		{
			get
			{
				return this._AC_Param1;
			}
			set
			{
				if ((this._AC_Param1 != value))
				{
					this.OnAC_Param1Changing(value);
					this.SendPropertyChanging();
					this._AC_Param1 = value;
					this.SendPropertyChanged("AC_Param1");
					this.OnAC_Param1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_TotalPrice", DbType="Float NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public double AC_TotalPrice
		{
			get
			{
				return this._AC_TotalPrice;
			}
			set
			{
				if ((this._AC_TotalPrice != value))
				{
					this.OnAC_TotalPriceChanging(value);
					this.SendPropertyChanging();
					this._AC_TotalPrice = value;
					this.SendPropertyChanged("AC_TotalPrice");
					this.OnAC_TotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_DCKey", DbType="Int")]
		public System.Nullable<int> AC_DCKey
		{
			get
			{
				return this._AC_DCKey;
			}
			set
			{
				if ((this._AC_DCKey != value))
				{
					if (this._FIN_DOCUMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAC_DCKeyChanging(value);
					this.SendPropertyChanging();
					this._AC_DCKey = value;
					this.SendPropertyChanged("AC_DCKey");
					this.OnAC_DCKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_USID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int AC_USID
		{
			get
			{
				return this._AC_USID;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_IsAnull", DbType="DateTime")]
		public System.Nullable<System.DateTime> AC_IsAnull
		{
			get
			{
				return this._AC_IsAnull;
			}
			set
			{
				if ((this._AC_IsAnull != value))
				{
					this.OnAC_IsAnullChanging(value);
					this.SendPropertyChanging();
					this._AC_IsAnull = value;
					this.SendPropertyChanged("AC_IsAnull");
					this.OnAC_IsAnullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_SuplierRRKey", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int AC_SuplierRRKey
		{
			get
			{
				return this._AC_SuplierRRKey;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPriceString", DbType="varchar(max)", UpdateCheck=UpdateCheck.Never)]
		public string TotalPriceString
		{
			get
			{
				return this._TotalPriceString;
			}
			set
			{
				if ((this._TotalPriceString != value))
				{
					this.OnTotalPriceStringChanging(value);
					this.SendPropertyChanging();
					this._TotalPriceString = value;
					this.SendPropertyChanged("TotalPriceString");
					this.OnTotalPriceStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LTA_Account_LTA_AccountService", Storage="_LTA_AccountServices", ThisKey="AC_ID", OtherKey="AS_ACID")]
		public EntitySet<LTA_AccountService> LTA_AccountServices
		{
			get
			{
				return this._LTA_AccountServices;
			}
			set
			{
				this._LTA_AccountServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LTA_Account_LTA_AccountDocument", Storage="_LTA_AccountDocuments", ThisKey="AC_ID", OtherKey="ACF_ACId")]
		public EntitySet<LTA_AccountDocument> LTA_AccountDocuments
		{
			get
			{
				return this._LTA_AccountDocuments;
			}
			set
			{
				this._LTA_AccountDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LTA_AccountType_LTA_Account", Storage="_LTA_AccountType", ThisKey="AC_ATID", OtherKey="AT_ID", IsForeignKey=true)]
		public LTA_AccountType LTA_AccountType
		{
			get
			{
				return this._LTA_AccountType.Entity;
			}
			set
			{
				LTA_AccountType previousValue = this._LTA_AccountType.Entity;
				if (((previousValue != value) 
							|| (this._LTA_AccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LTA_AccountType.Entity = null;
						previousValue.LTA_Accounts.Remove(this);
					}
					this._LTA_AccountType.Entity = value;
					if ((value != null))
					{
						value.LTA_Accounts.Add(this);
						this._AC_ATID = value.AT_ID;
					}
					else
					{
						this._AC_ATID = default(int);
					}
					this.SendPropertyChanged("LTA_AccountType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Partner_LTA_Account", Storage="_tbl_Partner", ThisKey="AC_PRKey", OtherKey="PR_KEY", IsForeignKey=true)]
		public dict_Partner Buyer
		{
			get
			{
				return this._tbl_Partner.Entity;
			}
			set
			{
				dict_Partner previousValue = this._tbl_Partner.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Partner.Entity = null;
						previousValue.LTA_Account_Buyers.Remove(this);
					}
					this._tbl_Partner.Entity = value;
					if ((value != null))
					{
						value.LTA_Account_Buyers.Add(this);
						this._AC_PRKey = value.PR_KEY;
					}
					else
					{
						this._AC_PRKey = default(int);
					}
					this.SendPropertyChanged("Buyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Partner_LTA_Account1", Storage="_Supplier", ThisKey="AC_SuplierRRKey", OtherKey="PR_KEY", IsForeignKey=true)]
		public dict_Partner Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				dict_Partner previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.LTA_Account_Suppliers.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.LTA_Account_Suppliers.Add(this);
						this._AC_SuplierRRKey = value.PR_KEY;
					}
					else
					{
						this._AC_SuplierRRKey = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FIN_DOCUMENT_LTA_Account", Storage="_FIN_DOCUMENT", ThisKey="AC_DCKey", OtherKey="DC_KEY", IsForeignKey=true)]
		internal FIN_DOCUMENT FIN_DOCUMENT
		{
			get
			{
				return this._FIN_DOCUMENT.Entity;
			}
			set
			{
				if ((this._FIN_DOCUMENT.Entity != value))
				{
					this.SendPropertyChanging();
					this._FIN_DOCUMENT.Entity = value;
					this.SendPropertyChanged("FIN_DOCUMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LTA_AccountServices(LTA_AccountService entity)
		{
			this.SendPropertyChanging();
			entity.LTA_Account = this;
		}
		
		private void detach_LTA_AccountServices(LTA_AccountService entity)
		{
			this.SendPropertyChanging();
			entity.LTA_Account = null;
		}
		
		private void attach_LTA_AccountDocuments(LTA_AccountDocument entity)
		{
			this.SendPropertyChanging();
			entity.LTA_Account = this;
		}
		
		private void detach_LTA_AccountDocuments(LTA_AccountDocument entity)
		{
			this.SendPropertyChanging();
			entity.LTA_Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LTA_AccountType")]
	public partial class LTA_AccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AT_ID;
		
		private string _AT_Name;
		
		private string _AT_NumPrefix;
		
		private System.Nullable<int> _AT_LastKey;
		
		private int _AT_BasePRKey;
		
		private EntitySet<LTA_Account> _LTA_Accounts;
		
		private EntitySet<dict_AccountDefaultService> _LTA_AccountDefaultServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAT_IDChanging(int value);
    partial void OnAT_IDChanged();
    partial void OnAT_NameChanging(string value);
    partial void OnAT_NameChanged();
    partial void OnAT_NumPrefixChanging(string value);
    partial void OnAT_NumPrefixChanged();
    partial void OnAT_LastKeyChanging(System.Nullable<int> value);
    partial void OnAT_LastKeyChanged();
    partial void OnAT_BasePRKeyChanging(int value);
    partial void OnAT_BasePRKeyChanged();
    #endregion
		
		public LTA_AccountType()
		{
			this._LTA_Accounts = new EntitySet<LTA_Account>(new Action<LTA_Account>(this.attach_LTA_Accounts), new Action<LTA_Account>(this.detach_LTA_Accounts));
			this._LTA_AccountDefaultServices = new EntitySet<dict_AccountDefaultService>(new Action<dict_AccountDefaultService>(this.attach_LTA_AccountDefaultServices), new Action<dict_AccountDefaultService>(this.detach_LTA_AccountDefaultServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AT_ID
		{
			get
			{
				return this._AT_ID;
			}
			set
			{
				if ((this._AT_ID != value))
				{
					this.OnAT_IDChanging(value);
					this.SendPropertyChanging();
					this._AT_ID = value;
					this.SendPropertyChanged("AT_ID");
					this.OnAT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AT_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AT_Name
		{
			get
			{
				return this._AT_Name;
			}
			set
			{
				if ((this._AT_Name != value))
				{
					this.OnAT_NameChanging(value);
					this.SendPropertyChanging();
					this._AT_Name = value;
					this.SendPropertyChanged("AT_Name");
					this.OnAT_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AT_NumPrefix", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string AT_NumPrefix
		{
			get
			{
				return this._AT_NumPrefix;
			}
			set
			{
				if ((this._AT_NumPrefix != value))
				{
					this.OnAT_NumPrefixChanging(value);
					this.SendPropertyChanging();
					this._AT_NumPrefix = value;
					this.SendPropertyChanged("AT_NumPrefix");
					this.OnAT_NumPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AT_LastKey", DbType="Int")]
		public System.Nullable<int> AT_LastKey
		{
			get
			{
				return this._AT_LastKey;
			}
			set
			{
				if ((this._AT_LastKey != value))
				{
					this.OnAT_LastKeyChanging(value);
					this.SendPropertyChanging();
					this._AT_LastKey = value;
					this.SendPropertyChanged("AT_LastKey");
					this.OnAT_LastKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AT_BasePRKey", DbType="Int NOT NULL")]
		public int AT_BasePRKey
		{
			get
			{
				return this._AT_BasePRKey;
			}
			set
			{
				if ((this._AT_BasePRKey != value))
				{
					this.OnAT_BasePRKeyChanging(value);
					this.SendPropertyChanging();
					this._AT_BasePRKey = value;
					this.SendPropertyChanged("AT_BasePRKey");
					this.OnAT_BasePRKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LTA_AccountType_LTA_Account", Storage="_LTA_Accounts", ThisKey="AT_ID", OtherKey="AC_ATID")]
		public EntitySet<LTA_Account> LTA_Accounts
		{
			get
			{
				return this._LTA_Accounts;
			}
			set
			{
				this._LTA_Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LTA_AccountType_dict_AccountDefaultService", Storage="_LTA_AccountDefaultServices", ThisKey="AT_ID", OtherKey="ADS_ATID")]
		public EntitySet<dict_AccountDefaultService> dict_AccountDefaultServices
		{
			get
			{
				return this._LTA_AccountDefaultServices;
			}
			set
			{
				this._LTA_AccountDefaultServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LTA_Accounts(LTA_Account entity)
		{
			this.SendPropertyChanging();
			entity.LTA_AccountType = this;
		}
		
		private void detach_LTA_Accounts(LTA_Account entity)
		{
			this.SendPropertyChanging();
			entity.LTA_AccountType = null;
		}
		
		private void attach_LTA_AccountDefaultServices(dict_AccountDefaultService entity)
		{
			this.SendPropertyChanging();
			entity.LTA_AccountType = this;
		}
		
		private void detach_LTA_AccountDefaultServices(dict_AccountDefaultService entity)
		{
			this.SendPropertyChanging();
			entity.LTA_AccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LTA_AccountDefaultService")]
	public partial class dict_AccountDefaultService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ADS_ID;
		
		private int _ADS_ATID = default(int);
		
		private string _ADS_Name;
		
		private double _ADS_Price;
		
		private EntityRef<LTA_AccountType> _LTA_AccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnADS_IDChanging(int value);
    partial void OnADS_IDChanged();
    partial void OnADS_NameChanging(string value);
    partial void OnADS_NameChanged();
    partial void OnADS_PriceChanging(double value);
    partial void OnADS_PriceChanged();
    #endregion
		
		public dict_AccountDefaultService()
		{
			this._LTA_AccountType = default(EntityRef<LTA_AccountType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADS_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ADS_ID
		{
			get
			{
				return this._ADS_ID;
			}
			set
			{
				if ((this._ADS_ID != value))
				{
					this.OnADS_IDChanging(value);
					this.SendPropertyChanging();
					this._ADS_ID = value;
					this.SendPropertyChanged("ADS_ID");
					this.OnADS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADS_ATID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ADS_ATID
		{
			get
			{
				return this._ADS_ATID;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADS_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ADS_Name
		{
			get
			{
				return this._ADS_Name;
			}
			set
			{
				if ((this._ADS_Name != value))
				{
					this.OnADS_NameChanging(value);
					this.SendPropertyChanging();
					this._ADS_Name = value;
					this.SendPropertyChanged("ADS_Name");
					this.OnADS_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADS_Price", DbType="Float NOT NULL")]
		public double ADS_Price
		{
			get
			{
				return this._ADS_Price;
			}
			set
			{
				if ((this._ADS_Price != value))
				{
					this.OnADS_PriceChanging(value);
					this.SendPropertyChanging();
					this._ADS_Price = value;
					this.SendPropertyChanged("ADS_Price");
					this.OnADS_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LTA_AccountType_dict_AccountDefaultService", Storage="_LTA_AccountType", ThisKey="ADS_ATID", OtherKey="AT_ID", IsForeignKey=true)]
		public LTA_AccountType LTA_AccountType
		{
			get
			{
				return this._LTA_AccountType.Entity;
			}
			set
			{
				LTA_AccountType previousValue = this._LTA_AccountType.Entity;
				if (((previousValue != value) 
							|| (this._LTA_AccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LTA_AccountType.Entity = null;
						previousValue.dict_AccountDefaultServices.Remove(this);
					}
					this._LTA_AccountType.Entity = value;
					if ((value != null))
					{
						value.dict_AccountDefaultServices.Add(this);
						this._ADS_ATID = value.AT_ID;
					}
					else
					{
						this._ADS_ATID = default(int);
					}
					this.SendPropertyChanged("LTA_AccountType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LTA_AccountService")]
	public partial class LTA_AccountService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AS_ID;
		
		private int _AS_ACID;
		
		private string _AS_Name;
		
		private int _AS_Count;
		
		private string _AS_CountType;
		
		private double _AS_Price;
		
		private double _AS_TotalPrice = default(double);
		
		private EntityRef<LTA_Account> _LTA_Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAS_IDChanging(int value);
    partial void OnAS_IDChanged();
    partial void OnAS_ACIDChanging(int value);
    partial void OnAS_ACIDChanged();
    partial void OnAS_NameChanging(string value);
    partial void OnAS_NameChanged();
    partial void OnAS_CountChanging(int value);
    partial void OnAS_CountChanged();
    partial void OnAS_CountTypeChanging(string value);
    partial void OnAS_CountTypeChanged();
    partial void OnAS_PriceChanging(double value);
    partial void OnAS_PriceChanged();
    #endregion
		
		public LTA_AccountService()
		{
			this._LTA_Account = default(EntityRef<LTA_Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AS_ID
		{
			get
			{
				return this._AS_ID;
			}
			set
			{
				if ((this._AS_ID != value))
				{
					this.OnAS_IDChanging(value);
					this.SendPropertyChanging();
					this._AS_ID = value;
					this.SendPropertyChanged("AS_ID");
					this.OnAS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_ACID", DbType="Int NOT NULL")]
		public int AS_ACID
		{
			get
			{
				return this._AS_ACID;
			}
			set
			{
				if ((this._AS_ACID != value))
				{
					if (this._LTA_Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAS_ACIDChanging(value);
					this.SendPropertyChanging();
					this._AS_ACID = value;
					this.SendPropertyChanged("AS_ACID");
					this.OnAS_ACIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AS_Name
		{
			get
			{
				return this._AS_Name;
			}
			set
			{
				if ((this._AS_Name != value))
				{
					this.OnAS_NameChanging(value);
					this.SendPropertyChanging();
					this._AS_Name = value;
					this.SendPropertyChanged("AS_Name");
					this.OnAS_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_Count", DbType="Int NOT NULL")]
		public int AS_Count
		{
			get
			{
				return this._AS_Count;
			}
			set
			{
				if ((this._AS_Count != value))
				{
					this.OnAS_CountChanging(value);
					this.SendPropertyChanging();
					this._AS_Count = value;
					this.SendPropertyChanged("AS_Count");
					this.OnAS_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_CountType", DbType="VarChar(10)")]
		public string AS_CountType
		{
			get
			{
				return this._AS_CountType;
			}
			set
			{
				if ((this._AS_CountType != value))
				{
					this.OnAS_CountTypeChanging(value);
					this.SendPropertyChanging();
					this._AS_CountType = value;
					this.SendPropertyChanged("AS_CountType");
					this.OnAS_CountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_Price", DbType="Float NOT NULL")]
		public double AS_Price
		{
			get
			{
				return this._AS_Price;
			}
			set
			{
				if ((this._AS_Price != value))
				{
					this.OnAS_PriceChanging(value);
					this.SendPropertyChanging();
					this._AS_Price = value;
					this.SendPropertyChanged("AS_Price");
					this.OnAS_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_TotalPrice", DbType="Float NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public double AS_TotalPrice
		{
			get
			{
				return this._AS_TotalPrice;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LTA_Account_LTA_AccountService", Storage="_LTA_Account", ThisKey="AS_ACID", OtherKey="AC_ID", IsForeignKey=true)]
		public LTA_Account LTA_Account
		{
			get
			{
				return this._LTA_Account.Entity;
			}
			set
			{
				LTA_Account previousValue = this._LTA_Account.Entity;
				if (((previousValue != value) 
							|| (this._LTA_Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LTA_Account.Entity = null;
						previousValue.LTA_AccountServices.Remove(this);
					}
					this._LTA_Account.Entity = value;
					if ((value != null))
					{
						value.LTA_AccountServices.Add(this);
						this._AS_ACID = value.AC_ID;
					}
					else
					{
						this._AS_ACID = default(int);
					}
					this.SendPropertyChanged("LTA_Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Partners")]
	public partial class dict_Partner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PR_KEY;
		
		private string _PR_FULLNAME;
		
		private string _PR_ACCOUNT;
		
		private string _PR_ADRESS;
		
		private string _PR_PHONES;
		
		private string _PR_FAX;
		
		private string _PR_EMAIL;
		
		private string _PR_CITY;
		
		private string _PR_FAX1;
		
		private string _PR_LEGALADDRESS;
		
		private string _PR_INN;
		
		private string _PR_KPP;
		
		private string _PR_CODEOKONH;
		
		private string _PR_CODEOKPO;
		
		private string _PR_POSTINDEX;
		
		private string _PR_LEGALPOSTINDEX;
		
		private string _PR_Name;
		
		private string _PR_COD;
		
		private EntitySet<LTA_Account> _LTA_Accounts;
		
		private EntitySet<LTA_Account> _LTA_Account_Suppliers;
		
		private EntitySet<dict_PrtAccount> _PrtAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPR_KEYChanging(int value);
    partial void OnPR_KEYChanged();
    partial void OnPR_FULLNAMEChanging(string value);
    partial void OnPR_FULLNAMEChanged();
    partial void OnPR_ACCOUNTChanging(string value);
    partial void OnPR_ACCOUNTChanged();
    partial void OnPR_ADRESSChanging(string value);
    partial void OnPR_ADRESSChanged();
    partial void OnPR_PHONESChanging(string value);
    partial void OnPR_PHONESChanged();
    partial void OnPR_FAXChanging(string value);
    partial void OnPR_FAXChanged();
    partial void OnPR_EMAILChanging(string value);
    partial void OnPR_EMAILChanged();
    partial void OnPR_CITYChanging(string value);
    partial void OnPR_CITYChanged();
    partial void OnPR_FAX1Changing(string value);
    partial void OnPR_FAX1Changed();
    partial void OnPR_LEGALADDRESSChanging(string value);
    partial void OnPR_LEGALADDRESSChanged();
    partial void OnPR_INNChanging(string value);
    partial void OnPR_INNChanged();
    partial void OnPR_KPPChanging(string value);
    partial void OnPR_KPPChanged();
    partial void OnPR_CODEOKONHChanging(string value);
    partial void OnPR_CODEOKONHChanged();
    partial void OnPR_CODEOKPOChanging(string value);
    partial void OnPR_CODEOKPOChanged();
    partial void OnPR_POSTINDEXChanging(string value);
    partial void OnPR_POSTINDEXChanged();
    partial void OnPR_LEGALPOSTINDEXChanging(string value);
    partial void OnPR_LEGALPOSTINDEXChanged();
    partial void OnPR_NameChanging(string value);
    partial void OnPR_NameChanged();
    partial void OnPR_CODChanging(string value);
    partial void OnPR_CODChanged();
    #endregion
		
		public dict_Partner()
		{
			this._LTA_Accounts = new EntitySet<LTA_Account>(new Action<LTA_Account>(this.attach_LTA_Accounts), new Action<LTA_Account>(this.detach_LTA_Accounts));
			this._LTA_Account_Suppliers = new EntitySet<LTA_Account>(new Action<LTA_Account>(this.attach_LTA_Account_Suppliers), new Action<LTA_Account>(this.detach_LTA_Account_Suppliers));
			this._PrtAccounts = new EntitySet<dict_PrtAccount>(new Action<dict_PrtAccount>(this.attach_PrtAccounts), new Action<dict_PrtAccount>(this.detach_PrtAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int PR_KEY
		{
			get
			{
				return this._PR_KEY;
			}
			set
			{
				if ((this._PR_KEY != value))
				{
					this.OnPR_KEYChanging(value);
					this.SendPropertyChanging();
					this._PR_KEY = value;
					this.SendPropertyChanged("PR_KEY");
					this.OnPR_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_FULLNAME", DbType="VarChar(160)", UpdateCheck=UpdateCheck.Never)]
		public string PR_FULLNAME
		{
			get
			{
				return this._PR_FULLNAME;
			}
			set
			{
				if ((this._PR_FULLNAME != value))
				{
					this.OnPR_FULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._PR_FULLNAME = value;
					this.SendPropertyChanged("PR_FULLNAME");
					this.OnPR_FULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_ACCOUNT", DbType="VarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string PR_ACCOUNT
		{
			get
			{
				return this._PR_ACCOUNT;
			}
			set
			{
				if ((this._PR_ACCOUNT != value))
				{
					this.OnPR_ACCOUNTChanging(value);
					this.SendPropertyChanging();
					this._PR_ACCOUNT = value;
					this.SendPropertyChanged("PR_ACCOUNT");
					this.OnPR_ACCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_ADRESS", DbType="VarChar(160)", UpdateCheck=UpdateCheck.Never)]
		public string PR_ADRESS
		{
			get
			{
				return this._PR_ADRESS;
			}
			set
			{
				if ((this._PR_ADRESS != value))
				{
					this.OnPR_ADRESSChanging(value);
					this.SendPropertyChanging();
					this._PR_ADRESS = value;
					this.SendPropertyChanged("PR_ADRESS");
					this.OnPR_ADRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_PHONES", DbType="VarChar(254)", UpdateCheck=UpdateCheck.Never)]
		public string PR_PHONES
		{
			get
			{
				return this._PR_PHONES;
			}
			set
			{
				if ((this._PR_PHONES != value))
				{
					this.OnPR_PHONESChanging(value);
					this.SendPropertyChanging();
					this._PR_PHONES = value;
					this.SendPropertyChanged("PR_PHONES");
					this.OnPR_PHONESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_FAX", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string PR_FAX
		{
			get
			{
				return this._PR_FAX;
			}
			set
			{
				if ((this._PR_FAX != value))
				{
					this.OnPR_FAXChanging(value);
					this.SendPropertyChanging();
					this._PR_FAX = value;
					this.SendPropertyChanged("PR_FAX");
					this.OnPR_FAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_EMAIL", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PR_EMAIL
		{
			get
			{
				return this._PR_EMAIL;
			}
			set
			{
				if ((this._PR_EMAIL != value))
				{
					this.OnPR_EMAILChanging(value);
					this.SendPropertyChanging();
					this._PR_EMAIL = value;
					this.SendPropertyChanged("PR_EMAIL");
					this.OnPR_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_CITY", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PR_CITY
		{
			get
			{
				return this._PR_CITY;
			}
			set
			{
				if ((this._PR_CITY != value))
				{
					this.OnPR_CITYChanging(value);
					this.SendPropertyChanging();
					this._PR_CITY = value;
					this.SendPropertyChanged("PR_CITY");
					this.OnPR_CITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_FAX1", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string PR_FAX1
		{
			get
			{
				return this._PR_FAX1;
			}
			set
			{
				if ((this._PR_FAX1 != value))
				{
					this.OnPR_FAX1Changing(value);
					this.SendPropertyChanging();
					this._PR_FAX1 = value;
					this.SendPropertyChanged("PR_FAX1");
					this.OnPR_FAX1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_LEGALADDRESS", DbType="VarChar(160)", UpdateCheck=UpdateCheck.Never)]
		public string PR_LEGALADDRESS
		{
			get
			{
				return this._PR_LEGALADDRESS;
			}
			set
			{
				if ((this._PR_LEGALADDRESS != value))
				{
					this.OnPR_LEGALADDRESSChanging(value);
					this.SendPropertyChanging();
					this._PR_LEGALADDRESS = value;
					this.SendPropertyChanged("PR_LEGALADDRESS");
					this.OnPR_LEGALADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_INN", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PR_INN
		{
			get
			{
				return this._PR_INN;
			}
			set
			{
				if ((this._PR_INN != value))
				{
					this.OnPR_INNChanging(value);
					this.SendPropertyChanging();
					this._PR_INN = value;
					this.SendPropertyChanged("PR_INN");
					this.OnPR_INNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_KPP", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string PR_KPP
		{
			get
			{
				return this._PR_KPP;
			}
			set
			{
				if ((this._PR_KPP != value))
				{
					this.OnPR_KPPChanging(value);
					this.SendPropertyChanging();
					this._PR_KPP = value;
					this.SendPropertyChanged("PR_KPP");
					this.OnPR_KPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_CODEOKONH", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string PR_CODEOKONH
		{
			get
			{
				return this._PR_CODEOKONH;
			}
			set
			{
				if ((this._PR_CODEOKONH != value))
				{
					this.OnPR_CODEOKONHChanging(value);
					this.SendPropertyChanging();
					this._PR_CODEOKONH = value;
					this.SendPropertyChanged("PR_CODEOKONH");
					this.OnPR_CODEOKONHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_CODEOKPO", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string PR_CODEOKPO
		{
			get
			{
				return this._PR_CODEOKPO;
			}
			set
			{
				if ((this._PR_CODEOKPO != value))
				{
					this.OnPR_CODEOKPOChanging(value);
					this.SendPropertyChanging();
					this._PR_CODEOKPO = value;
					this.SendPropertyChanged("PR_CODEOKPO");
					this.OnPR_CODEOKPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_POSTINDEX", DbType="VarChar(6)", UpdateCheck=UpdateCheck.Never)]
		public string PR_POSTINDEX
		{
			get
			{
				return this._PR_POSTINDEX;
			}
			set
			{
				if ((this._PR_POSTINDEX != value))
				{
					this.OnPR_POSTINDEXChanging(value);
					this.SendPropertyChanging();
					this._PR_POSTINDEX = value;
					this.SendPropertyChanged("PR_POSTINDEX");
					this.OnPR_POSTINDEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_LEGALPOSTINDEX", DbType="VarChar(6)", UpdateCheck=UpdateCheck.Never)]
		public string PR_LEGALPOSTINDEX
		{
			get
			{
				return this._PR_LEGALPOSTINDEX;
			}
			set
			{
				if ((this._PR_LEGALPOSTINDEX != value))
				{
					this.OnPR_LEGALPOSTINDEXChanging(value);
					this.SendPropertyChanging();
					this._PR_LEGALPOSTINDEX = value;
					this.SendPropertyChanged("PR_LEGALPOSTINDEX");
					this.OnPR_LEGALPOSTINDEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_Name", DbType="varchar(50) not null", CanBeNull=false)]
		public string PR_Name
		{
			get
			{
				return this._PR_Name;
			}
			set
			{
				if ((this._PR_Name != value))
				{
					this.OnPR_NameChanging(value);
					this.SendPropertyChanging();
					this._PR_Name = value;
					this.SendPropertyChanged("PR_Name");
					this.OnPR_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_COD", DbType="varchar(6)")]
		public string PR_COD
		{
			get
			{
				return this._PR_COD;
			}
			set
			{
				if ((this._PR_COD != value))
				{
					this.OnPR_CODChanging(value);
					this.SendPropertyChanging();
					this._PR_COD = value;
					this.SendPropertyChanged("PR_COD");
					this.OnPR_CODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Partner_LTA_Account", Storage="_LTA_Accounts", ThisKey="PR_KEY", OtherKey="AC_PRKey")]
		public EntitySet<LTA_Account> LTA_Account_Buyers
		{
			get
			{
				return this._LTA_Accounts;
			}
			set
			{
				this._LTA_Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Partner_LTA_Account1", Storage="_LTA_Account_Suppliers", ThisKey="PR_KEY", OtherKey="AC_SuplierRRKey")]
		public EntitySet<LTA_Account> LTA_Account_Suppliers
		{
			get
			{
				return this._LTA_Account_Suppliers;
			}
			set
			{
				this._LTA_Account_Suppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Partner_dict_PrtAccount", Storage="_PrtAccounts", ThisKey="PR_KEY", OtherKey="PA_PRKey")]
		public EntitySet<dict_PrtAccount> dict_PrtAccounts
		{
			get
			{
				return this._PrtAccounts;
			}
			set
			{
				this._PrtAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LTA_Accounts(LTA_Account entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = this;
		}
		
		private void detach_LTA_Accounts(LTA_Account entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = null;
		}
		
		private void attach_LTA_Account_Suppliers(LTA_Account entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_LTA_Account_Suppliers(LTA_Account entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_PrtAccounts(dict_PrtAccount entity)
		{
			this.SendPropertyChanging();
			entity.dict_Partner = this;
		}
		
		private void detach_PrtAccounts(dict_PrtAccount entity)
		{
			this.SendPropertyChanging();
			entity.dict_Partner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rates")]
	public partial class dict_Rate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RA_CODE;
		
		private int _ra_key;
		
		private System.Nullable<short> _RA_National;
		
		private EntitySet<dict_PrtAccount> _PrtAccounts;
		
		private EntitySet<FIN_BILL_OUT> _FIN_BILL_OUTs;
		
		private EntitySet<FIN_DOCUMENT> _FIN_DOCUMENTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRA_CODEChanging(string value);
    partial void OnRA_CODEChanged();
    partial void OnRA_KeyChanging(int value);
    partial void OnRA_KeyChanged();
    partial void OnRA_NationalChanging(System.Nullable<short> value);
    partial void OnRA_NationalChanged();
    #endregion
		
		public dict_Rate()
		{
			this._PrtAccounts = new EntitySet<dict_PrtAccount>(new Action<dict_PrtAccount>(this.attach_PrtAccounts), new Action<dict_PrtAccount>(this.detach_PrtAccounts));
			this._FIN_BILL_OUTs = new EntitySet<FIN_BILL_OUT>(new Action<FIN_BILL_OUT>(this.attach_FIN_BILL_OUTs), new Action<FIN_BILL_OUT>(this.detach_FIN_BILL_OUTs));
			this._FIN_DOCUMENTs = new EntitySet<FIN_DOCUMENT>(new Action<FIN_DOCUMENT>(this.attach_FIN_DOCUMENTs), new Action<FIN_DOCUMENT>(this.detach_FIN_DOCUMENTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RA_CODE", DbType="VarChar(3) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RA_CODE
		{
			get
			{
				return this._RA_CODE;
			}
			set
			{
				if ((this._RA_CODE != value))
				{
					this.OnRA_CODEChanging(value);
					this.SendPropertyChanging();
					this._RA_CODE = value;
					this.SendPropertyChanged("RA_CODE");
					this.OnRA_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ra_key", Storage="_ra_key", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int RA_Key
		{
			get
			{
				return this._ra_key;
			}
			set
			{
				if ((this._ra_key != value))
				{
					this.OnRA_KeyChanging(value);
					this.SendPropertyChanging();
					this._ra_key = value;
					this.SendPropertyChanged("RA_Key");
					this.OnRA_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RA_National", DbType="SmallInt")]
		public System.Nullable<short> RA_National
		{
			get
			{
				return this._RA_National;
			}
			set
			{
				if ((this._RA_National != value))
				{
					this.OnRA_NationalChanging(value);
					this.SendPropertyChanging();
					this._RA_National = value;
					this.SendPropertyChanged("RA_National");
					this.OnRA_NationalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Rate_dict_PrtAccount", Storage="_PrtAccounts", ThisKey="RA_Key", OtherKey="PA_RAKey")]
		public EntitySet<dict_PrtAccount> dict_PrtAccounts
		{
			get
			{
				return this._PrtAccounts;
			}
			set
			{
				this._PrtAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Rate_FIN_BILL_OUT", Storage="_FIN_BILL_OUTs", ThisKey="RA_CODE", OtherKey="BI_RATE")]
		public EntitySet<FIN_BILL_OUT> FIN_BILL_OUTs
		{
			get
			{
				return this._FIN_BILL_OUTs;
			}
			set
			{
				this._FIN_BILL_OUTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Rate_FIN_DOCUMENT", Storage="_FIN_DOCUMENTs", ThisKey="RA_CODE", OtherKey="DC_RATE")]
		public EntitySet<FIN_DOCUMENT> FIN_DOCUMENTs
		{
			get
			{
				return this._FIN_DOCUMENTs;
			}
			set
			{
				this._FIN_DOCUMENTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PrtAccounts(dict_PrtAccount entity)
		{
			this.SendPropertyChanging();
			entity.dict_Rate = this;
		}
		
		private void detach_PrtAccounts(dict_PrtAccount entity)
		{
			this.SendPropertyChanging();
			entity.dict_Rate = null;
		}
		
		private void attach_FIN_BILL_OUTs(FIN_BILL_OUT entity)
		{
			this.SendPropertyChanging();
			entity.dict_Rate = this;
		}
		
		private void detach_FIN_BILL_OUTs(FIN_BILL_OUT entity)
		{
			this.SendPropertyChanging();
			entity.dict_Rate = null;
		}
		
		private void attach_FIN_DOCUMENTs(FIN_DOCUMENT entity)
		{
			this.SendPropertyChanging();
			entity.dict_Rate = this;
		}
		
		private void detach_FIN_DOCUMENTs(FIN_DOCUMENT entity)
		{
			this.SendPropertyChanging();
			entity.dict_Rate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrtAccounts")]
	public partial class dict_PrtAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PA_Key;
		
		private int _PA_PRKey;
		
		private int _PA_BNKey;
		
		private string _PA_Account;
		
		private System.Nullable<int> _PA_RAKey;
		
		private EntityRef<dict_Rate> _Rate;
		
		private EntityRef<dict_PrtBank> _Bank;
		
		private EntityRef<dict_Partner> _tbl_Partner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPA_KeyChanging(int value);
    partial void OnPA_KeyChanged();
    partial void OnPA_PRKeyChanging(int value);
    partial void OnPA_PRKeyChanged();
    partial void OnPA_BNKeyChanging(int value);
    partial void OnPA_BNKeyChanged();
    partial void OnPA_AccountChanging(string value);
    partial void OnPA_AccountChanged();
    partial void OnPA_RAKeyChanging(System.Nullable<int> value);
    partial void OnPA_RAKeyChanged();
    #endregion
		
		public dict_PrtAccount()
		{
			this._Rate = default(EntityRef<dict_Rate>);
			this._Bank = default(EntityRef<dict_PrtBank>);
			this._tbl_Partner = default(EntityRef<dict_Partner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PA_Key", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PA_Key
		{
			get
			{
				return this._PA_Key;
			}
			set
			{
				if ((this._PA_Key != value))
				{
					this.OnPA_KeyChanging(value);
					this.SendPropertyChanging();
					this._PA_Key = value;
					this.SendPropertyChanged("PA_Key");
					this.OnPA_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PA_PRKey", DbType="Int NOT NULL")]
		public int PA_PRKey
		{
			get
			{
				return this._PA_PRKey;
			}
			set
			{
				if ((this._PA_PRKey != value))
				{
					if (this._tbl_Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPA_PRKeyChanging(value);
					this.SendPropertyChanging();
					this._PA_PRKey = value;
					this.SendPropertyChanged("PA_PRKey");
					this.OnPA_PRKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PA_BNKey", DbType="Int NOT NULL")]
		public int PA_BNKey
		{
			get
			{
				return this._PA_BNKey;
			}
			set
			{
				if ((this._PA_BNKey != value))
				{
					if (this._Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPA_BNKeyChanging(value);
					this.SendPropertyChanging();
					this._PA_BNKey = value;
					this.SendPropertyChanged("PA_BNKey");
					this.OnPA_BNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PA_Account", DbType="VarChar(40)")]
		public string PA_Account
		{
			get
			{
				return this._PA_Account;
			}
			set
			{
				if ((this._PA_Account != value))
				{
					this.OnPA_AccountChanging(value);
					this.SendPropertyChanging();
					this._PA_Account = value;
					this.SendPropertyChanged("PA_Account");
					this.OnPA_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PA_RAKey", DbType="Int")]
		public System.Nullable<int> PA_RAKey
		{
			get
			{
				return this._PA_RAKey;
			}
			set
			{
				if ((this._PA_RAKey != value))
				{
					if (this._Rate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPA_RAKeyChanging(value);
					this.SendPropertyChanging();
					this._PA_RAKey = value;
					this.SendPropertyChanged("PA_RAKey");
					this.OnPA_RAKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Rate_dict_PrtAccount", Storage="_Rate", ThisKey="PA_RAKey", OtherKey="RA_Key", IsForeignKey=true)]
		public dict_Rate dict_Rate
		{
			get
			{
				return this._Rate.Entity;
			}
			set
			{
				dict_Rate previousValue = this._Rate.Entity;
				if (((previousValue != value) 
							|| (this._Rate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rate.Entity = null;
						previousValue.dict_PrtAccounts.Remove(this);
					}
					this._Rate.Entity = value;
					if ((value != null))
					{
						value.dict_PrtAccounts.Add(this);
						this._PA_RAKey = value.RA_Key;
					}
					else
					{
						this._PA_RAKey = default(Nullable<int>);
					}
					this.SendPropertyChanged("dict_Rate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_PrtBank_dict_PrtAccount", Storage="_Bank", ThisKey="PA_BNKey", OtherKey="BN_Key", IsForeignKey=true)]
		public dict_PrtBank dict_PrtBank
		{
			get
			{
				return this._Bank.Entity;
			}
			set
			{
				dict_PrtBank previousValue = this._Bank.Entity;
				if (((previousValue != value) 
							|| (this._Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank.Entity = null;
						previousValue.dict_PrtAccounts.Remove(this);
					}
					this._Bank.Entity = value;
					if ((value != null))
					{
						value.dict_PrtAccounts.Add(this);
						this._PA_BNKey = value.BN_Key;
					}
					else
					{
						this._PA_BNKey = default(int);
					}
					this.SendPropertyChanged("dict_PrtBank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Partner_dict_PrtAccount", Storage="_tbl_Partner", ThisKey="PA_PRKey", OtherKey="PR_KEY", IsForeignKey=true)]
		public dict_Partner dict_Partner
		{
			get
			{
				return this._tbl_Partner.Entity;
			}
			set
			{
				dict_Partner previousValue = this._tbl_Partner.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Partner.Entity = null;
						previousValue.dict_PrtAccounts.Remove(this);
					}
					this._tbl_Partner.Entity = value;
					if ((value != null))
					{
						value.dict_PrtAccounts.Add(this);
						this._PA_PRKey = value.PR_KEY;
					}
					else
					{
						this._PA_PRKey = default(int);
					}
					this.SendPropertyChanged("dict_Partner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banks")]
	public partial class dict_PrtBank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BN_Key;
		
		private string _BN_Name;
		
		private string _BN_BIK;
		
		private string _BN_CorAccount;
		
		private EntitySet<dict_PrtAccount> _PrtAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBN_KeyChanging(int value);
    partial void OnBN_KeyChanged();
    partial void OnBN_NameChanging(string value);
    partial void OnBN_NameChanged();
    partial void OnBN_BIKChanging(string value);
    partial void OnBN_BIKChanged();
    partial void OnBN_CorAccountChanging(string value);
    partial void OnBN_CorAccountChanged();
    #endregion
		
		public dict_PrtBank()
		{
			this._PrtAccounts = new EntitySet<dict_PrtAccount>(new Action<dict_PrtAccount>(this.attach_PrtAccounts), new Action<dict_PrtAccount>(this.detach_PrtAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BN_Key", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BN_Key
		{
			get
			{
				return this._BN_Key;
			}
			set
			{
				if ((this._BN_Key != value))
				{
					this.OnBN_KeyChanging(value);
					this.SendPropertyChanging();
					this._BN_Key = value;
					this.SendPropertyChanged("BN_Key");
					this.OnBN_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BN_Name", DbType="VarChar(100)")]
		public string BN_Name
		{
			get
			{
				return this._BN_Name;
			}
			set
			{
				if ((this._BN_Name != value))
				{
					this.OnBN_NameChanging(value);
					this.SendPropertyChanging();
					this._BN_Name = value;
					this.SendPropertyChanged("BN_Name");
					this.OnBN_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BN_BIK", DbType="VarChar(30)")]
		public string BN_BIK
		{
			get
			{
				return this._BN_BIK;
			}
			set
			{
				if ((this._BN_BIK != value))
				{
					this.OnBN_BIKChanging(value);
					this.SendPropertyChanging();
					this._BN_BIK = value;
					this.SendPropertyChanged("BN_BIK");
					this.OnBN_BIKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BN_CorAccount", DbType="VarChar(30)")]
		public string BN_CorAccount
		{
			get
			{
				return this._BN_CorAccount;
			}
			set
			{
				if ((this._BN_CorAccount != value))
				{
					this.OnBN_CorAccountChanging(value);
					this.SendPropertyChanging();
					this._BN_CorAccount = value;
					this.SendPropertyChanged("BN_CorAccount");
					this.OnBN_CorAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_PrtBank_dict_PrtAccount", Storage="_PrtAccounts", ThisKey="BN_Key", OtherKey="PA_BNKey")]
		public EntitySet<dict_PrtAccount> dict_PrtAccounts
		{
			get
			{
				return this._PrtAccounts;
			}
			set
			{
				this._PrtAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PrtAccounts(dict_PrtAccount entity)
		{
			this.SendPropertyChanging();
			entity.dict_PrtBank = this;
		}
		
		private void detach_PrtAccounts(dict_PrtAccount entity)
		{
			this.SendPropertyChanging();
			entity.dict_PrtBank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FIN_BILL_OUT")]
	public partial class FIN_BILL_OUT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BI_KEY;
		
		private System.Nullable<double> _BI_PAYEDBASE;
		
		private System.Nullable<System.DateTime> _BI_DATE_INVOICE;
		
		private System.Nullable<System.DateTime> _BI_DATE_PROCESS;
		
		private string _BI_OUTNUM;
		
		private System.Nullable<int> _BI_FRKEY;
		
		private System.Nullable<double> _BI_SUM;
		
		private System.Nullable<double> _BI_SUM_BASE;
		
		private System.Nullable<double> _BI_SUM_NATIONAL;
		
		private string _BI_RATE;
		
		private string _BI_COMMENT;
		
		private System.Nullable<int> _BI_PARTNERKEY;
		
		private System.Nullable<int> _BI_CREATOR;
		
		private System.Nullable<short> _BI_ISAVIA;
		
		private System.Nullable<System.DateTime> _BI_ACCDATE;
		
		private System.Nullable<int> _BI_ACCNUMBER;
		
		private int _BI_DOCKEY;
		
		private System.Nullable<double> _BI_NDS;
		
		private System.Nullable<double> _BI_PAYED;
		
		private int _BI_ACTIONTYPE;
		
		private System.Nullable<double> _BI_PERCENT;
		
		private int _BI_OFKEY;
		
		private System.Nullable<short> _BI_ANNULATED;
		
		private short _BI_LOCKED;
		
		private System.Nullable<System.DateTime> _BI_ANNULDATE;
		
		private System.Nullable<System.DateTime> _BI_DEADLINEDATE;
		
		private System.Nullable<short> _BI_PAYWITHCOMISSION;
		
		private EntityRef<dict_Rate> _dict_Rate;
		
		private EntityRef<FIN_DOCUMENT> _FIN_DOCUMENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBI_KEYChanging(int value);
    partial void OnBI_KEYChanged();
    partial void OnBI_PAYEDBASEChanging(System.Nullable<double> value);
    partial void OnBI_PAYEDBASEChanged();
    partial void OnBI_DATE_INVOICEChanging(System.Nullable<System.DateTime> value);
    partial void OnBI_DATE_INVOICEChanged();
    partial void OnBI_DATE_PROCESSChanging(System.Nullable<System.DateTime> value);
    partial void OnBI_DATE_PROCESSChanged();
    partial void OnBI_OUTNUMChanging(string value);
    partial void OnBI_OUTNUMChanged();
    partial void OnBI_FRKEYChanging(System.Nullable<int> value);
    partial void OnBI_FRKEYChanged();
    partial void OnBI_SUMChanging(System.Nullable<double> value);
    partial void OnBI_SUMChanged();
    partial void OnBI_SUM_BASEChanging(System.Nullable<double> value);
    partial void OnBI_SUM_BASEChanged();
    partial void OnBI_SUM_NATIONALChanging(System.Nullable<double> value);
    partial void OnBI_SUM_NATIONALChanged();
    partial void OnBI_RATEChanging(string value);
    partial void OnBI_RATEChanged();
    partial void OnBI_COMMENTChanging(string value);
    partial void OnBI_COMMENTChanged();
    partial void OnBI_PARTNERKEYChanging(System.Nullable<int> value);
    partial void OnBI_PARTNERKEYChanged();
    partial void OnBI_CREATORChanging(System.Nullable<int> value);
    partial void OnBI_CREATORChanged();
    partial void OnBI_ISAVIAChanging(System.Nullable<short> value);
    partial void OnBI_ISAVIAChanged();
    partial void OnBI_ACCDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnBI_ACCDATEChanged();
    partial void OnBI_ACCNUMBERChanging(System.Nullable<int> value);
    partial void OnBI_ACCNUMBERChanged();
    partial void OnBI_DOCKEYChanging(int value);
    partial void OnBI_DOCKEYChanged();
    partial void OnBI_NDSChanging(System.Nullable<double> value);
    partial void OnBI_NDSChanged();
    partial void OnBI_PAYEDChanging(System.Nullable<double> value);
    partial void OnBI_PAYEDChanged();
    partial void OnBI_ACTIONTYPEChanging(int value);
    partial void OnBI_ACTIONTYPEChanged();
    partial void OnBI_PERCENTChanging(System.Nullable<double> value);
    partial void OnBI_PERCENTChanged();
    partial void OnBI_OFKEYChanging(int value);
    partial void OnBI_OFKEYChanged();
    partial void OnBI_ANNULATEDChanging(System.Nullable<short> value);
    partial void OnBI_ANNULATEDChanged();
    partial void OnBI_LOCKEDChanging(short value);
    partial void OnBI_LOCKEDChanged();
    partial void OnBI_ANNULDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnBI_ANNULDATEChanged();
    partial void OnBI_DEADLINEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnBI_DEADLINEDATEChanged();
    partial void OnBI_PAYWITHCOMISSIONChanging(System.Nullable<short> value);
    partial void OnBI_PAYWITHCOMISSIONChanged();
    #endregion
		
		public FIN_BILL_OUT()
		{
			this._dict_Rate = default(EntityRef<dict_Rate>);
			this._FIN_DOCUMENT = default(EntityRef<FIN_DOCUMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_KEY", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BI_KEY
		{
			get
			{
				return this._BI_KEY;
			}
			set
			{
				if ((this._BI_KEY != value))
				{
					this.OnBI_KEYChanging(value);
					this.SendPropertyChanging();
					this._BI_KEY = value;
					this.SendPropertyChanged("BI_KEY");
					this.OnBI_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_PAYEDBASE", DbType="Float")]
		public System.Nullable<double> BI_PAYEDBASE
		{
			get
			{
				return this._BI_PAYEDBASE;
			}
			set
			{
				if ((this._BI_PAYEDBASE != value))
				{
					this.OnBI_PAYEDBASEChanging(value);
					this.SendPropertyChanging();
					this._BI_PAYEDBASE = value;
					this.SendPropertyChanged("BI_PAYEDBASE");
					this.OnBI_PAYEDBASEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_DATE_INVOICE", DbType="DateTime")]
		public System.Nullable<System.DateTime> BI_DATE_INVOICE
		{
			get
			{
				return this._BI_DATE_INVOICE;
			}
			set
			{
				if ((this._BI_DATE_INVOICE != value))
				{
					this.OnBI_DATE_INVOICEChanging(value);
					this.SendPropertyChanging();
					this._BI_DATE_INVOICE = value;
					this.SendPropertyChanged("BI_DATE_INVOICE");
					this.OnBI_DATE_INVOICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_DATE_PROCESS", DbType="DateTime")]
		public System.Nullable<System.DateTime> BI_DATE_PROCESS
		{
			get
			{
				return this._BI_DATE_PROCESS;
			}
			set
			{
				if ((this._BI_DATE_PROCESS != value))
				{
					this.OnBI_DATE_PROCESSChanging(value);
					this.SendPropertyChanging();
					this._BI_DATE_PROCESS = value;
					this.SendPropertyChanged("BI_DATE_PROCESS");
					this.OnBI_DATE_PROCESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_OUTNUM", DbType="VarChar(20)")]
		public string BI_OUTNUM
		{
			get
			{
				return this._BI_OUTNUM;
			}
			set
			{
				if ((this._BI_OUTNUM != value))
				{
					this.OnBI_OUTNUMChanging(value);
					this.SendPropertyChanging();
					this._BI_OUTNUM = value;
					this.SendPropertyChanged("BI_OUTNUM");
					this.OnBI_OUTNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_FRKEY", DbType="Int")]
		public System.Nullable<int> BI_FRKEY
		{
			get
			{
				return this._BI_FRKEY;
			}
			set
			{
				if ((this._BI_FRKEY != value))
				{
					this.OnBI_FRKEYChanging(value);
					this.SendPropertyChanging();
					this._BI_FRKEY = value;
					this.SendPropertyChanged("BI_FRKEY");
					this.OnBI_FRKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_SUM", DbType="Float")]
		public System.Nullable<double> BI_SUM
		{
			get
			{
				return this._BI_SUM;
			}
			set
			{
				if ((this._BI_SUM != value))
				{
					this.OnBI_SUMChanging(value);
					this.SendPropertyChanging();
					this._BI_SUM = value;
					this.SendPropertyChanged("BI_SUM");
					this.OnBI_SUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_SUM_BASE", DbType="Float")]
		public System.Nullable<double> BI_SUM_BASE
		{
			get
			{
				return this._BI_SUM_BASE;
			}
			set
			{
				if ((this._BI_SUM_BASE != value))
				{
					this.OnBI_SUM_BASEChanging(value);
					this.SendPropertyChanging();
					this._BI_SUM_BASE = value;
					this.SendPropertyChanged("BI_SUM_BASE");
					this.OnBI_SUM_BASEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_SUM_NATIONAL", DbType="Float")]
		public System.Nullable<double> BI_SUM_NATIONAL
		{
			get
			{
				return this._BI_SUM_NATIONAL;
			}
			set
			{
				if ((this._BI_SUM_NATIONAL != value))
				{
					this.OnBI_SUM_NATIONALChanging(value);
					this.SendPropertyChanging();
					this._BI_SUM_NATIONAL = value;
					this.SendPropertyChanged("BI_SUM_NATIONAL");
					this.OnBI_SUM_NATIONALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_RATE", DbType="VarChar(3)")]
		public string BI_RATE
		{
			get
			{
				return this._BI_RATE;
			}
			set
			{
				if ((this._BI_RATE != value))
				{
					if (this._dict_Rate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBI_RATEChanging(value);
					this.SendPropertyChanging();
					this._BI_RATE = value;
					this.SendPropertyChanged("BI_RATE");
					this.OnBI_RATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_COMMENT", DbType="VarChar(254)")]
		public string BI_COMMENT
		{
			get
			{
				return this._BI_COMMENT;
			}
			set
			{
				if ((this._BI_COMMENT != value))
				{
					this.OnBI_COMMENTChanging(value);
					this.SendPropertyChanging();
					this._BI_COMMENT = value;
					this.SendPropertyChanged("BI_COMMENT");
					this.OnBI_COMMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_PARTNERKEY", DbType="Int")]
		public System.Nullable<int> BI_PARTNERKEY
		{
			get
			{
				return this._BI_PARTNERKEY;
			}
			set
			{
				if ((this._BI_PARTNERKEY != value))
				{
					this.OnBI_PARTNERKEYChanging(value);
					this.SendPropertyChanging();
					this._BI_PARTNERKEY = value;
					this.SendPropertyChanged("BI_PARTNERKEY");
					this.OnBI_PARTNERKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_CREATOR", DbType="Int")]
		public System.Nullable<int> BI_CREATOR
		{
			get
			{
				return this._BI_CREATOR;
			}
			set
			{
				if ((this._BI_CREATOR != value))
				{
					this.OnBI_CREATORChanging(value);
					this.SendPropertyChanging();
					this._BI_CREATOR = value;
					this.SendPropertyChanged("BI_CREATOR");
					this.OnBI_CREATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_ISAVIA", DbType="SmallInt")]
		public System.Nullable<short> BI_ISAVIA
		{
			get
			{
				return this._BI_ISAVIA;
			}
			set
			{
				if ((this._BI_ISAVIA != value))
				{
					this.OnBI_ISAVIAChanging(value);
					this.SendPropertyChanging();
					this._BI_ISAVIA = value;
					this.SendPropertyChanged("BI_ISAVIA");
					this.OnBI_ISAVIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_ACCDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> BI_ACCDATE
		{
			get
			{
				return this._BI_ACCDATE;
			}
			set
			{
				if ((this._BI_ACCDATE != value))
				{
					this.OnBI_ACCDATEChanging(value);
					this.SendPropertyChanging();
					this._BI_ACCDATE = value;
					this.SendPropertyChanged("BI_ACCDATE");
					this.OnBI_ACCDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_ACCNUMBER", DbType="Int")]
		public System.Nullable<int> BI_ACCNUMBER
		{
			get
			{
				return this._BI_ACCNUMBER;
			}
			set
			{
				if ((this._BI_ACCNUMBER != value))
				{
					this.OnBI_ACCNUMBERChanging(value);
					this.SendPropertyChanging();
					this._BI_ACCNUMBER = value;
					this.SendPropertyChanged("BI_ACCNUMBER");
					this.OnBI_ACCNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_DOCKEY", DbType="Int NOT NULL")]
		public int BI_DOCKEY
		{
			get
			{
				return this._BI_DOCKEY;
			}
			set
			{
				if ((this._BI_DOCKEY != value))
				{
					if (this._FIN_DOCUMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBI_DOCKEYChanging(value);
					this.SendPropertyChanging();
					this._BI_DOCKEY = value;
					this.SendPropertyChanged("BI_DOCKEY");
					this.OnBI_DOCKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_NDS", DbType="Float")]
		public System.Nullable<double> BI_NDS
		{
			get
			{
				return this._BI_NDS;
			}
			set
			{
				if ((this._BI_NDS != value))
				{
					this.OnBI_NDSChanging(value);
					this.SendPropertyChanging();
					this._BI_NDS = value;
					this.SendPropertyChanged("BI_NDS");
					this.OnBI_NDSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_PAYED", DbType="Float")]
		public System.Nullable<double> BI_PAYED
		{
			get
			{
				return this._BI_PAYED;
			}
			set
			{
				if ((this._BI_PAYED != value))
				{
					this.OnBI_PAYEDChanging(value);
					this.SendPropertyChanging();
					this._BI_PAYED = value;
					this.SendPropertyChanged("BI_PAYED");
					this.OnBI_PAYEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_ACTIONTYPE", DbType="Int NOT NULL")]
		public int BI_ACTIONTYPE
		{
			get
			{
				return this._BI_ACTIONTYPE;
			}
			set
			{
				if ((this._BI_ACTIONTYPE != value))
				{
					this.OnBI_ACTIONTYPEChanging(value);
					this.SendPropertyChanging();
					this._BI_ACTIONTYPE = value;
					this.SendPropertyChanged("BI_ACTIONTYPE");
					this.OnBI_ACTIONTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_PERCENT", DbType="Float")]
		public System.Nullable<double> BI_PERCENT
		{
			get
			{
				return this._BI_PERCENT;
			}
			set
			{
				if ((this._BI_PERCENT != value))
				{
					this.OnBI_PERCENTChanging(value);
					this.SendPropertyChanging();
					this._BI_PERCENT = value;
					this.SendPropertyChanged("BI_PERCENT");
					this.OnBI_PERCENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_OFKEY", DbType="Int NOT NULL")]
		public int BI_OFKEY
		{
			get
			{
				return this._BI_OFKEY;
			}
			set
			{
				if ((this._BI_OFKEY != value))
				{
					this.OnBI_OFKEYChanging(value);
					this.SendPropertyChanging();
					this._BI_OFKEY = value;
					this.SendPropertyChanged("BI_OFKEY");
					this.OnBI_OFKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_ANNULATED", DbType="SmallInt")]
		public System.Nullable<short> BI_ANNULATED
		{
			get
			{
				return this._BI_ANNULATED;
			}
			set
			{
				if ((this._BI_ANNULATED != value))
				{
					this.OnBI_ANNULATEDChanging(value);
					this.SendPropertyChanging();
					this._BI_ANNULATED = value;
					this.SendPropertyChanged("BI_ANNULATED");
					this.OnBI_ANNULATEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_LOCKED", DbType="SmallInt NOT NULL")]
		public short BI_LOCKED
		{
			get
			{
				return this._BI_LOCKED;
			}
			set
			{
				if ((this._BI_LOCKED != value))
				{
					this.OnBI_LOCKEDChanging(value);
					this.SendPropertyChanging();
					this._BI_LOCKED = value;
					this.SendPropertyChanged("BI_LOCKED");
					this.OnBI_LOCKEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_ANNULDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> BI_ANNULDATE
		{
			get
			{
				return this._BI_ANNULDATE;
			}
			set
			{
				if ((this._BI_ANNULDATE != value))
				{
					this.OnBI_ANNULDATEChanging(value);
					this.SendPropertyChanging();
					this._BI_ANNULDATE = value;
					this.SendPropertyChanged("BI_ANNULDATE");
					this.OnBI_ANNULDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_DEADLINEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> BI_DEADLINEDATE
		{
			get
			{
				return this._BI_DEADLINEDATE;
			}
			set
			{
				if ((this._BI_DEADLINEDATE != value))
				{
					this.OnBI_DEADLINEDATEChanging(value);
					this.SendPropertyChanging();
					this._BI_DEADLINEDATE = value;
					this.SendPropertyChanged("BI_DEADLINEDATE");
					this.OnBI_DEADLINEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI_PAYWITHCOMISSION", DbType="SmallInt")]
		public System.Nullable<short> BI_PAYWITHCOMISSION
		{
			get
			{
				return this._BI_PAYWITHCOMISSION;
			}
			set
			{
				if ((this._BI_PAYWITHCOMISSION != value))
				{
					this.OnBI_PAYWITHCOMISSIONChanging(value);
					this.SendPropertyChanging();
					this._BI_PAYWITHCOMISSION = value;
					this.SendPropertyChanged("BI_PAYWITHCOMISSION");
					this.OnBI_PAYWITHCOMISSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Rate_FIN_BILL_OUT", Storage="_dict_Rate", ThisKey="BI_RATE", OtherKey="RA_CODE", IsForeignKey=true)]
		public dict_Rate dict_Rate
		{
			get
			{
				return this._dict_Rate.Entity;
			}
			set
			{
				dict_Rate previousValue = this._dict_Rate.Entity;
				if (((previousValue != value) 
							|| (this._dict_Rate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dict_Rate.Entity = null;
						previousValue.FIN_BILL_OUTs.Remove(this);
					}
					this._dict_Rate.Entity = value;
					if ((value != null))
					{
						value.FIN_BILL_OUTs.Add(this);
						this._BI_RATE = value.RA_CODE;
					}
					else
					{
						this._BI_RATE = default(string);
					}
					this.SendPropertyChanged("dict_Rate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FIN_DOCUMENT_FIN_BILL_OUT", Storage="_FIN_DOCUMENT", ThisKey="BI_DOCKEY", OtherKey="DC_KEY", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FIN_DOCUMENT FIN_DOCUMENT
		{
			get
			{
				return this._FIN_DOCUMENT.Entity;
			}
			set
			{
				FIN_DOCUMENT previousValue = this._FIN_DOCUMENT.Entity;
				if (((previousValue != value) 
							|| (this._FIN_DOCUMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FIN_DOCUMENT.Entity = null;
						previousValue.FIN_BILL_OUT.Remove(this);
					}
					this._FIN_DOCUMENT.Entity = value;
					if ((value != null))
					{
						value.FIN_BILL_OUT.Add(this);
						this._BI_DOCKEY = value.DC_KEY;
					}
					else
					{
						this._BI_DOCKEY = default(int);
					}
					this.SendPropertyChanged("FIN_DOCUMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FIN_DOCUMENTS")]
	public partial class FIN_DOCUMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DC_KEY;
		
		private int _DC_DTKEY;
		
		private System.DateTime _DC_DATE;
		
		private System.Nullable<int> _DC_NUMBER;
		
		private int _DC_PARTNERKEY;
		
		private System.Nullable<double> _DC_SUM;
		
		private string _DC_RATE;
		
		private int _DC_USKEY;
		
		private int _DC_FRKEY;
		
		private int _DC_OTKEY;
		
		private string _DC_Dogovor;
		
		private string _DC_COMMENT;
		
		private System.Nullable<double> _DC_SUMBASE;
		
		private System.Nullable<double> _DC_SUMNATIONAL;
		
		private string _DC_OUTNUM;
		
		private int _DC_OFKEY;
		
		private int _DC_ACTIONTYPE;
		
		private int _DC_LEVEL;
		
		private string _DC_STREAM;
		
		private System.Nullable<int> _DC_NSCKEY;
		
		private short _DC_FLOWLEVEL;
		
		private System.Data.Linq.Binary _DC_ROWID;
		
		private System.Nullable<short> _DC_SENTTO1C;
		
		private short _DC_LOCKED;
		
		private int _DC_PIKEY;
		
		private EntitySet<FIN_BILL_OUT> _FIN_BILL_OUT;
		
		private EntityRef<dict_Rate> _dict_Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDC_KEYChanging(int value);
    partial void OnDC_KEYChanged();
    partial void OnDC_DTKEYChanging(int value);
    partial void OnDC_DTKEYChanged();
    partial void OnDC_DATEChanging(System.DateTime value);
    partial void OnDC_DATEChanged();
    partial void OnDC_NUMBERChanging(System.Nullable<int> value);
    partial void OnDC_NUMBERChanged();
    partial void OnDC_PARTNERKEYChanging(int value);
    partial void OnDC_PARTNERKEYChanged();
    partial void OnDC_SUMChanging(System.Nullable<double> value);
    partial void OnDC_SUMChanged();
    partial void OnDC_RATEChanging(string value);
    partial void OnDC_RATEChanged();
    partial void OnDC_USKEYChanging(int value);
    partial void OnDC_USKEYChanged();
    partial void OnDC_FRKEYChanging(int value);
    partial void OnDC_FRKEYChanged();
    partial void OnDC_OTKEYChanging(int value);
    partial void OnDC_OTKEYChanged();
    partial void OnDC_DogovorChanging(string value);
    partial void OnDC_DogovorChanged();
    partial void OnDC_COMMENTChanging(string value);
    partial void OnDC_COMMENTChanged();
    partial void OnDC_SUMBASEChanging(System.Nullable<double> value);
    partial void OnDC_SUMBASEChanged();
    partial void OnDC_SUMNATIONALChanging(System.Nullable<double> value);
    partial void OnDC_SUMNATIONALChanged();
    partial void OnDC_OUTNUMChanging(string value);
    partial void OnDC_OUTNUMChanged();
    partial void OnDC_OFKEYChanging(int value);
    partial void OnDC_OFKEYChanged();
    partial void OnDC_ACTIONTYPEChanging(int value);
    partial void OnDC_ACTIONTYPEChanged();
    partial void OnDC_LEVELChanging(int value);
    partial void OnDC_LEVELChanged();
    partial void OnDC_STREAMChanging(string value);
    partial void OnDC_STREAMChanged();
    partial void OnDC_NSCKEYChanging(System.Nullable<int> value);
    partial void OnDC_NSCKEYChanged();
    partial void OnDC_FLOWLEVELChanging(short value);
    partial void OnDC_FLOWLEVELChanged();
    partial void OnDC_ROWIDChanging(System.Data.Linq.Binary value);
    partial void OnDC_ROWIDChanged();
    partial void OnDC_SENTTO1CChanging(System.Nullable<short> value);
    partial void OnDC_SENTTO1CChanged();
    partial void OnDC_LOCKEDChanging(short value);
    partial void OnDC_LOCKEDChanged();
    partial void OnDC_PIKEYChanging(int value);
    partial void OnDC_PIKEYChanged();
    #endregion
		
		public FIN_DOCUMENT()
		{
			this._FIN_BILL_OUT = new EntitySet<FIN_BILL_OUT>(new Action<FIN_BILL_OUT>(this.attach_FIN_BILL_OUT), new Action<FIN_BILL_OUT>(this.detach_FIN_BILL_OUT));
			this._dict_Rate = default(EntityRef<dict_Rate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int DC_KEY
		{
			get
			{
				return this._DC_KEY;
			}
			set
			{
				if ((this._DC_KEY != value))
				{
					this.OnDC_KEYChanging(value);
					this.SendPropertyChanging();
					this._DC_KEY = value;
					this.SendPropertyChanged("DC_KEY");
					this.OnDC_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_DTKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DC_DTKEY
		{
			get
			{
				return this._DC_DTKEY;
			}
			set
			{
				if ((this._DC_DTKEY != value))
				{
					this.OnDC_DTKEYChanging(value);
					this.SendPropertyChanging();
					this._DC_DTKEY = value;
					this.SendPropertyChanged("DC_DTKEY");
					this.OnDC_DTKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_DATE", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DC_DATE
		{
			get
			{
				return this._DC_DATE;
			}
			set
			{
				if ((this._DC_DATE != value))
				{
					this.OnDC_DATEChanging(value);
					this.SendPropertyChanging();
					this._DC_DATE = value;
					this.SendPropertyChanged("DC_DATE");
					this.OnDC_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_NUMBER", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DC_NUMBER
		{
			get
			{
				return this._DC_NUMBER;
			}
			set
			{
				if ((this._DC_NUMBER != value))
				{
					this.OnDC_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._DC_NUMBER = value;
					this.SendPropertyChanged("DC_NUMBER");
					this.OnDC_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_PARTNERKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DC_PARTNERKEY
		{
			get
			{
				return this._DC_PARTNERKEY;
			}
			set
			{
				if ((this._DC_PARTNERKEY != value))
				{
					this.OnDC_PARTNERKEYChanging(value);
					this.SendPropertyChanging();
					this._DC_PARTNERKEY = value;
					this.SendPropertyChanged("DC_PARTNERKEY");
					this.OnDC_PARTNERKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_SUM", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> DC_SUM
		{
			get
			{
				return this._DC_SUM;
			}
			set
			{
				if ((this._DC_SUM != value))
				{
					this.OnDC_SUMChanging(value);
					this.SendPropertyChanging();
					this._DC_SUM = value;
					this.SendPropertyChanged("DC_SUM");
					this.OnDC_SUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_RATE", DbType="VarChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string DC_RATE
		{
			get
			{
				return this._DC_RATE;
			}
			set
			{
				if ((this._DC_RATE != value))
				{
					if (this._dict_Rate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDC_RATEChanging(value);
					this.SendPropertyChanging();
					this._DC_RATE = value;
					this.SendPropertyChanged("DC_RATE");
					this.OnDC_RATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_USKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DC_USKEY
		{
			get
			{
				return this._DC_USKEY;
			}
			set
			{
				if ((this._DC_USKEY != value))
				{
					this.OnDC_USKEYChanging(value);
					this.SendPropertyChanging();
					this._DC_USKEY = value;
					this.SendPropertyChanged("DC_USKEY");
					this.OnDC_USKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_FRKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DC_FRKEY
		{
			get
			{
				return this._DC_FRKEY;
			}
			set
			{
				if ((this._DC_FRKEY != value))
				{
					this.OnDC_FRKEYChanging(value);
					this.SendPropertyChanging();
					this._DC_FRKEY = value;
					this.SendPropertyChanged("DC_FRKEY");
					this.OnDC_FRKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_OTKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DC_OTKEY
		{
			get
			{
				return this._DC_OTKEY;
			}
			set
			{
				if ((this._DC_OTKEY != value))
				{
					this.OnDC_OTKEYChanging(value);
					this.SendPropertyChanging();
					this._DC_OTKEY = value;
					this.SendPropertyChanged("DC_OTKEY");
					this.OnDC_OTKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_Dogovor", DbType="VarChar(254)", UpdateCheck=UpdateCheck.Never)]
		public string DC_Dogovor
		{
			get
			{
				return this._DC_Dogovor;
			}
			set
			{
				if ((this._DC_Dogovor != value))
				{
					this.OnDC_DogovorChanging(value);
					this.SendPropertyChanging();
					this._DC_Dogovor = value;
					this.SendPropertyChanged("DC_Dogovor");
					this.OnDC_DogovorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_COMMENT", DbType="VarChar(254)", UpdateCheck=UpdateCheck.Never)]
		public string DC_COMMENT
		{
			get
			{
				return this._DC_COMMENT;
			}
			set
			{
				if ((this._DC_COMMENT != value))
				{
					this.OnDC_COMMENTChanging(value);
					this.SendPropertyChanging();
					this._DC_COMMENT = value;
					this.SendPropertyChanged("DC_COMMENT");
					this.OnDC_COMMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_SUMBASE", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> DC_SUMBASE
		{
			get
			{
				return this._DC_SUMBASE;
			}
			set
			{
				if ((this._DC_SUMBASE != value))
				{
					this.OnDC_SUMBASEChanging(value);
					this.SendPropertyChanging();
					this._DC_SUMBASE = value;
					this.SendPropertyChanged("DC_SUMBASE");
					this.OnDC_SUMBASEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_SUMNATIONAL", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> DC_SUMNATIONAL
		{
			get
			{
				return this._DC_SUMNATIONAL;
			}
			set
			{
				if ((this._DC_SUMNATIONAL != value))
				{
					this.OnDC_SUMNATIONALChanging(value);
					this.SendPropertyChanging();
					this._DC_SUMNATIONAL = value;
					this.SendPropertyChanged("DC_SUMNATIONAL");
					this.OnDC_SUMNATIONALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_OUTNUM", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DC_OUTNUM
		{
			get
			{
				return this._DC_OUTNUM;
			}
			set
			{
				if ((this._DC_OUTNUM != value))
				{
					this.OnDC_OUTNUMChanging(value);
					this.SendPropertyChanging();
					this._DC_OUTNUM = value;
					this.SendPropertyChanged("DC_OUTNUM");
					this.OnDC_OUTNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_OFKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DC_OFKEY
		{
			get
			{
				return this._DC_OFKEY;
			}
			set
			{
				if ((this._DC_OFKEY != value))
				{
					this.OnDC_OFKEYChanging(value);
					this.SendPropertyChanging();
					this._DC_OFKEY = value;
					this.SendPropertyChanged("DC_OFKEY");
					this.OnDC_OFKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_ACTIONTYPE", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DC_ACTIONTYPE
		{
			get
			{
				return this._DC_ACTIONTYPE;
			}
			set
			{
				if ((this._DC_ACTIONTYPE != value))
				{
					this.OnDC_ACTIONTYPEChanging(value);
					this.SendPropertyChanging();
					this._DC_ACTIONTYPE = value;
					this.SendPropertyChanged("DC_ACTIONTYPE");
					this.OnDC_ACTIONTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_LEVEL", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DC_LEVEL
		{
			get
			{
				return this._DC_LEVEL;
			}
			set
			{
				if ((this._DC_LEVEL != value))
				{
					this.OnDC_LEVELChanging(value);
					this.SendPropertyChanging();
					this._DC_LEVEL = value;
					this.SendPropertyChanged("DC_LEVEL");
					this.OnDC_LEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_STREAM", DbType="VarChar(1024)", UpdateCheck=UpdateCheck.Never)]
		public string DC_STREAM
		{
			get
			{
				return this._DC_STREAM;
			}
			set
			{
				if ((this._DC_STREAM != value))
				{
					this.OnDC_STREAMChanging(value);
					this.SendPropertyChanging();
					this._DC_STREAM = value;
					this.SendPropertyChanged("DC_STREAM");
					this.OnDC_STREAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_NSCKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DC_NSCKEY
		{
			get
			{
				return this._DC_NSCKEY;
			}
			set
			{
				if ((this._DC_NSCKEY != value))
				{
					this.OnDC_NSCKEYChanging(value);
					this.SendPropertyChanging();
					this._DC_NSCKEY = value;
					this.SendPropertyChanged("DC_NSCKEY");
					this.OnDC_NSCKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_FLOWLEVEL", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short DC_FLOWLEVEL
		{
			get
			{
				return this._DC_FLOWLEVEL;
			}
			set
			{
				if ((this._DC_FLOWLEVEL != value))
				{
					this.OnDC_FLOWLEVELChanging(value);
					this.SendPropertyChanging();
					this._DC_FLOWLEVEL = value;
					this.SendPropertyChanged("DC_FLOWLEVEL");
					this.OnDC_FLOWLEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DC_ROWID
		{
			get
			{
				return this._DC_ROWID;
			}
			set
			{
				if ((this._DC_ROWID != value))
				{
					this.OnDC_ROWIDChanging(value);
					this.SendPropertyChanging();
					this._DC_ROWID = value;
					this.SendPropertyChanged("DC_ROWID");
					this.OnDC_ROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_SENTTO1C", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DC_SENTTO1C
		{
			get
			{
				return this._DC_SENTTO1C;
			}
			set
			{
				if ((this._DC_SENTTO1C != value))
				{
					this.OnDC_SENTTO1CChanging(value);
					this.SendPropertyChanging();
					this._DC_SENTTO1C = value;
					this.SendPropertyChanged("DC_SENTTO1C");
					this.OnDC_SENTTO1CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_LOCKED", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short DC_LOCKED
		{
			get
			{
				return this._DC_LOCKED;
			}
			set
			{
				if ((this._DC_LOCKED != value))
				{
					this.OnDC_LOCKEDChanging(value);
					this.SendPropertyChanging();
					this._DC_LOCKED = value;
					this.SendPropertyChanged("DC_LOCKED");
					this.OnDC_LOCKEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC_PIKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DC_PIKEY
		{
			get
			{
				return this._DC_PIKEY;
			}
			set
			{
				if ((this._DC_PIKEY != value))
				{
					this.OnDC_PIKEYChanging(value);
					this.SendPropertyChanging();
					this._DC_PIKEY = value;
					this.SendPropertyChanged("DC_PIKEY");
					this.OnDC_PIKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FIN_DOCUMENT_FIN_BILL_OUT", Storage="_FIN_BILL_OUT", ThisKey="DC_KEY", OtherKey="BI_DOCKEY")]
		public EntitySet<FIN_BILL_OUT> FIN_BILL_OUT
		{
			get
			{
				return this._FIN_BILL_OUT;
			}
			set
			{
				this._FIN_BILL_OUT.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dict_Rate_FIN_DOCUMENT", Storage="_dict_Rate", ThisKey="DC_RATE", OtherKey="RA_CODE", IsForeignKey=true)]
		public dict_Rate dict_Rate
		{
			get
			{
				return this._dict_Rate.Entity;
			}
			set
			{
				dict_Rate previousValue = this._dict_Rate.Entity;
				if (((previousValue != value) 
							|| (this._dict_Rate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dict_Rate.Entity = null;
						previousValue.FIN_DOCUMENTs.Remove(this);
					}
					this._dict_Rate.Entity = value;
					if ((value != null))
					{
						value.FIN_DOCUMENTs.Add(this);
						this._DC_RATE = value.RA_CODE;
					}
					else
					{
						this._DC_RATE = default(string);
					}
					this.SendPropertyChanged("dict_Rate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FIN_BILL_OUT(FIN_BILL_OUT entity)
		{
			this.SendPropertyChanging();
			entity.FIN_DOCUMENT = this;
		}
		
		private void detach_FIN_BILL_OUT(FIN_BILL_OUT entity)
		{
			this.SendPropertyChanging();
			entity.FIN_DOCUMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LTA_AccountDocument")]
	public partial class LTA_AccountDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ACF_Id;
		
		private int _ACF_ACId;
		
		private System.Data.Linq.Binary _ACF_Source;
		
		private string _ACF_Extension;
		
		private System.Nullable<System.DateTime> _ACF_PrintDate;
		
		private EntityRef<LTA_Account> _LTA_Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACF_IdChanging(int value);
    partial void OnACF_IdChanged();
    partial void OnACF_ACIdChanging(int value);
    partial void OnACF_ACIdChanged();
    partial void OnACF_SourceChanging(System.Data.Linq.Binary value);
    partial void OnACF_SourceChanged();
    partial void OnACF_ExtensionChanging(string value);
    partial void OnACF_ExtensionChanged();
    partial void OnACF_PrintDateChanging(System.Nullable<System.DateTime> value);
    partial void OnACF_PrintDateChanged();
    #endregion
		
		public LTA_AccountDocument()
		{
			this._LTA_Account = default(EntityRef<LTA_Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACF_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ACF_Id
		{
			get
			{
				return this._ACF_Id;
			}
			set
			{
				if ((this._ACF_Id != value))
				{
					this.OnACF_IdChanging(value);
					this.SendPropertyChanging();
					this._ACF_Id = value;
					this.SendPropertyChanged("ACF_Id");
					this.OnACF_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACF_ACId", DbType="Int NOT NULL")]
		public int ACF_ACId
		{
			get
			{
				return this._ACF_ACId;
			}
			set
			{
				if ((this._ACF_ACId != value))
				{
					if (this._LTA_Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACF_ACIdChanging(value);
					this.SendPropertyChanging();
					this._ACF_ACId = value;
					this.SendPropertyChanged("ACF_ACId");
					this.OnACF_ACIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACF_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ACF_Source
		{
			get
			{
				return this._ACF_Source;
			}
			set
			{
				if ((this._ACF_Source != value))
				{
					this.OnACF_SourceChanging(value);
					this.SendPropertyChanging();
					this._ACF_Source = value;
					this.SendPropertyChanged("ACF_Source");
					this.OnACF_SourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACF_Extension", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string ACF_Extension
		{
			get
			{
				return this._ACF_Extension;
			}
			set
			{
				if ((this._ACF_Extension != value))
				{
					this.OnACF_ExtensionChanging(value);
					this.SendPropertyChanging();
					this._ACF_Extension = value;
					this.SendPropertyChanged("ACF_Extension");
					this.OnACF_ExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACF_PrintDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ACF_PrintDate
		{
			get
			{
				return this._ACF_PrintDate;
			}
			set
			{
				if ((this._ACF_PrintDate != value))
				{
					this.OnACF_PrintDateChanging(value);
					this.SendPropertyChanging();
					this._ACF_PrintDate = value;
					this.SendPropertyChanged("ACF_PrintDate");
					this.OnACF_PrintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LTA_Account_LTA_AccountDocument", Storage="_LTA_Account", ThisKey="ACF_ACId", OtherKey="AC_ID", IsForeignKey=true)]
		public LTA_Account LTA_Account
		{
			get
			{
				return this._LTA_Account.Entity;
			}
			set
			{
				LTA_Account previousValue = this._LTA_Account.Entity;
				if (((previousValue != value) 
							|| (this._LTA_Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LTA_Account.Entity = null;
						previousValue.LTA_AccountDocuments.Remove(this);
					}
					this._LTA_Account.Entity = value;
					if ((value != null))
					{
						value.LTA_AccountDocuments.Add(this);
						this._ACF_ACId = value.AC_ID;
					}
					else
					{
						this._ACF_ACId = default(int);
					}
					this.SendPropertyChanged("LTA_Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
