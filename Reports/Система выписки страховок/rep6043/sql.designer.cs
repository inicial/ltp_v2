#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace rep6043
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="lanta")]
	public partial class sqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_DogovorList(tbl_DogovorList instance);
    partial void Updatetbl_DogovorList(tbl_DogovorList instance);
    partial void Deletetbl_DogovorList(tbl_DogovorList instance);
    partial void Inserttbl_Dogovor(tbl_Dogovor instance);
    partial void Updatetbl_Dogovor(tbl_Dogovor instance);
    partial void Deletetbl_Dogovor(tbl_Dogovor instance);
    partial void Inserttbl_Turist(tbl_Turist instance);
    partial void Updatetbl_Turist(tbl_Turist instance);
    partial void Deletetbl_Turist(tbl_Turist instance);
    partial void InsertTuristService(TuristService instance);
    partial void UpdateTuristService(TuristService instance);
    partial void DeleteTuristService(TuristService instance);
    partial void InsertINS_INSURANCE(INS_INSURANCE instance);
    partial void UpdateINS_INSURANCE(INS_INSURANCE instance);
    partial void DeleteINS_INSURANCE(INS_INSURANCE instance);
    partial void InsertINS_CONDITION(INS_CONDITION instance);
    partial void UpdateINS_CONDITION(INS_CONDITION instance);
    partial void DeleteINS_CONDITION(INS_CONDITION instance);
    partial void InsertINS_SL_REF(INS_SL_REF instance);
    partial void UpdateINS_SL_REF(INS_SL_REF instance);
    partial void DeleteINS_SL_REF(INS_SL_REF instance);
    partial void InsertINS_RISK(INS_RISK instance);
    partial void UpdateINS_RISK(INS_RISK instance);
    partial void DeleteINS_RISK(INS_RISK instance);
    partial void InsertINS_COUNTRY_REF(INS_COUNTRY_REF instance);
    partial void UpdateINS_COUNTRY_REF(INS_COUNTRY_REF instance);
    partial void DeleteINS_COUNTRY_REF(INS_COUNTRY_REF instance);
    partial void InsertINS_TERRITORy(INS_TERRITORy instance);
    partial void UpdateINS_TERRITORy(INS_TERRITORy instance);
    partial void DeleteINS_TERRITORy(INS_TERRITORy instance);
    partial void InsertINS_AgeCoef(INS_AgeCoef instance);
    partial void UpdateINS_AgeCoef(INS_AgeCoef instance);
    partial void DeleteINS_AgeCoef(INS_AgeCoef instance);
    partial void InsertINS_PERSON(INS_PERSON instance);
    partial void UpdateINS_PERSON(INS_PERSON instance);
    partial void DeleteINS_PERSON(INS_PERSON instance);
    partial void InsertCOUNTRY(COUNTRY instance);
    partial void UpdateCOUNTRY(COUNTRY instance);
    partial void DeleteCOUNTRY(COUNTRY instance);
    partial void InsertINS_COUNTRIES_ING(INS_COUNTRIES_ING instance);
    partial void UpdateINS_COUNTRIES_ING(INS_COUNTRIES_ING instance);
    partial void DeleteINS_COUNTRIES_ING(INS_COUNTRIES_ING instance);
    partial void InsertINS_TARIFF(INS_TARIFF instance);
    partial void UpdateINS_TARIFF(INS_TARIFF instance);
    partial void DeleteINS_TARIFF(INS_TARIFF instance);
    partial void InsertRealCourse(RealCourse instance);
    partial void UpdateRealCourse(RealCourse instance);
    partial void DeleteRealCourse(RealCourse instance);
    #endregion
		
		public sqlDataContext() : 
				base(global::rep6043.Properties.Settings.Default.lantaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this.GetTable<tbl_DogovorList>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Dogovor> tbl_Dogovors
		{
			get
			{
				return this.GetTable<tbl_Dogovor>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Turist> tbl_Turists
		{
			get
			{
				return this.GetTable<tbl_Turist>();
			}
		}
		
		public System.Data.Linq.Table<TuristService> TuristServices
		{
			get
			{
				return this.GetTable<TuristService>();
			}
		}
		
		public System.Data.Linq.Table<INS_INSURANCE> INS_INSURANCEs
		{
			get
			{
				return this.GetTable<INS_INSURANCE>();
			}
		}
		
		public System.Data.Linq.Table<INS_CONDITION> INS_CONDITIONs
		{
			get
			{
				return this.GetTable<INS_CONDITION>();
			}
		}
		
		public System.Data.Linq.Table<INS_SL_REF> INS_SL_REFs
		{
			get
			{
				return this.GetTable<INS_SL_REF>();
			}
		}
		
		public System.Data.Linq.Table<INS_RISK> INS_RISKs
		{
			get
			{
				return this.GetTable<INS_RISK>();
			}
		}
		
		public System.Data.Linq.Table<INS_COUNTRY_REF> INS_COUNTRY_REFs
		{
			get
			{
				return this.GetTable<INS_COUNTRY_REF>();
			}
		}
		
		public System.Data.Linq.Table<INS_TERRITORy> INS_TERRITORies
		{
			get
			{
				return this.GetTable<INS_TERRITORy>();
			}
		}
		
		public System.Data.Linq.Table<INS_AgeCoef> INS_AgeCoefs
		{
			get
			{
				return this.GetTable<INS_AgeCoef>();
			}
		}
		
		public System.Data.Linq.Table<INS_PERSON> INS_PERSONs
		{
			get
			{
				return this.GetTable<INS_PERSON>();
			}
		}
		
		public System.Data.Linq.Table<COUNTRY> COUNTRies
		{
			get
			{
				return this.GetTable<COUNTRY>();
			}
		}
		
		public System.Data.Linq.Table<INS_COUNTRIES_ING> INS_COUNTRIES_INGs
		{
			get
			{
				return this.GetTable<INS_COUNTRIES_ING>();
			}
		}
		
		public System.Data.Linq.Table<INS_TARIFF> INS_TARIFFs
		{
			get
			{
				return this.GetTable<INS_TARIFF>();
			}
		}
		
		public System.Data.Linq.Table<RealCourse> RealCourses
		{
			get
			{
				return this.GetTable<RealCourse>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_DogovorList")]
	public partial class tbl_DogovorList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DL_DGCOD;
		
		private int _DL_KEY;
		
		private int _DL_SVKEY;
		
		private string _DL_NAME;
		
		private System.Nullable<short> _DL_DAY;
		
		private int _DL_CODE;
		
		private System.Nullable<int> _DL_SUBCODE1;
		
		private System.Nullable<int> _DL_SUBCODE2;
		
		private short _DL_NMEN;
		
		private System.Nullable<short> _DL_NDAYS;
		
		private System.Nullable<int> _DL_CNKEY;
		
		private System.Nullable<int> _DL_DGKEY;
		
		private System.Nullable<decimal> _DL_Cost;
		
		private EntitySet<TuristService> _TuristServices;
		
		private EntityRef<tbl_Dogovor> _tbl_Dogovor;
		
		private EntityRef<COUNTRY> _COUNTRY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDL_DGCODChanging(string value);
    partial void OnDL_DGCODChanged();
    partial void OnDL_KEYChanging(int value);
    partial void OnDL_KEYChanged();
    partial void OnDL_SVKEYChanging(int value);
    partial void OnDL_SVKEYChanged();
    partial void OnDL_NAMEChanging(string value);
    partial void OnDL_NAMEChanged();
    partial void OnDL_DAYChanging(System.Nullable<short> value);
    partial void OnDL_DAYChanged();
    partial void OnDL_CODEChanging(int value);
    partial void OnDL_CODEChanged();
    partial void OnDL_SUBCODE1Changing(System.Nullable<int> value);
    partial void OnDL_SUBCODE1Changed();
    partial void OnDL_SUBCODE2Changing(System.Nullable<int> value);
    partial void OnDL_SUBCODE2Changed();
    partial void OnDL_NMENChanging(short value);
    partial void OnDL_NMENChanged();
    partial void OnDL_NDAYSChanging(System.Nullable<short> value);
    partial void OnDL_NDAYSChanged();
    partial void OnDL_CNKEYChanging(System.Nullable<int> value);
    partial void OnDL_CNKEYChanged();
    partial void OnDL_DGKEYChanging(System.Nullable<int> value);
    partial void OnDL_DGKEYChanged();
    partial void OnDL_COSTChanging(System.Nullable<decimal> value);
    partial void OnDL_COSTChanged();
    #endregion
		
		public tbl_DogovorList()
		{
			this._TuristServices = new EntitySet<TuristService>(new Action<TuristService>(this.attach_TuristServices), new Action<TuristService>(this.detach_TuristServices));
			this._tbl_Dogovor = default(EntityRef<tbl_Dogovor>);
			this._COUNTRY = default(EntityRef<COUNTRY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_DGCOD", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DL_DGCOD
		{
			get
			{
				return this._DL_DGCOD;
			}
			set
			{
				if ((this._DL_DGCOD != value))
				{
					this.OnDL_DGCODChanging(value);
					this.SendPropertyChanging();
					this._DL_DGCOD = value;
					this.SendPropertyChanged("DL_DGCOD");
					this.OnDL_DGCODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int DL_KEY
		{
			get
			{
				return this._DL_KEY;
			}
			set
			{
				if ((this._DL_KEY != value))
				{
					this.OnDL_KEYChanging(value);
					this.SendPropertyChanging();
					this._DL_KEY = value;
					this.SendPropertyChanged("DL_KEY");
					this.OnDL_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_SVKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DL_SVKEY
		{
			get
			{
				return this._DL_SVKEY;
			}
			set
			{
				if ((this._DL_SVKEY != value))
				{
					this.OnDL_SVKEYChanging(value);
					this.SendPropertyChanging();
					this._DL_SVKEY = value;
					this.SendPropertyChanged("DL_SVKEY");
					this.OnDL_SVKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_NAME", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DL_NAME
		{
			get
			{
				return this._DL_NAME;
			}
			set
			{
				if ((this._DL_NAME != value))
				{
					this.OnDL_NAMEChanging(value);
					this.SendPropertyChanging();
					this._DL_NAME = value;
					this.SendPropertyChanged("DL_NAME");
					this.OnDL_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_DAY", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DL_DAY
		{
			get
			{
				return this._DL_DAY;
			}
			set
			{
				if ((this._DL_DAY != value))
				{
					this.OnDL_DAYChanging(value);
					this.SendPropertyChanging();
					this._DL_DAY = value;
					this.SendPropertyChanged("DL_DAY");
					this.OnDL_DAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_CODE", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DL_CODE
		{
			get
			{
				return this._DL_CODE;
			}
			set
			{
				if ((this._DL_CODE != value))
				{
					this.OnDL_CODEChanging(value);
					this.SendPropertyChanging();
					this._DL_CODE = value;
					this.SendPropertyChanged("DL_CODE");
					this.OnDL_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_SUBCODE1", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DL_SUBCODE1
		{
			get
			{
				return this._DL_SUBCODE1;
			}
			set
			{
				if ((this._DL_SUBCODE1 != value))
				{
					this.OnDL_SUBCODE1Changing(value);
					this.SendPropertyChanging();
					this._DL_SUBCODE1 = value;
					this.SendPropertyChanged("DL_SUBCODE1");
					this.OnDL_SUBCODE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_SUBCODE2", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DL_SUBCODE2
		{
			get
			{
				return this._DL_SUBCODE2;
			}
			set
			{
				if ((this._DL_SUBCODE2 != value))
				{
					this.OnDL_SUBCODE2Changing(value);
					this.SendPropertyChanging();
					this._DL_SUBCODE2 = value;
					this.SendPropertyChanged("DL_SUBCODE2");
					this.OnDL_SUBCODE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_NMEN", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short DL_NMEN
		{
			get
			{
				return this._DL_NMEN;
			}
			set
			{
				if ((this._DL_NMEN != value))
				{
					this.OnDL_NMENChanging(value);
					this.SendPropertyChanging();
					this._DL_NMEN = value;
					this.SendPropertyChanged("DL_NMEN");
					this.OnDL_NMENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_NDAYS", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DL_NDAYS
		{
			get
			{
				return this._DL_NDAYS;
			}
			set
			{
				if ((this._DL_NDAYS != value))
				{
					this.OnDL_NDAYSChanging(value);
					this.SendPropertyChanging();
					this._DL_NDAYS = value;
					this.SendPropertyChanged("DL_NDAYS");
					this.OnDL_NDAYSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_CNKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DL_CNKEY
		{
			get
			{
				return this._DL_CNKEY;
			}
			set
			{
				if ((this._DL_CNKEY != value))
				{
					if (this._COUNTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDL_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._DL_CNKEY = value;
					this.SendPropertyChanged("DL_CNKEY");
					this.OnDL_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_DGKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DL_DGKEY
		{
			get
			{
				return this._DL_DGKEY;
			}
			set
			{
				if ((this._DL_DGKEY != value))
				{
					if (this._tbl_Dogovor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDL_DGKEYChanging(value);
					this.SendPropertyChanging();
					this._DL_DGKEY = value;
					this.SendPropertyChanged("DL_DGKEY");
					this.OnDL_DGKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_Cost", DbType="Money")]
		public System.Nullable<decimal> DL_COST
		{
			get
			{
				return this._DL_Cost;
			}
			set
			{
				if ((this._DL_Cost != value))
				{
					this.OnDL_COSTChanging(value);
					this.SendPropertyChanging();
					this._DL_Cost = value;
					this.SendPropertyChanged("DL_COST");
					this.OnDL_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_DogovorList_TuristService", Storage="_TuristServices", ThisKey="DL_KEY", OtherKey="TU_DLKEY")]
		public EntitySet<TuristService> TuristServices
		{
			get
			{
				return this._TuristServices;
			}
			set
			{
				this._TuristServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dogovor_tbl_DogovorList", Storage="_tbl_Dogovor", ThisKey="DL_DGKEY", OtherKey="DG_Key", IsForeignKey=true)]
		public tbl_Dogovor tbl_Dogovor
		{
			get
			{
				return this._tbl_Dogovor.Entity;
			}
			set
			{
				tbl_Dogovor previousValue = this._tbl_Dogovor.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Dogovor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Dogovor.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._tbl_Dogovor.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_DGKEY = value.DG_Key;
					}
					else
					{
						this._DL_DGKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Dogovor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_tbl_DogovorList", Storage="_COUNTRY", ThisKey="DL_CNKEY", OtherKey="CN_KEY", IsForeignKey=true)]
		internal COUNTRY COUNTRY
		{
			get
			{
				return this._COUNTRY.Entity;
			}
			set
			{
				COUNTRY previousValue = this._COUNTRY.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRY.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._COUNTRY.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_CNKEY = value.CN_KEY;
					}
					else
					{
						this._DL_CNKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("COUNTRY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TuristServices(TuristService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_DogovorList = this;
		}
		
		private void detach_TuristServices(TuristService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_DogovorList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Dogovor")]
	public partial class tbl_Dogovor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DG_CODE;
		
		private System.DateTime _DG_TURDATE;
		
		private int _DG_CNKEY;
		
		private System.Nullable<short> _DG_NMEN;
		
		private decimal _DG_PRICE;
		
		private System.Nullable<decimal> _DG_PAYED;
		
		private System.DateTime _DG_CRDATE;
		
		private string _DG_RATE;
		
		private int _DG_Key;
		
		private float _DG_NDAY;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<tbl_Turist> _tbl_Turists;
		
		private EntityRef<COUNTRY> _COUNTRY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDG_CODEChanging(string value);
    partial void OnDG_CODEChanged();
    partial void OnDG_TURDATEChanging(System.DateTime value);
    partial void OnDG_TURDATEChanged();
    partial void OnDG_CNKEYChanging(int value);
    partial void OnDG_CNKEYChanged();
    partial void OnDG_NMENChanging(System.Nullable<short> value);
    partial void OnDG_NMENChanged();
    partial void OnDG_PRICEChanging(decimal value);
    partial void OnDG_PRICEChanged();
    partial void OnDG_PAYEDChanging(System.Nullable<decimal> value);
    partial void OnDG_PAYEDChanged();
    partial void OnDG_CRDATEChanging(System.DateTime value);
    partial void OnDG_CRDATEChanged();
    partial void OnDG_RATEChanging(string value);
    partial void OnDG_RATEChanged();
    partial void OnDG_KeyChanging(int value);
    partial void OnDG_KeyChanged();
    partial void OnDG_NDAYChanging(float value);
    partial void OnDG_NDAYChanged();
    #endregion
		
		public tbl_Dogovor()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._tbl_Turists = new EntitySet<tbl_Turist>(new Action<tbl_Turist>(this.attach_tbl_Turists), new Action<tbl_Turist>(this.detach_tbl_Turists));
			this._COUNTRY = default(EntityRef<COUNTRY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_CODE", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DG_CODE
		{
			get
			{
				return this._DG_CODE;
			}
			set
			{
				if ((this._DG_CODE != value))
				{
					this.OnDG_CODEChanging(value);
					this.SendPropertyChanging();
					this._DG_CODE = value;
					this.SendPropertyChanged("DG_CODE");
					this.OnDG_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_TURDATE", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DG_TURDATE
		{
			get
			{
				return this._DG_TURDATE;
			}
			set
			{
				if ((this._DG_TURDATE != value))
				{
					this.OnDG_TURDATEChanging(value);
					this.SendPropertyChanging();
					this._DG_TURDATE = value;
					this.SendPropertyChanged("DG_TURDATE");
					this.OnDG_TURDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_CNKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DG_CNKEY
		{
			get
			{
				return this._DG_CNKEY;
			}
			set
			{
				if ((this._DG_CNKEY != value))
				{
					if (this._COUNTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDG_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._DG_CNKEY = value;
					this.SendPropertyChanged("DG_CNKEY");
					this.OnDG_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_NMEN", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DG_NMEN
		{
			get
			{
				return this._DG_NMEN;
			}
			set
			{
				if ((this._DG_NMEN != value))
				{
					this.OnDG_NMENChanging(value);
					this.SendPropertyChanging();
					this._DG_NMEN = value;
					this.SendPropertyChanged("DG_NMEN");
					this.OnDG_NMENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_PRICE", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal DG_PRICE
		{
			get
			{
				return this._DG_PRICE;
			}
			set
			{
				if ((this._DG_PRICE != value))
				{
					this.OnDG_PRICEChanging(value);
					this.SendPropertyChanging();
					this._DG_PRICE = value;
					this.SendPropertyChanged("DG_PRICE");
					this.OnDG_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_PAYED", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DG_PAYED
		{
			get
			{
				return this._DG_PAYED;
			}
			set
			{
				if ((this._DG_PAYED != value))
				{
					this.OnDG_PAYEDChanging(value);
					this.SendPropertyChanging();
					this._DG_PAYED = value;
					this.SendPropertyChanged("DG_PAYED");
					this.OnDG_PAYEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_CRDATE", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DG_CRDATE
		{
			get
			{
				return this._DG_CRDATE;
			}
			set
			{
				if ((this._DG_CRDATE != value))
				{
					this.OnDG_CRDATEChanging(value);
					this.SendPropertyChanging();
					this._DG_CRDATE = value;
					this.SendPropertyChanged("DG_CRDATE");
					this.OnDG_CRDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_RATE", DbType="VarChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string DG_RATE
		{
			get
			{
				return this._DG_RATE;
			}
			set
			{
				if ((this._DG_RATE != value))
				{
					this.OnDG_RATEChanging(value);
					this.SendPropertyChanging();
					this._DG_RATE = value;
					this.SendPropertyChanged("DG_RATE");
					this.OnDG_RATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_Key", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int DG_Key
		{
			get
			{
				return this._DG_Key;
			}
			set
			{
				if ((this._DG_Key != value))
				{
					this.OnDG_KeyChanging(value);
					this.SendPropertyChanging();
					this._DG_Key = value;
					this.SendPropertyChanged("DG_Key");
					this.OnDG_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_NDAY", DbType="float Not NULL")]
		public float DG_NDAY
		{
			get
			{
				return this._DG_NDAY;
			}
			set
			{
				if ((this._DG_NDAY != value))
				{
					this.OnDG_NDAYChanging(value);
					this.SendPropertyChanging();
					this._DG_NDAY = value;
					this.SendPropertyChanged("DG_NDAY");
					this.OnDG_NDAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dogovor_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="DG_Key", OtherKey="DL_DGKEY")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dogovor_tbl_Turist", Storage="_tbl_Turists", ThisKey="DG_Key", OtherKey="TU_DGKEY")]
		public EntitySet<tbl_Turist> tbl_Turists
		{
			get
			{
				return this._tbl_Turists;
			}
			set
			{
				this._tbl_Turists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_tbl_Dogovor", Storage="_COUNTRY", ThisKey="DG_CNKEY", OtherKey="CN_KEY", IsForeignKey=true)]
		internal COUNTRY COUNTRY
		{
			get
			{
				return this._COUNTRY.Entity;
			}
			set
			{
				COUNTRY previousValue = this._COUNTRY.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRY.Entity = null;
						previousValue.tbl_Dogovors.Remove(this);
					}
					this._COUNTRY.Entity = value;
					if ((value != null))
					{
						value.tbl_Dogovors.Add(this);
						this._DG_CNKEY = value.CN_KEY;
					}
					else
					{
						this._DG_CNKEY = default(int);
					}
					this.SendPropertyChanged("COUNTRY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dogovor = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dogovor = null;
		}
		
		private void attach_tbl_Turists(tbl_Turist entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dogovor = this;
		}
		
		private void detach_tbl_Turists(tbl_Turist entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dogovor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Turist")]
	public partial class tbl_Turist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TU_DGCOD;
		
		private int _TU_KEY;
		
		private string _TU_NAMELAT;
		
		private System.Nullable<short> _TU_SEX;
		
		private string _TU_FNAMELAT;
		
		private string _TU_SNAMELAT;
		
		private System.Nullable<System.DateTime> _TU_BIRTHDAY;
		
		private int _TU_DGKEY;
		
		private System.Nullable<int> _TU_RealSex;
		
		private EntitySet<TuristService> _TuristServices;
		
		private EntitySet<INS_PERSON> _INS_PERSONs;
		
		private EntityRef<tbl_Dogovor> _tbl_Dogovor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTU_DGCODChanging(string value);
    partial void OnTU_DGCODChanged();
    partial void OnTU_KEYChanging(int value);
    partial void OnTU_KEYChanged();
    partial void OnTU_NAMELATChanging(string value);
    partial void OnTU_NAMELATChanged();
    partial void OnTU_SEXChanging(System.Nullable<short> value);
    partial void OnTU_SEXChanged();
    partial void OnTU_FNAMELATChanging(string value);
    partial void OnTU_FNAMELATChanged();
    partial void OnTU_SNAMELATChanging(string value);
    partial void OnTU_SNAMELATChanged();
    partial void OnTU_BIRTHDAYChanging(System.Nullable<System.DateTime> value);
    partial void OnTU_BIRTHDAYChanged();
    partial void OnTU_DGKEYChanging(int value);
    partial void OnTU_DGKEYChanged();
    partial void OnTU_RealSexChanging(System.Nullable<int> value);
    partial void OnTU_RealSexChanged();
    #endregion
		
		public tbl_Turist()
		{
			this._TuristServices = new EntitySet<TuristService>(new Action<TuristService>(this.attach_TuristServices), new Action<TuristService>(this.detach_TuristServices));
			this._INS_PERSONs = new EntitySet<INS_PERSON>(new Action<INS_PERSON>(this.attach_INS_PERSONs), new Action<INS_PERSON>(this.detach_INS_PERSONs));
			this._tbl_Dogovor = default(EntityRef<tbl_Dogovor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_DGCOD", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TU_DGCOD
		{
			get
			{
				return this._TU_DGCOD;
			}
			set
			{
				if ((this._TU_DGCOD != value))
				{
					this.OnTU_DGCODChanging(value);
					this.SendPropertyChanging();
					this._TU_DGCOD = value;
					this.SendPropertyChanged("TU_DGCOD");
					this.OnTU_DGCODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int TU_KEY
		{
			get
			{
				return this._TU_KEY;
			}
			set
			{
				if ((this._TU_KEY != value))
				{
					this.OnTU_KEYChanging(value);
					this.SendPropertyChanging();
					this._TU_KEY = value;
					this.SendPropertyChanged("TU_KEY");
					this.OnTU_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_NAMELAT", DbType="VarChar(35)", UpdateCheck=UpdateCheck.Never)]
		public string TU_NAMELAT
		{
			get
			{
				return this._TU_NAMELAT;
			}
			set
			{
				if ((this._TU_NAMELAT != value))
				{
					this.OnTU_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._TU_NAMELAT = value;
					this.SendPropertyChanged("TU_NAMELAT");
					this.OnTU_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_SEX", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TU_SEX
		{
			get
			{
				return this._TU_SEX;
			}
			set
			{
				if ((this._TU_SEX != value))
				{
					this.OnTU_SEXChanging(value);
					this.SendPropertyChanging();
					this._TU_SEX = value;
					this.SendPropertyChanged("TU_SEX");
					this.OnTU_SEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_FNAMELAT", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TU_FNAMELAT
		{
			get
			{
				return this._TU_FNAMELAT;
			}
			set
			{
				if ((this._TU_FNAMELAT != value))
				{
					this.OnTU_FNAMELATChanging(value);
					this.SendPropertyChanging();
					this._TU_FNAMELAT = value;
					this.SendPropertyChanged("TU_FNAMELAT");
					this.OnTU_FNAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_SNAMELAT", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string TU_SNAMELAT
		{
			get
			{
				return this._TU_SNAMELAT;
			}
			set
			{
				if ((this._TU_SNAMELAT != value))
				{
					this.OnTU_SNAMELATChanging(value);
					this.SendPropertyChanging();
					this._TU_SNAMELAT = value;
					this.SendPropertyChanged("TU_SNAMELAT");
					this.OnTU_SNAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_BIRTHDAY", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TU_BIRTHDAY
		{
			get
			{
				return this._TU_BIRTHDAY;
			}
			set
			{
				if ((this._TU_BIRTHDAY != value))
				{
					this.OnTU_BIRTHDAYChanging(value);
					this.SendPropertyChanging();
					this._TU_BIRTHDAY = value;
					this.SendPropertyChanged("TU_BIRTHDAY");
					this.OnTU_BIRTHDAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TU_DGKEY ", Storage="_TU_DGKEY", DbType="Int NOT NULL")]
		public int TU_DGKEY
		{
			get
			{
				return this._TU_DGKEY;
			}
			set
			{
				if ((this._TU_DGKEY != value))
				{
					this.OnTU_DGKEYChanging(value);
					this.SendPropertyChanging();
					this._TU_DGKEY = value;
					this.SendPropertyChanged("TU_DGKEY");
					this.OnTU_DGKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_RealSex", DbType="smallint")]
		public System.Nullable<int> TU_RealSex
		{
			get
			{
				return this._TU_RealSex;
			}
			set
			{
				if ((this._TU_RealSex != value))
				{
					this.OnTU_RealSexChanging(value);
					this.SendPropertyChanging();
					this._TU_RealSex = value;
					this.SendPropertyChanged("TU_RealSex");
					this.OnTU_RealSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Turist_TuristService", Storage="_TuristServices", ThisKey="TU_KEY", OtherKey="TU_TUKEY")]
		public EntitySet<TuristService> TuristServices
		{
			get
			{
				return this._TuristServices;
			}
			set
			{
				this._TuristServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Turist_INS_PERSON", Storage="_INS_PERSONs", ThisKey="TU_KEY", OtherKey="IP_TUKEY")]
		public EntitySet<INS_PERSON> INS_PERSONs
		{
			get
			{
				return this._INS_PERSONs;
			}
			set
			{
				this._INS_PERSONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dogovor_tbl_Turist", Storage="_tbl_Dogovor", ThisKey="TU_DGKEY", OtherKey="DG_Key", IsForeignKey=true)]
		public tbl_Dogovor tbl_Dogovor
		{
			get
			{
				return this._tbl_Dogovor.Entity;
			}
			set
			{
				tbl_Dogovor previousValue = this._tbl_Dogovor.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Dogovor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Dogovor.Entity = null;
						previousValue.tbl_Turists.Remove(this);
					}
					this._tbl_Dogovor.Entity = value;
					if ((value != null))
					{
						value.tbl_Turists.Add(this);
						this._TU_DGKEY = value.DG_Key;
					}
					else
					{
						this._TU_DGKEY = default(int);
					}
					this.SendPropertyChanged("tbl_Dogovor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TuristServices(TuristService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Turist = this;
		}
		
		private void detach_TuristServices(TuristService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Turist = null;
		}
		
		private void attach_INS_PERSONs(INS_PERSON entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Turist = this;
		}
		
		private void detach_INS_PERSONs(INS_PERSON entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Turist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TuristService")]
	public partial class TuristService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TU_TUKEY;
		
		private int _TU_DLKEY;
		
		private int _TU_IDKEY;
		
		private EntityRef<tbl_DogovorList> _tbl_DogovorList;
		
		private EntityRef<tbl_Turist> _tbl_Turist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTU_TUKEYChanging(int value);
    partial void OnTU_TUKEYChanged();
    partial void OnTU_DLKEYChanging(int value);
    partial void OnTU_DLKEYChanged();
    partial void OnTU_IDKEYChanging(int value);
    partial void OnTU_IDKEYChanged();
    #endregion
		
		public TuristService()
		{
			this._tbl_DogovorList = default(EntityRef<tbl_DogovorList>);
			this._tbl_Turist = default(EntityRef<tbl_Turist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_TUKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TU_TUKEY
		{
			get
			{
				return this._TU_TUKEY;
			}
			set
			{
				if ((this._TU_TUKEY != value))
				{
					if (this._tbl_Turist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTU_TUKEYChanging(value);
					this.SendPropertyChanging();
					this._TU_TUKEY = value;
					this.SendPropertyChanged("TU_TUKEY");
					this.OnTU_TUKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_DLKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TU_DLKEY
		{
			get
			{
				return this._TU_DLKEY;
			}
			set
			{
				if ((this._TU_DLKEY != value))
				{
					if (this._tbl_DogovorList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTU_DLKEYChanging(value);
					this.SendPropertyChanging();
					this._TU_DLKEY = value;
					this.SendPropertyChanged("TU_DLKEY");
					this.OnTU_DLKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_IDKEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int TU_IDKEY
		{
			get
			{
				return this._TU_IDKEY;
			}
			set
			{
				if ((this._TU_IDKEY != value))
				{
					this.OnTU_IDKEYChanging(value);
					this.SendPropertyChanging();
					this._TU_IDKEY = value;
					this.SendPropertyChanged("TU_IDKEY");
					this.OnTU_IDKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_DogovorList_TuristService", Storage="_tbl_DogovorList", ThisKey="TU_DLKEY", OtherKey="DL_KEY", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_DogovorList tbl_DogovorList
		{
			get
			{
				return this._tbl_DogovorList.Entity;
			}
			set
			{
				tbl_DogovorList previousValue = this._tbl_DogovorList.Entity;
				if (((previousValue != value) 
							|| (this._tbl_DogovorList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_DogovorList.Entity = null;
						previousValue.TuristServices.Remove(this);
					}
					this._tbl_DogovorList.Entity = value;
					if ((value != null))
					{
						value.TuristServices.Add(this);
						this._TU_DLKEY = value.DL_KEY;
					}
					else
					{
						this._TU_DLKEY = default(int);
					}
					this.SendPropertyChanged("tbl_DogovorList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Turist_TuristService", Storage="_tbl_Turist", ThisKey="TU_TUKEY", OtherKey="TU_KEY", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Turist tbl_Turist
		{
			get
			{
				return this._tbl_Turist.Entity;
			}
			set
			{
				tbl_Turist previousValue = this._tbl_Turist.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Turist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Turist.Entity = null;
						previousValue.TuristServices.Remove(this);
					}
					this._tbl_Turist.Entity = value;
					if ((value != null))
					{
						value.TuristServices.Add(this);
						this._TU_TUKEY = value.TU_KEY;
					}
					else
					{
						this._TU_TUKEY = default(int);
					}
					this.SendPropertyChanged("tbl_Turist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INS_INSURANCES")]
	public partial class INS_INSURANCE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IN_KEY = default(int);
		
		private string _IN_NUMBER;
		
		private System.DateTime _IN_DATE = default(System.DateTime);
		
		private System.DateTime _IN_DATESTART;
		
		private System.DateTime _IN_DATEEND;
		
		private int _IN_DURATION = default(int);
		
		private string _IN_PRODUCT = default(string);
		
		private string _IN_INSURED;
		
		private decimal _IN_PREMIUMTOTAL = default(decimal);
		
		private string _IN_PREMIUMTOTALRATE;
		
		private System.Nullable<System.DateTime> _IN_ANNULDATE;
		
		private int _IN_NUMBERKEY;
		
		private string _IN_UseDGCode;
		
		private int _IN_ParentINKey = default(int);
		
		private bool _IN_IsPrintedByWeb;
		
		private System.Nullable<System.DateTime> _IN_LastPrintDate;
		
		private bool _IN_IsExport;
		
		private EntitySet<INS_INSURANCE> _INS_INSURANCEs;
		
		private EntitySet<INS_CONDITION> _INS_CONDITIONs;
		
		private EntitySet<INS_TERRITORy> _INS_TERRITORies;
		
		private EntitySet<INS_PERSON> _INS_PERSONs;
		
		private EntityRef<INS_INSURANCE> _INS_INSURANCE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIN_NUMBERChanging(string value);
    partial void OnIN_NUMBERChanged();
    partial void OnIN_DATESTARTChanging(System.DateTime value);
    partial void OnIN_DATESTARTChanged();
    partial void OnIN_DATEENDChanging(System.DateTime value);
    partial void OnIN_DATEENDChanged();
    partial void OnIN_INSUREDChanging(string value);
    partial void OnIN_INSUREDChanged();
    partial void OnIN_PREMIUMTOTALRATEChanging(string value);
    partial void OnIN_PREMIUMTOTALRATEChanged();
    partial void OnIN_ANNULDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnIN_ANNULDATEChanged();
    partial void OnIN_NUMBERKEYChanging(int value);
    partial void OnIN_NUMBERKEYChanged();
    partial void OnIN_UseDGCodeChanging(string value);
    partial void OnIN_UseDGCodeChanged();
    partial void OnIN_IsPrintedByWebChanging(bool value);
    partial void OnIN_IsPrintedByWebChanged();
    partial void OnIN_LastPrintDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIN_LastPrintDateChanged();
    partial void OnIN_IsExportChanging(bool value);
    partial void OnIN_IsExportChanged();
    #endregion
		
		public INS_INSURANCE()
		{
			this._INS_INSURANCEs = new EntitySet<INS_INSURANCE>(new Action<INS_INSURANCE>(this.attach_INS_INSURANCEs), new Action<INS_INSURANCE>(this.detach_INS_INSURANCEs));
			this._INS_CONDITIONs = new EntitySet<INS_CONDITION>(new Action<INS_CONDITION>(this.attach_INS_CONDITIONs), new Action<INS_CONDITION>(this.detach_INS_CONDITIONs));
			this._INS_TERRITORies = new EntitySet<INS_TERRITORy>(new Action<INS_TERRITORy>(this.attach_INS_TERRITORies), new Action<INS_TERRITORy>(this.detach_INS_TERRITORies));
			this._INS_PERSONs = new EntitySet<INS_PERSON>(new Action<INS_PERSON>(this.attach_INS_PERSONs), new Action<INS_PERSON>(this.detach_INS_PERSONs));
			this._INS_INSURANCE1 = default(EntityRef<INS_INSURANCE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int IN_KEY
		{
			get
			{
				return this._IN_KEY;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_NUMBER", DbType="VarChar(50) not null", CanBeNull=false)]
		public string IN_NUMBER
		{
			get
			{
				return this._IN_NUMBER;
			}
			set
			{
				if ((this._IN_NUMBER != value))
				{
					this.OnIN_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._IN_NUMBER = value;
					this.SendPropertyChanged("IN_NUMBER");
					this.OnIN_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_DATE", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime IN_DATE
		{
			get
			{
				return this._IN_DATE;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_DATESTART", DbType="DateTime not NULL")]
		public System.DateTime IN_DATESTART
		{
			get
			{
				return this._IN_DATESTART;
			}
			set
			{
				if ((this._IN_DATESTART != value))
				{
					this.OnIN_DATESTARTChanging(value);
					this.SendPropertyChanging();
					this._IN_DATESTART = value;
					this.SendPropertyChanged("IN_DATESTART");
					this.OnIN_DATESTARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_DATEEND", DbType="DateTime not NULL")]
		public System.DateTime IN_DATEEND
		{
			get
			{
				return this._IN_DATEEND;
			}
			set
			{
				if ((this._IN_DATEEND != value))
				{
					this.OnIN_DATEENDChanging(value);
					this.SendPropertyChanging();
					this._IN_DATEEND = value;
					this.SendPropertyChanged("IN_DATEEND");
					this.OnIN_DATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_DURATION", DbType="Int not NULL", UpdateCheck=UpdateCheck.Never)]
		public int IN_DURATION
		{
			get
			{
				return this._IN_DURATION;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_PRODUCT", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string IN_PRODUCT
		{
			get
			{
				return this._IN_PRODUCT;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_INSURED", DbType="VarChar(254) not null", CanBeNull=false)]
		public string IN_INSURED
		{
			get
			{
				return this._IN_INSURED;
			}
			set
			{
				if ((this._IN_INSURED != value))
				{
					this.OnIN_INSUREDChanging(value);
					this.SendPropertyChanging();
					this._IN_INSURED = value;
					this.SendPropertyChanged("IN_INSURED");
					this.OnIN_INSUREDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_PREMIUMTOTAL", DbType="Money not null", UpdateCheck=UpdateCheck.Never)]
		public decimal IN_PREMIUMTOTAL
		{
			get
			{
				return this._IN_PREMIUMTOTAL;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_PREMIUMTOTALRATE", DbType="VarChar(3) not null", CanBeNull=false)]
		public string IN_PREMIUMTOTALRATE
		{
			get
			{
				return this._IN_PREMIUMTOTALRATE;
			}
			set
			{
				if ((this._IN_PREMIUMTOTALRATE != value))
				{
					this.OnIN_PREMIUMTOTALRATEChanging(value);
					this.SendPropertyChanging();
					this._IN_PREMIUMTOTALRATE = value;
					this.SendPropertyChanged("IN_PREMIUMTOTALRATE");
					this.OnIN_PREMIUMTOTALRATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_ANNULDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> IN_ANNULDATE
		{
			get
			{
				return this._IN_ANNULDATE;
			}
			set
			{
				if ((this._IN_ANNULDATE != value))
				{
					this.OnIN_ANNULDATEChanging(value);
					this.SendPropertyChanging();
					this._IN_ANNULDATE = value;
					this.SendPropertyChanged("IN_ANNULDATE");
					this.OnIN_ANNULDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_NUMBERKEY", DbType="Int not NULL")]
		public int IN_NUMBERKEY
		{
			get
			{
				return this._IN_NUMBERKEY;
			}
			set
			{
				if ((this._IN_NUMBERKEY != value))
				{
					this.OnIN_NUMBERKEYChanging(value);
					this.SendPropertyChanging();
					this._IN_NUMBERKEY = value;
					this.SendPropertyChanged("IN_NUMBERKEY");
					this.OnIN_NUMBERKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_UseDGCode", DbType="VarChar(10) not null", CanBeNull=false)]
		public string IN_UseDGCode
		{
			get
			{
				return this._IN_UseDGCode;
			}
			set
			{
				if ((this._IN_UseDGCode != value))
				{
					this.OnIN_UseDGCodeChanging(value);
					this.SendPropertyChanging();
					this._IN_UseDGCode = value;
					this.SendPropertyChanged("IN_UseDGCode");
					this.OnIN_UseDGCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_ParentINKey", DbType="Int not NULL", UpdateCheck=UpdateCheck.Never)]
		public int IN_ParentINKey
		{
			get
			{
				return this._IN_ParentINKey;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_IsPrintedByWeb", DbType="Bit NOT NULL")]
		public bool IN_IsPrintedByWeb
		{
			get
			{
				return this._IN_IsPrintedByWeb;
			}
			set
			{
				if ((this._IN_IsPrintedByWeb != value))
				{
					this.OnIN_IsPrintedByWebChanging(value);
					this.SendPropertyChanging();
					this._IN_IsPrintedByWeb = value;
					this.SendPropertyChanged("IN_IsPrintedByWeb");
					this.OnIN_IsPrintedByWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_LastPrintDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IN_LastPrintDate
		{
			get
			{
				return this._IN_LastPrintDate;
			}
			set
			{
				if ((this._IN_LastPrintDate != value))
				{
					this.OnIN_LastPrintDateChanging(value);
					this.SendPropertyChanging();
					this._IN_LastPrintDate = value;
					this.SendPropertyChanged("IN_LastPrintDate");
					this.OnIN_LastPrintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN_IsExport", DbType="Bit NOT NULL")]
		public bool IN_IsExport
		{
			get
			{
				return this._IN_IsExport;
			}
			set
			{
				if ((this._IN_IsExport != value))
				{
					this.OnIN_IsExportChanging(value);
					this.SendPropertyChanging();
					this._IN_IsExport = value;
					this.SendPropertyChanged("IN_IsExport");
					this.OnIN_IsExportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_INSURANCE_INS_INSURANCE", Storage="_INS_INSURANCEs", ThisKey="IN_KEY", OtherKey="IN_ParentINKey")]
		public EntitySet<INS_INSURANCE> InsurancesChield
		{
			get
			{
				return this._INS_INSURANCEs;
			}
			set
			{
				this._INS_INSURANCEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_INSURANCE_INS_CONDITION", Storage="_INS_CONDITIONs", ThisKey="IN_KEY", OtherKey="CO_INKEY")]
		public EntitySet<INS_CONDITION> INS_CONDITIONs
		{
			get
			{
				return this._INS_CONDITIONs;
			}
			set
			{
				this._INS_CONDITIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_INSURANCE_INS_TERRITORy", Storage="_INS_TERRITORies", ThisKey="IN_KEY", OtherKey="IT_INKEY")]
		public EntitySet<INS_TERRITORy> INS_TERRITORies
		{
			get
			{
				return this._INS_TERRITORies;
			}
			set
			{
				this._INS_TERRITORies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_INSURANCE_INS_PERSON", Storage="_INS_PERSONs", ThisKey="IN_KEY", OtherKey="IP_INKEY")]
		public EntitySet<INS_PERSON> INS_PERSONs
		{
			get
			{
				return this._INS_PERSONs;
			}
			set
			{
				this._INS_PERSONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_INSURANCE_INS_INSURANCE", Storage="_INS_INSURANCE1", ThisKey="IN_ParentINKey", OtherKey="IN_KEY", IsForeignKey=true)]
		public INS_INSURANCE InsurancesParent
		{
			get
			{
				return this._INS_INSURANCE1.Entity;
			}
			set
			{
				INS_INSURANCE previousValue = this._INS_INSURANCE1.Entity;
				if (((previousValue != value) 
							|| (this._INS_INSURANCE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INS_INSURANCE1.Entity = null;
						previousValue.InsurancesChield.Remove(this);
					}
					this._INS_INSURANCE1.Entity = value;
					if ((value != null))
					{
						value.InsurancesChield.Add(this);
						this._IN_ParentINKey = value.IN_KEY;
					}
					else
					{
						this._IN_ParentINKey = default(int);
					}
					this.SendPropertyChanged("InsurancesParent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INS_INSURANCEs(INS_INSURANCE entity)
		{
			this.SendPropertyChanging();
			entity.InsurancesParent = this;
		}
		
		private void detach_INS_INSURANCEs(INS_INSURANCE entity)
		{
			this.SendPropertyChanging();
			entity.InsurancesParent = null;
		}
		
		private void attach_INS_CONDITIONs(INS_CONDITION entity)
		{
			this.SendPropertyChanging();
			entity.INS_INSURANCE = this;
		}
		
		private void detach_INS_CONDITIONs(INS_CONDITION entity)
		{
			this.SendPropertyChanging();
			entity.INS_INSURANCE = null;
		}
		
		private void attach_INS_TERRITORies(INS_TERRITORy entity)
		{
			this.SendPropertyChanging();
			entity.INS_INSURANCE = this;
		}
		
		private void detach_INS_TERRITORies(INS_TERRITORy entity)
		{
			this.SendPropertyChanging();
			entity.INS_INSURANCE = null;
		}
		
		private void attach_INS_PERSONs(INS_PERSON entity)
		{
			this.SendPropertyChanging();
			entity.INS_INSURANCE = this;
		}
		
		private void detach_INS_PERSONs(INS_PERSON entity)
		{
			this.SendPropertyChanging();
			entity.INS_INSURANCE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INS_CONDITIONS")]
	public partial class INS_CONDITION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CO_KEY;
		
		private int _CO_INKEY;
		
		private decimal _CO_INSUREDSUM;
		
		private string _CO_INSUREDRATE;
		
		private decimal _CO_PREMIUMSUM;
		
		private float _CO_FRANCHISE;
		
		private int _CO_RSKEY;
		
		private float _CO_COEF;
		
		private EntityRef<INS_INSURANCE> _INS_INSURANCE;
		
		private EntityRef<INS_RISK> _INS_RISK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCO_KEYChanging(int value);
    partial void OnCO_KEYChanged();
    partial void OnCO_INKEYChanging(int value);
    partial void OnCO_INKEYChanged();
    partial void OnCO_INSUREDSUMChanging(decimal value);
    partial void OnCO_INSUREDSUMChanged();
    partial void OnCO_INSUREDRATEChanging(string value);
    partial void OnCO_INSUREDRATEChanged();
    partial void OnCO_PREMIUMSUMChanging(decimal value);
    partial void OnCO_PREMIUMSUMChanged();
    partial void OnCO_FRANCHISEChanging(float value);
    partial void OnCO_FRANCHISEChanged();
    partial void OnCO_RSKEYChanging(int value);
    partial void OnCO_RSKEYChanged();
    partial void OnCO_COEFChanging(float value);
    partial void OnCO_COEFChanged();
    #endregion
		
		public INS_CONDITION()
		{
			this._INS_INSURANCE = default(EntityRef<INS_INSURANCE>);
			this._INS_RISK = default(EntityRef<INS_RISK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CO_KEY
		{
			get
			{
				return this._CO_KEY;
			}
			set
			{
				if ((this._CO_KEY != value))
				{
					this.OnCO_KEYChanging(value);
					this.SendPropertyChanging();
					this._CO_KEY = value;
					this.SendPropertyChanged("CO_KEY");
					this.OnCO_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO_INKEY", DbType="Int NOT NULL")]
		public int CO_INKEY
		{
			get
			{
				return this._CO_INKEY;
			}
			set
			{
				if ((this._CO_INKEY != value))
				{
					if (this._INS_INSURANCE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCO_INKEYChanging(value);
					this.SendPropertyChanging();
					this._CO_INKEY = value;
					this.SendPropertyChanged("CO_INKEY");
					this.OnCO_INKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO_INSUREDSUM", DbType="Money no null")]
		public decimal CO_INSUREDSUM
		{
			get
			{
				return this._CO_INSUREDSUM;
			}
			set
			{
				if ((this._CO_INSUREDSUM != value))
				{
					this.OnCO_INSUREDSUMChanging(value);
					this.SendPropertyChanging();
					this._CO_INSUREDSUM = value;
					this.SendPropertyChanged("CO_INSUREDSUM");
					this.OnCO_INSUREDSUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO_INSUREDRATE", DbType="VarChar(3) no null", CanBeNull=false)]
		public string CO_INSUREDRATE
		{
			get
			{
				return this._CO_INSUREDRATE;
			}
			set
			{
				if ((this._CO_INSUREDRATE != value))
				{
					this.OnCO_INSUREDRATEChanging(value);
					this.SendPropertyChanging();
					this._CO_INSUREDRATE = value;
					this.SendPropertyChanged("CO_INSUREDRATE");
					this.OnCO_INSUREDRATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO_PREMIUMSUM", DbType="Money no null")]
		public decimal CO_PREMIUMSUM
		{
			get
			{
				return this._CO_PREMIUMSUM;
			}
			set
			{
				if ((this._CO_PREMIUMSUM != value))
				{
					this.OnCO_PREMIUMSUMChanging(value);
					this.SendPropertyChanging();
					this._CO_PREMIUMSUM = value;
					this.SendPropertyChanged("CO_PREMIUMSUM");
					this.OnCO_PREMIUMSUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO_FRANCHISE", DbType="Float no null")]
		public float CO_FRANCHISE
		{
			get
			{
				return this._CO_FRANCHISE;
			}
			set
			{
				if ((this._CO_FRANCHISE != value))
				{
					this.OnCO_FRANCHISEChanging(value);
					this.SendPropertyChanging();
					this._CO_FRANCHISE = value;
					this.SendPropertyChanged("CO_FRANCHISE");
					this.OnCO_FRANCHISEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO_RSKEY", DbType="Int NOT NULL")]
		public int CO_RSKEY
		{
			get
			{
				return this._CO_RSKEY;
			}
			set
			{
				if ((this._CO_RSKEY != value))
				{
					if (this._INS_RISK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCO_RSKEYChanging(value);
					this.SendPropertyChanging();
					this._CO_RSKEY = value;
					this.SendPropertyChanged("CO_RSKEY");
					this.OnCO_RSKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CO_COEF", DbType="Float not NULL")]
		public float CO_COEF
		{
			get
			{
				return this._CO_COEF;
			}
			set
			{
				if ((this._CO_COEF != value))
				{
					this.OnCO_COEFChanging(value);
					this.SendPropertyChanging();
					this._CO_COEF = value;
					this.SendPropertyChanged("CO_COEF");
					this.OnCO_COEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_INSURANCE_INS_CONDITION", Storage="_INS_INSURANCE", ThisKey="CO_INKEY", OtherKey="IN_KEY", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public INS_INSURANCE INS_INSURANCE
		{
			get
			{
				return this._INS_INSURANCE.Entity;
			}
			set
			{
				INS_INSURANCE previousValue = this._INS_INSURANCE.Entity;
				if (((previousValue != value) 
							|| (this._INS_INSURANCE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INS_INSURANCE.Entity = null;
						previousValue.INS_CONDITIONs.Remove(this);
					}
					this._INS_INSURANCE.Entity = value;
					if ((value != null))
					{
						value.INS_CONDITIONs.Add(this);
						this._CO_INKEY = value.IN_KEY;
					}
					else
					{
						this._CO_INKEY = default(int);
					}
					this.SendPropertyChanged("INS_INSURANCE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_RISK_INS_CONDITION", Storage="_INS_RISK", ThisKey="CO_RSKEY", OtherKey="RS_KEY", IsForeignKey=true)]
		public INS_RISK INS_RISK
		{
			get
			{
				return this._INS_RISK.Entity;
			}
			set
			{
				INS_RISK previousValue = this._INS_RISK.Entity;
				if (((previousValue != value) 
							|| (this._INS_RISK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INS_RISK.Entity = null;
						previousValue.INS_CONDITIONs.Remove(this);
					}
					this._INS_RISK.Entity = value;
					if ((value != null))
					{
						value.INS_CONDITIONs.Add(this);
						this._CO_RSKEY = value.RS_KEY;
					}
					else
					{
						this._CO_RSKEY = default(int);
					}
					this.SendPropertyChanged("INS_RISK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INS_SL_REF")]
	public partial class INS_SL_REF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SLR_ID;
		
		private int _SLR_RSKEY;
		
		private decimal _SLR_INSUREDSUM;
		
		private string _SLR_INSUREDRATE;
		
		private double _SLR_FRANCHISE;
		
		private int _SLR_SLKEY;
		
		private System.Nullable<int> _SLR_SUBCODE1;
		
		private System.Nullable<int> _SLR_SUBCODE2;
		
		private double _SLR_COEF;
		
		private EntityRef<INS_RISK> _INS_RISK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSLR_IDChanging(int value);
    partial void OnSLR_IDChanged();
    partial void OnSLR_RSKEYChanging(int value);
    partial void OnSLR_RSKEYChanged();
    partial void OnSLR_INSUREDSUMChanging(decimal value);
    partial void OnSLR_INSUREDSUMChanged();
    partial void OnSLR_INSUREDRATEChanging(string value);
    partial void OnSLR_INSUREDRATEChanged();
    partial void OnSLR_FRANCHISEChanging(double value);
    partial void OnSLR_FRANCHISEChanged();
    partial void OnSLR_SLKEYChanging(int value);
    partial void OnSLR_SLKEYChanged();
    partial void OnSLR_SUBCODE1Changing(System.Nullable<int> value);
    partial void OnSLR_SUBCODE1Changed();
    partial void OnSLR_SUBCODE2Changing(System.Nullable<int> value);
    partial void OnSLR_SUBCODE2Changed();
    partial void OnSLR_COEFChanging(double value);
    partial void OnSLR_COEFChanged();
    #endregion
		
		public INS_SL_REF()
		{
			this._INS_RISK = default(EntityRef<INS_RISK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLR_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SLR_ID
		{
			get
			{
				return this._SLR_ID;
			}
			set
			{
				if ((this._SLR_ID != value))
				{
					this.OnSLR_IDChanging(value);
					this.SendPropertyChanging();
					this._SLR_ID = value;
					this.SendPropertyChanged("SLR_ID");
					this.OnSLR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLR_RSKEY", DbType="Int NOT NULL")]
		public int SLR_RSKEY
		{
			get
			{
				return this._SLR_RSKEY;
			}
			set
			{
				if ((this._SLR_RSKEY != value))
				{
					if (this._INS_RISK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSLR_RSKEYChanging(value);
					this.SendPropertyChanging();
					this._SLR_RSKEY = value;
					this.SendPropertyChanged("SLR_RSKEY");
					this.OnSLR_RSKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLR_INSUREDSUM", DbType="Money NOT NULL")]
		public decimal SLR_INSUREDSUM
		{
			get
			{
				return this._SLR_INSUREDSUM;
			}
			set
			{
				if ((this._SLR_INSUREDSUM != value))
				{
					this.OnSLR_INSUREDSUMChanging(value);
					this.SendPropertyChanging();
					this._SLR_INSUREDSUM = value;
					this.SendPropertyChanged("SLR_INSUREDSUM");
					this.OnSLR_INSUREDSUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLR_INSUREDRATE", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string SLR_INSUREDRATE
		{
			get
			{
				return this._SLR_INSUREDRATE;
			}
			set
			{
				if ((this._SLR_INSUREDRATE != value))
				{
					this.OnSLR_INSUREDRATEChanging(value);
					this.SendPropertyChanging();
					this._SLR_INSUREDRATE = value;
					this.SendPropertyChanged("SLR_INSUREDRATE");
					this.OnSLR_INSUREDRATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLR_FRANCHISE", DbType="Float not null")]
		public double SLR_FRANCHISE
		{
			get
			{
				return this._SLR_FRANCHISE;
			}
			set
			{
				if ((this._SLR_FRANCHISE != value))
				{
					this.OnSLR_FRANCHISEChanging(value);
					this.SendPropertyChanging();
					this._SLR_FRANCHISE = value;
					this.SendPropertyChanged("SLR_FRANCHISE");
					this.OnSLR_FRANCHISEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLR_SLKEY", DbType="Int NOT NULL")]
		public int SLR_SLKEY
		{
			get
			{
				return this._SLR_SLKEY;
			}
			set
			{
				if ((this._SLR_SLKEY != value))
				{
					this.OnSLR_SLKEYChanging(value);
					this.SendPropertyChanging();
					this._SLR_SLKEY = value;
					this.SendPropertyChanged("SLR_SLKEY");
					this.OnSLR_SLKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLR_SUBCODE1", DbType="Int")]
		public System.Nullable<int> SLR_SUBCODE1
		{
			get
			{
				return this._SLR_SUBCODE1;
			}
			set
			{
				if ((this._SLR_SUBCODE1 != value))
				{
					this.OnSLR_SUBCODE1Changing(value);
					this.SendPropertyChanging();
					this._SLR_SUBCODE1 = value;
					this.SendPropertyChanged("SLR_SUBCODE1");
					this.OnSLR_SUBCODE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLR_SUBCODE2", DbType="Int")]
		public System.Nullable<int> SLR_SUBCODE2
		{
			get
			{
				return this._SLR_SUBCODE2;
			}
			set
			{
				if ((this._SLR_SUBCODE2 != value))
				{
					this.OnSLR_SUBCODE2Changing(value);
					this.SendPropertyChanging();
					this._SLR_SUBCODE2 = value;
					this.SendPropertyChanged("SLR_SUBCODE2");
					this.OnSLR_SUBCODE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLR_COEF", DbType="Float NOT NULL")]
		public double SLR_COEF
		{
			get
			{
				return this._SLR_COEF;
			}
			set
			{
				if ((this._SLR_COEF != value))
				{
					this.OnSLR_COEFChanging(value);
					this.SendPropertyChanging();
					this._SLR_COEF = value;
					this.SendPropertyChanged("SLR_COEF");
					this.OnSLR_COEFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_RISK_INS_SL_REF", Storage="_INS_RISK", ThisKey="SLR_RSKEY", OtherKey="RS_KEY", IsForeignKey=true)]
		public INS_RISK INS_RISK
		{
			get
			{
				return this._INS_RISK.Entity;
			}
			set
			{
				INS_RISK previousValue = this._INS_RISK.Entity;
				if (((previousValue != value) 
							|| (this._INS_RISK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INS_RISK.Entity = null;
						previousValue.INS_SL_REFs.Remove(this);
					}
					this._INS_RISK.Entity = value;
					if ((value != null))
					{
						value.INS_SL_REFs.Add(this);
						this._SLR_RSKEY = value.RS_KEY;
					}
					else
					{
						this._SLR_RSKEY = default(int);
					}
					this.SendPropertyChanged("INS_RISK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INS_RISKS")]
	public partial class INS_RISK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RS_KEY;
		
		private string _RS_NAME;
		
		private char _RS_CODE;
		
		private int _RS_CodeKey;
		
		private string _RS_XML;
		
		private bool _RS_SumCoef;
		
		private string _RS_AddsToName;
		
		private string _RS_Caption;
		
		private double _RS_DefaultCoef;
		
		private bool _RS_CalcOfDay;
		
		private bool _RS_CalcOfPremuim;
		
		private bool _RS_UseAgeCoef;
		
		private EntitySet<INS_CONDITION> _INS_CONDITIONs;
		
		private EntitySet<INS_SL_REF> _INS_SL_REFs;
		
		private EntitySet<INS_TARIFF> _INS_TARIFFs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRS_KEYChanging(int value);
    partial void OnRS_KEYChanged();
    partial void OnRS_NAMEChanging(string value);
    partial void OnRS_NAMEChanged();
    partial void OnRS_CODEChanging(char value);
    partial void OnRS_CODEChanged();
    partial void OnRS_CodeKeyChanging(int value);
    partial void OnRS_CodeKeyChanged();
    partial void OnRS_XMLChanging(string value);
    partial void OnRS_XMLChanged();
    partial void OnRS_SumCoefChanging(bool value);
    partial void OnRS_SumCoefChanged();
    partial void OnRS_AddsToNameChanging(string value);
    partial void OnRS_AddsToNameChanged();
    partial void OnRS_CaptionChanging(string value);
    partial void OnRS_CaptionChanged();
    partial void OnRS_DefaultCoefChanging(double value);
    partial void OnRS_DefaultCoefChanged();
    partial void OnRS_CalcOfDayChanging(bool value);
    partial void OnRS_CalcOfDayChanged();
    partial void OnRS_CalcOfPremuimChanging(bool value);
    partial void OnRS_CalcOfPremuimChanged();
    partial void OnRS_UseAgeCoefChanging(bool value);
    partial void OnRS_UseAgeCoefChanged();
    #endregion
		
		public INS_RISK()
		{
			this._INS_CONDITIONs = new EntitySet<INS_CONDITION>(new Action<INS_CONDITION>(this.attach_INS_CONDITIONs), new Action<INS_CONDITION>(this.detach_INS_CONDITIONs));
			this._INS_SL_REFs = new EntitySet<INS_SL_REF>(new Action<INS_SL_REF>(this.attach_INS_SL_REFs), new Action<INS_SL_REF>(this.detach_INS_SL_REFs));
			this._INS_TARIFFs = new EntitySet<INS_TARIFF>(new Action<INS_TARIFF>(this.attach_INS_TARIFFs), new Action<INS_TARIFF>(this.detach_INS_TARIFFs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RS_KEY
		{
			get
			{
				return this._RS_KEY;
			}
			set
			{
				if ((this._RS_KEY != value))
				{
					this.OnRS_KEYChanging(value);
					this.SendPropertyChanging();
					this._RS_KEY = value;
					this.SendPropertyChanged("RS_KEY");
					this.OnRS_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_NAME", DbType="VarChar(254)")]
		public string RS_NAME
		{
			get
			{
				return this._RS_NAME;
			}
			set
			{
				if ((this._RS_NAME != value))
				{
					this.OnRS_NAMEChanging(value);
					this.SendPropertyChanging();
					this._RS_NAME = value;
					this.SendPropertyChanged("RS_NAME");
					this.OnRS_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RS_CODE ", Storage="_RS_CODE", DbType="Char(1) NOT NULL")]
		public char RS_CODE
		{
			get
			{
				return this._RS_CODE;
			}
			set
			{
				if ((this._RS_CODE != value))
				{
					this.OnRS_CODEChanging(value);
					this.SendPropertyChanging();
					this._RS_CODE = value;
					this.SendPropertyChanged("RS_CODE");
					this.OnRS_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_CodeKey", DbType="Int NOT NULL")]
		public int RS_CodeKey
		{
			get
			{
				return this._RS_CodeKey;
			}
			set
			{
				if ((this._RS_CodeKey != value))
				{
					this.OnRS_CodeKeyChanging(value);
					this.SendPropertyChanging();
					this._RS_CodeKey = value;
					this.SendPropertyChanged("RS_CodeKey");
					this.OnRS_CodeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_XML", DbType="VarChar(50)")]
		public string RS_XML
		{
			get
			{
				return this._RS_XML;
			}
			set
			{
				if ((this._RS_XML != value))
				{
					this.OnRS_XMLChanging(value);
					this.SendPropertyChanging();
					this._RS_XML = value;
					this.SendPropertyChanged("RS_XML");
					this.OnRS_XMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_SumCoef", DbType="Bit NOT NULL")]
		public bool RS_SumCoef
		{
			get
			{
				return this._RS_SumCoef;
			}
			set
			{
				if ((this._RS_SumCoef != value))
				{
					this.OnRS_SumCoefChanging(value);
					this.SendPropertyChanging();
					this._RS_SumCoef = value;
					this.SendPropertyChanged("RS_SumCoef");
					this.OnRS_SumCoefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_AddsToName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string RS_AddsToName
		{
			get
			{
				return this._RS_AddsToName;
			}
			set
			{
				if ((this._RS_AddsToName != value))
				{
					this.OnRS_AddsToNameChanging(value);
					this.SendPropertyChanging();
					this._RS_AddsToName = value;
					this.SendPropertyChanged("RS_AddsToName");
					this.OnRS_AddsToNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_Caption", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string RS_Caption
		{
			get
			{
				return this._RS_Caption;
			}
			set
			{
				if ((this._RS_Caption != value))
				{
					this.OnRS_CaptionChanging(value);
					this.SendPropertyChanging();
					this._RS_Caption = value;
					this.SendPropertyChanged("RS_Caption");
					this.OnRS_CaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_DefaultCoef", DbType="Float NOT NULL")]
		public double RS_DefaultCoef
		{
			get
			{
				return this._RS_DefaultCoef;
			}
			set
			{
				if ((this._RS_DefaultCoef != value))
				{
					this.OnRS_DefaultCoefChanging(value);
					this.SendPropertyChanging();
					this._RS_DefaultCoef = value;
					this.SendPropertyChanged("RS_DefaultCoef");
					this.OnRS_DefaultCoefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_CalcOfDay", DbType="bit Not Null")]
		public bool RS_CalcOfDay
		{
			get
			{
				return this._RS_CalcOfDay;
			}
			set
			{
				if ((this._RS_CalcOfDay != value))
				{
					this.OnRS_CalcOfDayChanging(value);
					this.SendPropertyChanging();
					this._RS_CalcOfDay = value;
					this.SendPropertyChanged("RS_CalcOfDay");
					this.OnRS_CalcOfDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_CalcOfPremuim", DbType="bit Not Null")]
		public bool RS_CalcOfPremuim
		{
			get
			{
				return this._RS_CalcOfPremuim;
			}
			set
			{
				if ((this._RS_CalcOfPremuim != value))
				{
					this.OnRS_CalcOfPremuimChanging(value);
					this.SendPropertyChanging();
					this._RS_CalcOfPremuim = value;
					this.SendPropertyChanged("RS_CalcOfPremuim");
					this.OnRS_CalcOfPremuimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_UseAgeCoef", DbType="bit Not Null")]
		public bool RS_UseAgeCoef
		{
			get
			{
				return this._RS_UseAgeCoef;
			}
			set
			{
				if ((this._RS_UseAgeCoef != value))
				{
					this.OnRS_UseAgeCoefChanging(value);
					this.SendPropertyChanging();
					this._RS_UseAgeCoef = value;
					this.SendPropertyChanged("RS_UseAgeCoef");
					this.OnRS_UseAgeCoefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_RISK_INS_CONDITION", Storage="_INS_CONDITIONs", ThisKey="RS_KEY", OtherKey="CO_RSKEY")]
		public EntitySet<INS_CONDITION> INS_CONDITIONs
		{
			get
			{
				return this._INS_CONDITIONs;
			}
			set
			{
				this._INS_CONDITIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_RISK_INS_SL_REF", Storage="_INS_SL_REFs", ThisKey="RS_KEY", OtherKey="SLR_RSKEY")]
		public EntitySet<INS_SL_REF> INS_SL_REFs
		{
			get
			{
				return this._INS_SL_REFs;
			}
			set
			{
				this._INS_SL_REFs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_RISK_INS_TARIFF", Storage="_INS_TARIFFs", ThisKey="RS_CodeKey", OtherKey="TR_RSCodeKEY")]
		public EntitySet<INS_TARIFF> INS_TARIFFs
		{
			get
			{
				return this._INS_TARIFFs;
			}
			set
			{
				this._INS_TARIFFs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INS_CONDITIONs(INS_CONDITION entity)
		{
			this.SendPropertyChanging();
			entity.INS_RISK = this;
		}
		
		private void detach_INS_CONDITIONs(INS_CONDITION entity)
		{
			this.SendPropertyChanging();
			entity.INS_RISK = null;
		}
		
		private void attach_INS_SL_REFs(INS_SL_REF entity)
		{
			this.SendPropertyChanging();
			entity.INS_RISK = this;
		}
		
		private void detach_INS_SL_REFs(INS_SL_REF entity)
		{
			this.SendPropertyChanging();
			entity.INS_RISK = null;
		}
		
		private void attach_INS_TARIFFs(INS_TARIFF entity)
		{
			this.SendPropertyChanging();
			entity.INS_RISK = this;
		}
		
		private void detach_INS_TARIFFs(INS_TARIFF entity)
		{
			this.SendPropertyChanging();
			entity.INS_RISK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INS_COUNTRY_REF")]
	public partial class INS_COUNTRY_REF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CR_KEY;
		
		private int _CR_CNKEY;
		
		private int _CR_CIKEY;
		
		private EntityRef<COUNTRY> _COUNTRY;
		
		private EntityRef<INS_COUNTRIES_ING> _INS_COUNTRIES_ING;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCR_KEYChanging(int value);
    partial void OnCR_KEYChanged();
    partial void OnCR_CNKEYChanging(int value);
    partial void OnCR_CNKEYChanged();
    partial void OnCR_CIKEYChanging(int value);
    partial void OnCR_CIKEYChanged();
    #endregion
		
		public INS_COUNTRY_REF()
		{
			this._COUNTRY = default(EntityRef<COUNTRY>);
			this._INS_COUNTRIES_ING = default(EntityRef<INS_COUNTRIES_ING>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CR_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CR_KEY
		{
			get
			{
				return this._CR_KEY;
			}
			set
			{
				if ((this._CR_KEY != value))
				{
					this.OnCR_KEYChanging(value);
					this.SendPropertyChanging();
					this._CR_KEY = value;
					this.SendPropertyChanged("CR_KEY");
					this.OnCR_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CR_CNKEY", DbType="Int no null")]
		public int CR_CNKEY
		{
			get
			{
				return this._CR_CNKEY;
			}
			set
			{
				if ((this._CR_CNKEY != value))
				{
					if (this._COUNTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCR_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._CR_CNKEY = value;
					this.SendPropertyChanged("CR_CNKEY");
					this.OnCR_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CR_CIKEY", DbType="Int no null")]
		public int CR_CIKEY
		{
			get
			{
				return this._CR_CIKEY;
			}
			set
			{
				if ((this._CR_CIKEY != value))
				{
					if (this._INS_COUNTRIES_ING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCR_CIKEYChanging(value);
					this.SendPropertyChanging();
					this._CR_CIKEY = value;
					this.SendPropertyChanged("CR_CIKEY");
					this.OnCR_CIKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_INS_COUNTRY_REF", Storage="_COUNTRY", ThisKey="CR_CNKEY", OtherKey="CN_KEY", IsForeignKey=true)]
		internal COUNTRY COUNTRY
		{
			get
			{
				return this._COUNTRY.Entity;
			}
			set
			{
				COUNTRY previousValue = this._COUNTRY.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRY.Entity = null;
						previousValue.INS_COUNTRY_REFs.Remove(this);
					}
					this._COUNTRY.Entity = value;
					if ((value != null))
					{
						value.INS_COUNTRY_REFs.Add(this);
						this._CR_CNKEY = value.CN_KEY;
					}
					else
					{
						this._CR_CNKEY = default(int);
					}
					this.SendPropertyChanged("COUNTRY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_COUNTRIES_ING_INS_COUNTRY_REF", Storage="_INS_COUNTRIES_ING", ThisKey="CR_CIKEY", OtherKey="CI_KEY", IsForeignKey=true, DeleteRule="CASCADE")]
		public INS_COUNTRIES_ING INS_COUNTRIES_ING
		{
			get
			{
				return this._INS_COUNTRIES_ING.Entity;
			}
			set
			{
				INS_COUNTRIES_ING previousValue = this._INS_COUNTRIES_ING.Entity;
				if (((previousValue != value) 
							|| (this._INS_COUNTRIES_ING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INS_COUNTRIES_ING.Entity = null;
						previousValue.INS_COUNTRY_REFs.Remove(this);
					}
					this._INS_COUNTRIES_ING.Entity = value;
					if ((value != null))
					{
						value.INS_COUNTRY_REFs.Add(this);
						this._CR_CIKEY = value.CI_KEY;
					}
					else
					{
						this._CR_CIKEY = default(int);
					}
					this.SendPropertyChanged("INS_COUNTRIES_ING");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INS_TERRITORIES")]
	public partial class INS_TERRITORy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IT_INKEY;
		
		private int _IT_CIKEY;
		
		private int _IT_Key;
		
		private EntityRef<INS_INSURANCE> _INS_INSURANCE;
		
		private EntityRef<INS_COUNTRIES_ING> _INS_COUNTRIES_ING;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIT_INKEYChanging(int value);
    partial void OnIT_INKEYChanged();
    partial void OnIT_CIKEYChanging(int value);
    partial void OnIT_CIKEYChanged();
    partial void OnIT_KeyChanging(int value);
    partial void OnIT_KeyChanged();
    #endregion
		
		public INS_TERRITORy()
		{
			this._INS_INSURANCE = default(EntityRef<INS_INSURANCE>);
			this._INS_COUNTRIES_ING = default(EntityRef<INS_COUNTRIES_ING>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IT_INKEY", DbType="Int no null")]
		public int IT_INKEY
		{
			get
			{
				return this._IT_INKEY;
			}
			set
			{
				if ((this._IT_INKEY != value))
				{
					if (this._INS_INSURANCE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIT_INKEYChanging(value);
					this.SendPropertyChanging();
					this._IT_INKEY = value;
					this.SendPropertyChanged("IT_INKEY");
					this.OnIT_INKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IT_CIKEY", DbType="Int no null")]
		public int IT_CIKEY
		{
			get
			{
				return this._IT_CIKEY;
			}
			set
			{
				if ((this._IT_CIKEY != value))
				{
					if (this._INS_COUNTRIES_ING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIT_CIKEYChanging(value);
					this.SendPropertyChanging();
					this._IT_CIKEY = value;
					this.SendPropertyChanged("IT_CIKEY");
					this.OnIT_CIKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IT_Key", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IT_Key
		{
			get
			{
				return this._IT_Key;
			}
			set
			{
				if ((this._IT_Key != value))
				{
					this.OnIT_KeyChanging(value);
					this.SendPropertyChanging();
					this._IT_Key = value;
					this.SendPropertyChanged("IT_Key");
					this.OnIT_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_INSURANCE_INS_TERRITORy", Storage="_INS_INSURANCE", ThisKey="IT_INKEY", OtherKey="IN_KEY", IsForeignKey=true, DeleteRule="CASCADE")]
		public INS_INSURANCE INS_INSURANCE
		{
			get
			{
				return this._INS_INSURANCE.Entity;
			}
			set
			{
				INS_INSURANCE previousValue = this._INS_INSURANCE.Entity;
				if (((previousValue != value) 
							|| (this._INS_INSURANCE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INS_INSURANCE.Entity = null;
						previousValue.INS_TERRITORies.Remove(this);
					}
					this._INS_INSURANCE.Entity = value;
					if ((value != null))
					{
						value.INS_TERRITORies.Add(this);
						this._IT_INKEY = value.IN_KEY;
					}
					else
					{
						this._IT_INKEY = default(int);
					}
					this.SendPropertyChanged("INS_INSURANCE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_COUNTRIES_ING_INS_TERRITORy", Storage="_INS_COUNTRIES_ING", ThisKey="IT_CIKEY", OtherKey="CI_KEY", IsForeignKey=true)]
		public INS_COUNTRIES_ING INS_COUNTRIES_ING
		{
			get
			{
				return this._INS_COUNTRIES_ING.Entity;
			}
			set
			{
				INS_COUNTRIES_ING previousValue = this._INS_COUNTRIES_ING.Entity;
				if (((previousValue != value) 
							|| (this._INS_COUNTRIES_ING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INS_COUNTRIES_ING.Entity = null;
						previousValue.INS_TERRITORies.Remove(this);
					}
					this._INS_COUNTRIES_ING.Entity = value;
					if ((value != null))
					{
						value.INS_TERRITORies.Add(this);
						this._IT_CIKEY = value.CI_KEY;
					}
					else
					{
						this._IT_CIKEY = default(int);
					}
					this.SendPropertyChanged("INS_COUNTRIES_ING");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INS_AgeCoef")]
	public partial class INS_AgeCoef : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AC_Id;
		
		private int _AC_AgeFrom;
		
		private int _AC_AgeTo;
		
		private double _AC_Coef;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAC_IdChanging(int value);
    partial void OnAC_IdChanged();
    partial void OnAC_AgeFromChanging(int value);
    partial void OnAC_AgeFromChanged();
    partial void OnAC_AgeToChanging(int value);
    partial void OnAC_AgeToChanged();
    partial void OnAC_CoefChanging(double value);
    partial void OnAC_CoefChanged();
    #endregion
		
		public INS_AgeCoef()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AC_Id
		{
			get
			{
				return this._AC_Id;
			}
			set
			{
				if ((this._AC_Id != value))
				{
					this.OnAC_IdChanging(value);
					this.SendPropertyChanging();
					this._AC_Id = value;
					this.SendPropertyChanged("AC_Id");
					this.OnAC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_AgeFrom", DbType="Int NOT NULL")]
		public int AC_AgeFrom
		{
			get
			{
				return this._AC_AgeFrom;
			}
			set
			{
				if ((this._AC_AgeFrom != value))
				{
					this.OnAC_AgeFromChanging(value);
					this.SendPropertyChanging();
					this._AC_AgeFrom = value;
					this.SendPropertyChanged("AC_AgeFrom");
					this.OnAC_AgeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_AgeTo", DbType="Int NOT NULL")]
		public int AC_AgeTo
		{
			get
			{
				return this._AC_AgeTo;
			}
			set
			{
				if ((this._AC_AgeTo != value))
				{
					this.OnAC_AgeToChanging(value);
					this.SendPropertyChanging();
					this._AC_AgeTo = value;
					this.SendPropertyChanged("AC_AgeTo");
					this.OnAC_AgeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_Coef", DbType="Float NOT NULL")]
		public double AC_Coef
		{
			get
			{
				return this._AC_Coef;
			}
			set
			{
				if ((this._AC_Coef != value))
				{
					this.OnAC_CoefChanging(value);
					this.SendPropertyChanging();
					this._AC_Coef = value;
					this.SendPropertyChanged("AC_Coef");
					this.OnAC_CoefChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INS_PERSONS")]
	public partial class INS_PERSON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IP_INKEY = default(int);
		
		private int _IP_TUKEY = default(int);
		
		private string _IP_NAME = default(string);
		
		private string _IP_FNAME = default(string);
		
		private System.DateTime _IP_BIRTHDAY = default(System.DateTime);
		
		private int _IP_Key;
		
		private EntityRef<INS_INSURANCE> _INS_INSURANCE;
		
		private EntityRef<tbl_Turist> _tbl_Turist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIP_KeyChanging(int value);
    partial void OnIP_KeyChanged();
    #endregion
		
		public INS_PERSON()
		{
			this._INS_INSURANCE = default(EntityRef<INS_INSURANCE>);
			this._tbl_Turist = default(EntityRef<tbl_Turist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP_INKEY", DbType="Int not null", UpdateCheck=UpdateCheck.Never)]
		public int IP_INKEY
		{
			get
			{
				return this._IP_INKEY;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP_TUKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int IP_TUKEY
		{
			get
			{
				return this._IP_TUKEY;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP_NAME", DbType="VarChar(35) not null", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string IP_NAME
		{
			get
			{
				return this._IP_NAME;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP_FNAME", DbType="VarChar(15) not null", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string IP_FNAME
		{
			get
			{
				return this._IP_FNAME;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP_BIRTHDAY", DbType="DateTime not null", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime IP_BIRTHDAY
		{
			get
			{
				return this._IP_BIRTHDAY;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP_Key", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IP_Key
		{
			get
			{
				return this._IP_Key;
			}
			set
			{
				if ((this._IP_Key != value))
				{
					this.OnIP_KeyChanging(value);
					this.SendPropertyChanging();
					this._IP_Key = value;
					this.SendPropertyChanged("IP_Key");
					this.OnIP_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_INSURANCE_INS_PERSON", Storage="_INS_INSURANCE", ThisKey="IP_INKEY", OtherKey="IN_KEY", IsForeignKey=true, DeleteRule="CASCADE")]
		public INS_INSURANCE INS_INSURANCE
		{
			get
			{
				return this._INS_INSURANCE.Entity;
			}
			set
			{
				INS_INSURANCE previousValue = this._INS_INSURANCE.Entity;
				if (((previousValue != value) 
							|| (this._INS_INSURANCE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INS_INSURANCE.Entity = null;
						previousValue.INS_PERSONs.Remove(this);
					}
					this._INS_INSURANCE.Entity = value;
					if ((value != null))
					{
						value.INS_PERSONs.Add(this);
						this._IP_INKEY = value.IN_KEY;
					}
					else
					{
						this._IP_INKEY = default(int);
					}
					this.SendPropertyChanged("INS_INSURANCE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Turist_INS_PERSON", Storage="_tbl_Turist", ThisKey="IP_TUKEY", OtherKey="TU_KEY", IsForeignKey=true)]
		public tbl_Turist tbl_Turist
		{
			get
			{
				return this._tbl_Turist.Entity;
			}
			set
			{
				tbl_Turist previousValue = this._tbl_Turist.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Turist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Turist.Entity = null;
						previousValue.INS_PERSONs.Remove(this);
					}
					this._tbl_Turist.Entity = value;
					if ((value != null))
					{
						value.INS_PERSONs.Add(this);
						this._IP_TUKEY = value.TU_KEY;
					}
					else
					{
						this._IP_TUKEY = default(int);
					}
					this.SendPropertyChanged("tbl_Turist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class COUNTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CN_KEY;
		
		private string _CN_NAME;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<tbl_Dogovor> _tbl_Dogovors;
		
		private EntitySet<INS_COUNTRY_REF> _INS_COUNTRY_REFs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCN_KEYChanging(int value);
    partial void OnCN_KEYChanged();
    partial void OnCN_NAMEChanging(string value);
    partial void OnCN_NAMEChanged();
    #endregion
		
		public COUNTRY()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._tbl_Dogovors = new EntitySet<tbl_Dogovor>(new Action<tbl_Dogovor>(this.attach_tbl_Dogovors), new Action<tbl_Dogovor>(this.detach_tbl_Dogovors));
			this._INS_COUNTRY_REFs = new EntitySet<INS_COUNTRY_REF>(new Action<INS_COUNTRY_REF>(this.attach_INS_COUNTRY_REFs), new Action<INS_COUNTRY_REF>(this.detach_INS_COUNTRY_REFs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CN_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int CN_KEY
		{
			get
			{
				return this._CN_KEY;
			}
			set
			{
				if ((this._CN_KEY != value))
				{
					this.OnCN_KEYChanging(value);
					this.SendPropertyChanging();
					this._CN_KEY = value;
					this.SendPropertyChanged("CN_KEY");
					this.OnCN_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CN_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CN_NAME
		{
			get
			{
				return this._CN_NAME;
			}
			set
			{
				if ((this._CN_NAME != value))
				{
					this.OnCN_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CN_NAME = value;
					this.SendPropertyChanged("CN_NAME");
					this.OnCN_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="CN_KEY", OtherKey="DL_CNKEY")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_tbl_Dogovor", Storage="_tbl_Dogovors", ThisKey="CN_KEY", OtherKey="DG_CNKEY")]
		public EntitySet<tbl_Dogovor> tbl_Dogovors
		{
			get
			{
				return this._tbl_Dogovors;
			}
			set
			{
				this._tbl_Dogovors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_INS_COUNTRY_REF", Storage="_INS_COUNTRY_REFs", ThisKey="CN_KEY", OtherKey="CR_CNKEY")]
		public EntitySet<INS_COUNTRY_REF> INS_COUNTRY_REFs
		{
			get
			{
				return this._INS_COUNTRY_REFs;
			}
			set
			{
				this._INS_COUNTRY_REFs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRY = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRY = null;
		}
		
		private void attach_tbl_Dogovors(tbl_Dogovor entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRY = this;
		}
		
		private void detach_tbl_Dogovors(tbl_Dogovor entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRY = null;
		}
		
		private void attach_INS_COUNTRY_REFs(INS_COUNTRY_REF entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRY = this;
		}
		
		private void detach_INS_COUNTRY_REFs(INS_COUNTRY_REF entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INS_COUNTRIES_ING")]
	public partial class INS_COUNTRIES_ING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CI_KEY;
		
		private string _CI_CODEREUTER;
		
		private string _CI_NAME;
		
		private decimal _CI_MinimumRS1;
		
		private bool _CI_NotUseInGroup;
		
		private EntitySet<INS_COUNTRY_REF> _INS_COUNTRY_REFs;
		
		private EntitySet<INS_TERRITORy> _INS_TERRITORies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCI_KEYChanging(int value);
    partial void OnCI_KEYChanged();
    partial void OnCI_CODEREUTERChanging(string value);
    partial void OnCI_CODEREUTERChanged();
    partial void OnCI_NAMEChanging(string value);
    partial void OnCI_NAMEChanged();
    partial void OnCI_MinimumRS1Changing(decimal value);
    partial void OnCI_MinimumRS1Changed();
    partial void OnCI_NotUseInGroupChanging(bool value);
    partial void OnCI_NotUseInGroupChanged();
    #endregion
		
		public INS_COUNTRIES_ING()
		{
			this._INS_COUNTRY_REFs = new EntitySet<INS_COUNTRY_REF>(new Action<INS_COUNTRY_REF>(this.attach_INS_COUNTRY_REFs), new Action<INS_COUNTRY_REF>(this.detach_INS_COUNTRY_REFs));
			this._INS_TERRITORies = new EntitySet<INS_TERRITORy>(new Action<INS_TERRITORy>(this.attach_INS_TERRITORies), new Action<INS_TERRITORy>(this.detach_INS_TERRITORies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CI_KEY
		{
			get
			{
				return this._CI_KEY;
			}
			set
			{
				if ((this._CI_KEY != value))
				{
					this.OnCI_KEYChanging(value);
					this.SendPropertyChanging();
					this._CI_KEY = value;
					this.SendPropertyChanged("CI_KEY");
					this.OnCI_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI_CODEREUTER", DbType="VarChar(10)")]
		public string CI_CODEREUTER
		{
			get
			{
				return this._CI_CODEREUTER;
			}
			set
			{
				if ((this._CI_CODEREUTER != value))
				{
					this.OnCI_CODEREUTERChanging(value);
					this.SendPropertyChanging();
					this._CI_CODEREUTER = value;
					this.SendPropertyChanged("CI_CODEREUTER");
					this.OnCI_CODEREUTERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI_NAME", DbType="VarChar(50)")]
		public string CI_NAME
		{
			get
			{
				return this._CI_NAME;
			}
			set
			{
				if ((this._CI_NAME != value))
				{
					this.OnCI_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CI_NAME = value;
					this.SendPropertyChanged("CI_NAME");
					this.OnCI_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI_MinimumRS1", DbType="Money NOT NULL")]
		public decimal CI_MinimumRS1
		{
			get
			{
				return this._CI_MinimumRS1;
			}
			set
			{
				if ((this._CI_MinimumRS1 != value))
				{
					this.OnCI_MinimumRS1Changing(value);
					this.SendPropertyChanging();
					this._CI_MinimumRS1 = value;
					this.SendPropertyChanged("CI_MinimumRS1");
					this.OnCI_MinimumRS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CI_NotUseInGroup", DbType="Bit NOT NULL")]
		public bool CI_NotUseInGroup
		{
			get
			{
				return this._CI_NotUseInGroup;
			}
			set
			{
				if ((this._CI_NotUseInGroup != value))
				{
					this.OnCI_NotUseInGroupChanging(value);
					this.SendPropertyChanging();
					this._CI_NotUseInGroup = value;
					this.SendPropertyChanged("CI_NotUseInGroup");
					this.OnCI_NotUseInGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_COUNTRIES_ING_INS_COUNTRY_REF", Storage="_INS_COUNTRY_REFs", ThisKey="CI_KEY", OtherKey="CR_CIKEY")]
		public EntitySet<INS_COUNTRY_REF> INS_COUNTRY_REFs
		{
			get
			{
				return this._INS_COUNTRY_REFs;
			}
			set
			{
				this._INS_COUNTRY_REFs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_COUNTRIES_ING_INS_TERRITORy", Storage="_INS_TERRITORies", ThisKey="CI_KEY", OtherKey="IT_CIKEY")]
		public EntitySet<INS_TERRITORy> INS_TERRITORies
		{
			get
			{
				return this._INS_TERRITORies;
			}
			set
			{
				this._INS_TERRITORies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INS_COUNTRY_REFs(INS_COUNTRY_REF entity)
		{
			this.SendPropertyChanging();
			entity.INS_COUNTRIES_ING = this;
		}
		
		private void detach_INS_COUNTRY_REFs(INS_COUNTRY_REF entity)
		{
			this.SendPropertyChanging();
			entity.INS_COUNTRIES_ING = null;
		}
		
		private void attach_INS_TERRITORies(INS_TERRITORy entity)
		{
			this.SendPropertyChanging();
			entity.INS_COUNTRIES_ING = this;
		}
		
		private void detach_INS_TERRITORies(INS_TERRITORy entity)
		{
			this.SendPropertyChanging();
			entity.INS_COUNTRIES_ING = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INS_TARIFF")]
	public partial class INS_TARIFF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TR_KEY;
		
		private int _TR_RSCodeKEY;
		
		private int _TR_DAY1;
		
		private int _TR_DAY2;
		
		private int _TR_INSURSUM;
		
		private decimal _TR_SUM;
		
		private string _TR_RATE;
		
		private int _TR_FRANCHISE;
		
		private decimal _TR_PERCENT;
		
		private System.Nullable<int> _TR_CIKey;
		
		private string _TR_NumCode;
		
		private EntityRef<INS_RISK> _INS_RISK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTR_KEYChanging(int value);
    partial void OnTR_KEYChanged();
    partial void OnTR_RSCodeKEYChanging(int value);
    partial void OnTR_RSCodeKEYChanged();
    partial void OnTR_DAY1Changing(int value);
    partial void OnTR_DAY1Changed();
    partial void OnTR_DAY2Changing(int value);
    partial void OnTR_DAY2Changed();
    partial void OnTR_INSURSUMChanging(int value);
    partial void OnTR_INSURSUMChanged();
    partial void OnTR_SUMChanging(decimal value);
    partial void OnTR_SUMChanged();
    partial void OnTR_RATEChanging(string value);
    partial void OnTR_RATEChanged();
    partial void OnTR_FRANCHISEChanging(int value);
    partial void OnTR_FRANCHISEChanged();
    partial void OnTR_PERCENTChanging(decimal value);
    partial void OnTR_PERCENTChanged();
    partial void OnTR_CIKeyChanging(System.Nullable<int> value);
    partial void OnTR_CIKeyChanged();
    partial void OnTR_NumCodeChanging(string value);
    partial void OnTR_NumCodeChanged();
    #endregion
		
		public INS_TARIFF()
		{
			this._INS_RISK = default(EntityRef<INS_RISK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_KEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TR_KEY
		{
			get
			{
				return this._TR_KEY;
			}
			set
			{
				if ((this._TR_KEY != value))
				{
					this.OnTR_KEYChanging(value);
					this.SendPropertyChanging();
					this._TR_KEY = value;
					this.SendPropertyChanged("TR_KEY");
					this.OnTR_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_RSCodeKEY", DbType="Int not null")]
		public int TR_RSCodeKEY
		{
			get
			{
				return this._TR_RSCodeKEY;
			}
			set
			{
				if ((this._TR_RSCodeKEY != value))
				{
					if (this._INS_RISK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTR_RSCodeKEYChanging(value);
					this.SendPropertyChanging();
					this._TR_RSCodeKEY = value;
					this.SendPropertyChanged("TR_RSCodeKEY");
					this.OnTR_RSCodeKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_DAY1", DbType="Int not null")]
		public int TR_DAY1
		{
			get
			{
				return this._TR_DAY1;
			}
			set
			{
				if ((this._TR_DAY1 != value))
				{
					this.OnTR_DAY1Changing(value);
					this.SendPropertyChanging();
					this._TR_DAY1 = value;
					this.SendPropertyChanged("TR_DAY1");
					this.OnTR_DAY1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_DAY2", DbType="Int not null")]
		public int TR_DAY2
		{
			get
			{
				return this._TR_DAY2;
			}
			set
			{
				if ((this._TR_DAY2 != value))
				{
					this.OnTR_DAY2Changing(value);
					this.SendPropertyChanging();
					this._TR_DAY2 = value;
					this.SendPropertyChanged("TR_DAY2");
					this.OnTR_DAY2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_INSURSUM", DbType="Int not null")]
		public int TR_INSURSUM
		{
			get
			{
				return this._TR_INSURSUM;
			}
			set
			{
				if ((this._TR_INSURSUM != value))
				{
					this.OnTR_INSURSUMChanging(value);
					this.SendPropertyChanging();
					this._TR_INSURSUM = value;
					this.SendPropertyChanged("TR_INSURSUM");
					this.OnTR_INSURSUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_SUM", DbType="Money not null")]
		public decimal TR_SUM
		{
			get
			{
				return this._TR_SUM;
			}
			set
			{
				if ((this._TR_SUM != value))
				{
					this.OnTR_SUMChanging(value);
					this.SendPropertyChanging();
					this._TR_SUM = value;
					this.SendPropertyChanged("TR_SUM");
					this.OnTR_SUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_RATE", DbType="VarChar(3)")]
		public string TR_RATE
		{
			get
			{
				return this._TR_RATE;
			}
			set
			{
				if ((this._TR_RATE != value))
				{
					this.OnTR_RATEChanging(value);
					this.SendPropertyChanging();
					this._TR_RATE = value;
					this.SendPropertyChanged("TR_RATE");
					this.OnTR_RATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_FRANCHISE", DbType="Int NOT NULL")]
		public int TR_FRANCHISE
		{
			get
			{
				return this._TR_FRANCHISE;
			}
			set
			{
				if ((this._TR_FRANCHISE != value))
				{
					this.OnTR_FRANCHISEChanging(value);
					this.SendPropertyChanging();
					this._TR_FRANCHISE = value;
					this.SendPropertyChanged("TR_FRANCHISE");
					this.OnTR_FRANCHISEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_PERCENT", DbType="Decimal(8,2) NOT NULL")]
		public decimal TR_PERCENT
		{
			get
			{
				return this._TR_PERCENT;
			}
			set
			{
				if ((this._TR_PERCENT != value))
				{
					this.OnTR_PERCENTChanging(value);
					this.SendPropertyChanging();
					this._TR_PERCENT = value;
					this.SendPropertyChanged("TR_PERCENT");
					this.OnTR_PERCENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_CIKey", DbType="Int")]
		public System.Nullable<int> TR_CIKey
		{
			get
			{
				return this._TR_CIKey;
			}
			set
			{
				if ((this._TR_CIKey != value))
				{
					this.OnTR_CIKeyChanging(value);
					this.SendPropertyChanging();
					this._TR_CIKey = value;
					this.SendPropertyChanged("TR_CIKey");
					this.OnTR_CIKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_NumCode", DbType="VarChar(7)")]
		public string TR_NumCode
		{
			get
			{
				return this._TR_NumCode;
			}
			set
			{
				if ((this._TR_NumCode != value))
				{
					this.OnTR_NumCodeChanging(value);
					this.SendPropertyChanging();
					this._TR_NumCode = value;
					this.SendPropertyChanged("TR_NumCode");
					this.OnTR_NumCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INS_RISK_INS_TARIFF", Storage="_INS_RISK", ThisKey="TR_RSCodeKEY", OtherKey="RS_CodeKey", IsForeignKey=true)]
		public INS_RISK INS_RISK
		{
			get
			{
				return this._INS_RISK.Entity;
			}
			set
			{
				INS_RISK previousValue = this._INS_RISK.Entity;
				if (((previousValue != value) 
							|| (this._INS_RISK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INS_RISK.Entity = null;
						previousValue.INS_TARIFFs.Remove(this);
					}
					this._INS_RISK.Entity = value;
					if ((value != null))
					{
						value.INS_TARIFFs.Add(this);
						this._TR_RSCodeKEY = value.RS_CodeKey;
					}
					else
					{
						this._TR_RSCodeKEY = default(int);
					}
					this.SendPropertyChanged("INS_RISK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RealCourses")]
	public partial class RealCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RC_RCOD1;
		
		private System.Nullable<decimal> _RC_COURSE;
		
		private string _RC_RCOD2;
		
		private System.Nullable<System.DateTime> _RC_DATEBEG;
		
		private System.Nullable<System.DateTime> _RC_DATEEND;
		
		private System.Data.Linq.Binary _ROWID;
		
		private int _RC_KEY;
		
		private System.Nullable<decimal> _RC_COURSE_CB;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRC_RCOD1Changing(string value);
    partial void OnRC_RCOD1Changed();
    partial void OnRC_COURSEChanging(System.Nullable<decimal> value);
    partial void OnRC_COURSEChanged();
    partial void OnRC_RCOD2Changing(string value);
    partial void OnRC_RCOD2Changed();
    partial void OnRC_DATEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnRC_DATEBEGChanged();
    partial void OnRC_DATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnRC_DATEENDChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnRC_KEYChanging(int value);
    partial void OnRC_KEYChanged();
    partial void OnRC_COURSE_CBChanging(System.Nullable<decimal> value);
    partial void OnRC_COURSE_CBChanged();
    #endregion
		
		public RealCourse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_RCOD1", DbType="VarChar(3) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RC_RCOD1
		{
			get
			{
				return this._RC_RCOD1;
			}
			set
			{
				if ((this._RC_RCOD1 != value))
				{
					this.OnRC_RCOD1Changing(value);
					this.SendPropertyChanging();
					this._RC_RCOD1 = value;
					this.SendPropertyChanged("RC_RCOD1");
					this.OnRC_RCOD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_COURSE", DbType="Decimal(19,6)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RC_COURSE
		{
			get
			{
				return this._RC_COURSE;
			}
			set
			{
				if ((this._RC_COURSE != value))
				{
					this.OnRC_COURSEChanging(value);
					this.SendPropertyChanging();
					this._RC_COURSE = value;
					this.SendPropertyChanged("RC_COURSE");
					this.OnRC_COURSEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_RCOD2", DbType="VarChar(2) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RC_RCOD2
		{
			get
			{
				return this._RC_RCOD2;
			}
			set
			{
				if ((this._RC_RCOD2 != value))
				{
					this.OnRC_RCOD2Changing(value);
					this.SendPropertyChanging();
					this._RC_RCOD2 = value;
					this.SendPropertyChanged("RC_RCOD2");
					this.OnRC_RCOD2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_DATEBEG", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RC_DATEBEG
		{
			get
			{
				return this._RC_DATEBEG;
			}
			set
			{
				if ((this._RC_DATEBEG != value))
				{
					this.OnRC_DATEBEGChanging(value);
					this.SendPropertyChanging();
					this._RC_DATEBEG = value;
					this.SendPropertyChanged("RC_DATEBEG");
					this.OnRC_DATEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_DATEEND", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RC_DATEEND
		{
			get
			{
				return this._RC_DATEEND;
			}
			set
			{
				if ((this._RC_DATEEND != value))
				{
					this.OnRC_DATEENDChanging(value);
					this.SendPropertyChanging();
					this._RC_DATEEND = value;
					this.SendPropertyChanged("RC_DATEEND");
					this.OnRC_DATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int RC_KEY
		{
			get
			{
				return this._RC_KEY;
			}
			set
			{
				if ((this._RC_KEY != value))
				{
					this.OnRC_KEYChanging(value);
					this.SendPropertyChanging();
					this._RC_KEY = value;
					this.SendPropertyChanged("RC_KEY");
					this.OnRC_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_COURSE_CB", DbType="Decimal(19,6)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> RC_COURSE_CB
		{
			get
			{
				return this._RC_COURSE_CB;
			}
			set
			{
				if ((this._RC_COURSE_CB != value))
				{
					this.OnRC_COURSE_CBChanging(value);
					this.SendPropertyChanging();
					this._RC_COURSE_CB = value;
					this.SendPropertyChanged("RC_COURSE_CB");
					this.OnRC_COURSE_CBChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
