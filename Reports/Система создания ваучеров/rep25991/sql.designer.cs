#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace rep25991
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="lanta")]
	public partial class sqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Dogovor(tbl_Dogovor instance);
    partial void Updatetbl_Dogovor(tbl_Dogovor instance);
    partial void Deletetbl_Dogovor(tbl_Dogovor instance);
    partial void InsertCOUNTRY(COUNTRY instance);
    partial void UpdateCOUNTRY(COUNTRY instance);
    partial void DeleteCOUNTRY(COUNTRY instance);
    partial void Inserttbl_DogovorList(tbl_DogovorList instance);
    partial void Updatetbl_DogovorList(tbl_DogovorList instance);
    partial void Deletetbl_DogovorList(tbl_DogovorList instance);
    partial void Inserttbl_Turist(tbl_Turist instance);
    partial void Updatetbl_Turist(tbl_Turist instance);
    partial void Deletetbl_Turist(tbl_Turist instance);
    partial void InsertTuristService(TuristService instance);
    partial void UpdateTuristService(TuristService instance);
    partial void DeleteTuristService(TuristService instance);
    partial void Inserttbl_TurList(tbl_TurList instance);
    partial void Updatetbl_TurList(tbl_TurList instance);
    partial void Deletetbl_TurList(tbl_TurList instance);
    partial void Inserttbl_Partner(tbl_Partner instance);
    partial void Updatetbl_Partner(tbl_Partner instance);
    partial void Deletetbl_Partner(tbl_Partner instance);
    partial void Inserttbl_Country(tbl_Country instance);
    partial void Updatetbl_Country(tbl_Country instance);
    partial void Deletetbl_Country(tbl_Country instance);
    partial void InsertCityDictionary(CityDictionary instance);
    partial void UpdateCityDictionary(CityDictionary instance);
    partial void DeleteCityDictionary(CityDictionary instance);
    partial void InsertCharter(Charter instance);
    partial void UpdateCharter(Charter instance);
    partial void DeleteCharter(Charter instance);
    partial void InsertAirSeason(AirSeason instance);
    partial void UpdateAirSeason(AirSeason instance);
    partial void DeleteAirSeason(AirSeason instance);
    partial void InsertHotelDictionary(HotelDictionary instance);
    partial void UpdateHotelDictionary(HotelDictionary instance);
    partial void DeleteHotelDictionary(HotelDictionary instance);
    partial void InsertHotelRoom(HotelRoom instance);
    partial void UpdateHotelRoom(HotelRoom instance);
    partial void DeleteHotelRoom(HotelRoom instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertAccmdmentype(Accmdmentype instance);
    partial void UpdateAccmdmentype(Accmdmentype instance);
    partial void DeleteAccmdmentype(Accmdmentype instance);
    partial void InsertPansion(Pansion instance);
    partial void UpdatePansion(Pansion instance);
    partial void DeletePansion(Pansion instance);
    partial void InsertRoomsCategory(RoomsCategory instance);
    partial void UpdateRoomsCategory(RoomsCategory instance);
    partial void DeleteRoomsCategory(RoomsCategory instance);
    partial void InsertResort(Resort instance);
    partial void UpdateResort(Resort instance);
    partial void DeleteResort(Resort instance);
    partial void InsertLT_V_Service(LT_V_Service instance);
    partial void UpdateLT_V_Service(LT_V_Service instance);
    partial void DeleteLT_V_Service(LT_V_Service instance);
    partial void InsertLT_V_Person(LT_V_Person instance);
    partial void UpdateLT_V_Person(LT_V_Person instance);
    partial void DeleteLT_V_Person(LT_V_Person instance);
    partial void InsertLT_V_Voucher(LT_V_Voucher instance);
    partial void UpdateLT_V_Voucher(LT_V_Voucher instance);
    partial void DeleteLT_V_Voucher(LT_V_Voucher instance);
    partial void InsertLT_V_MappingPartner(LT_V_MappingPartner instance);
    partial void UpdateLT_V_MappingPartner(LT_V_MappingPartner instance);
    partial void DeleteLT_V_MappingPartner(LT_V_MappingPartner instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertTransfer(Transfer instance);
    partial void UpdateTransfer(Transfer instance);
    partial void DeleteTransfer(Transfer instance);
    partial void InsertTransport(Transport instance);
    partial void UpdateTransport(Transport instance);
    partial void DeleteTransport(Transport instance);
    partial void InsertExcurDictionary(ExcurDictionary instance);
    partial void UpdateExcurDictionary(ExcurDictionary instance);
    partial void DeleteExcurDictionary(ExcurDictionary instance);
    partial void InsertOrder_Status(Order_Status instance);
    partial void UpdateOrder_Status(Order_Status instance);
    partial void DeleteOrder_Status(Order_Status instance);
    partial void InsertTurDate(TurDate instance);
    partial void UpdateTurDate(TurDate instance);
    partial void DeleteTurDate(TurDate instance);
    partial void InsertTurService(TurService instance);
    partial void UpdateTurService(TurService instance);
    partial void DeleteTurService(TurService instance);
    partial void InsertLT_V_MappingTurService(LT_V_MappingTurService instance);
    partial void UpdateLT_V_MappingTurService(LT_V_MappingTurService instance);
    partial void DeleteLT_V_MappingTurService(LT_V_MappingTurService instance);
    partial void InsertLT_V_MappingTurList(LT_V_MappingTurList instance);
    partial void UpdateLT_V_MappingTurList(LT_V_MappingTurList instance);
    partial void DeleteLT_V_MappingTurList(LT_V_MappingTurList instance);
    partial void InsertLT_V_ServiceNotUse(LT_V_ServiceNotUse instance);
    partial void UpdateLT_V_ServiceNotUse(LT_V_ServiceNotUse instance);
    partial void DeleteLT_V_ServiceNotUse(LT_V_ServiceNotUse instance);
    partial void InsertLT_V_ServicesSkip(LT_V_ServicesSkip instance);
    partial void UpdateLT_V_ServicesSkip(LT_V_ServicesSkip instance);
    partial void DeleteLT_V_ServicesSkip(LT_V_ServicesSkip instance);
    partial void InsertServiceList(ServiceList instance);
    partial void UpdateServiceList(ServiceList instance);
    partial void DeleteServiceList(ServiceList instance);
    partial void InsertAddDescript1(AddDescript1 instance);
    partial void UpdateAddDescript1(AddDescript1 instance);
    partial void DeleteAddDescript1(AddDescript1 instance);
    partial void InsertLT_V_Shablon(LT_V_Shablon instance);
    partial void UpdateLT_V_Shablon(LT_V_Shablon instance);
    partial void DeleteLT_V_Shablon(LT_V_Shablon instance);
    partial void InsertLT_V_ShablonTourNames(LT_V_ShablonTourNames instance);
    partial void UpdateLT_V_ShablonTourNames(LT_V_ShablonTourNames instance);
    partial void DeleteLT_V_ShablonTourNames(LT_V_ShablonTourNames instance);
    partial void InsertLT_V_ShablonFormatService(LT_V_ShablonFormatService instance);
    partial void UpdateLT_V_ShablonFormatService(LT_V_ShablonFormatService instance);
    partial void DeleteLT_V_ShablonFormatService(LT_V_ShablonFormatService instance);
    partial void InsertLT_V_ShablonService(LT_V_ShablonService instance);
    partial void UpdateLT_V_ShablonService(LT_V_ShablonService instance);
    partial void DeleteLT_V_ShablonService(LT_V_ShablonService instance);
    partial void InsertLT_V_ShablonTourGroup(LT_V_ShablonTourGroup instance);
    partial void UpdateLT_V_ShablonTourGroup(LT_V_ShablonTourGroup instance);
    partial void DeleteLT_V_ShablonTourGroup(LT_V_ShablonTourGroup instance);
    partial void InsertAddDescript2(AddDescript2 instance);
    partial void UpdateAddDescript2(AddDescript2 instance);
    partial void DeleteAddDescript2(AddDescript2 instance);
    partial void InsertLT_GroupToBaseTour(LT_GroupToBaseTour instance);
    partial void UpdateLT_GroupToBaseTour(LT_GroupToBaseTour instance);
    partial void DeleteLT_GroupToBaseTour(LT_GroupToBaseTour instance);
    partial void Insertlanta_2011_hotelFIT_adon(lanta_2011_hotelFIT_adon instance);
    partial void Updatelanta_2011_hotelFIT_adon(lanta_2011_hotelFIT_adon instance);
    partial void Deletelanta_2011_hotelFIT_adon(lanta_2011_hotelFIT_adon instance);
    #endregion
		
		public sqlDataContext() : 
				base(global::rep25991.Properties.Settings.Default.lantaConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Dogovor> tbl_Dogovors
		{
			get
			{
				return this.GetTable<tbl_Dogovor>();
			}
		}
		
		public System.Data.Linq.Table<COUNTRY> COUNTRies
		{
			get
			{
				return this.GetTable<COUNTRY>();
			}
		}
		
		public System.Data.Linq.Table<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this.GetTable<tbl_DogovorList>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Turist> tbl_Turists
		{
			get
			{
				return this.GetTable<tbl_Turist>();
			}
		}
		
		public System.Data.Linq.Table<TuristService> TuristServices
		{
			get
			{
				return this.GetTable<TuristService>();
			}
		}
		
		public System.Data.Linq.Table<tbl_TurList> tbl_TurLists
		{
			get
			{
				return this.GetTable<tbl_TurList>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Partner> tbl_Partners
		{
			get
			{
				return this.GetTable<tbl_Partner>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Country> tbl_Countries
		{
			get
			{
				return this.GetTable<tbl_Country>();
			}
		}
		
		public System.Data.Linq.Table<CityDictionary> CityDictionaries
		{
			get
			{
				return this.GetTable<CityDictionary>();
			}
		}
		
		public System.Data.Linq.Table<Charter> Charters
		{
			get
			{
				return this.GetTable<Charter>();
			}
		}
		
		public System.Data.Linq.Table<AirSeason> AirSeasons
		{
			get
			{
				return this.GetTable<AirSeason>();
			}
		}
		
		public System.Data.Linq.Table<HotelDictionary> HotelDictionaries
		{
			get
			{
				return this.GetTable<HotelDictionary>();
			}
		}
		
		public System.Data.Linq.Table<HotelRoom> HotelRooms
		{
			get
			{
				return this.GetTable<HotelRoom>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Accmdmentype> Accmdmentypes
		{
			get
			{
				return this.GetTable<Accmdmentype>();
			}
		}
		
		public System.Data.Linq.Table<Pansion> Pansions
		{
			get
			{
				return this.GetTable<Pansion>();
			}
		}
		
		public System.Data.Linq.Table<RoomsCategory> RoomsCategories
		{
			get
			{
				return this.GetTable<RoomsCategory>();
			}
		}
		
		public System.Data.Linq.Table<Resort> Resorts
		{
			get
			{
				return this.GetTable<Resort>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_Service> LT_V_Services
		{
			get
			{
				return this.GetTable<LT_V_Service>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_Person> LT_V_Persons
		{
			get
			{
				return this.GetTable<LT_V_Person>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_Voucher> LT_V_Vouchers
		{
			get
			{
				return this.GetTable<LT_V_Voucher>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_MappingPartner> LT_V_MappingPartner
		{
			get
			{
				return this.GetTable<LT_V_MappingPartner>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<Transfer> Transfers
		{
			get
			{
				return this.GetTable<Transfer>();
			}
		}
		
		public System.Data.Linq.Table<Transport> Transports
		{
			get
			{
				return this.GetTable<Transport>();
			}
		}
		
		public System.Data.Linq.Table<ExcurDictionary> ExcurDictionaries
		{
			get
			{
				return this.GetTable<ExcurDictionary>();
			}
		}
		
		public System.Data.Linq.Table<LTV_AccessDogovor> LTV_AccessDogovors
		{
			get
			{
				return this.GetTable<LTV_AccessDogovor>();
			}
		}
		
		public System.Data.Linq.Table<Order_Status> Order_Status
		{
			get
			{
				return this.GetTable<Order_Status>();
			}
		}
		
		public System.Data.Linq.Table<TurDate> TurDates
		{
			get
			{
				return this.GetTable<TurDate>();
			}
		}
		
		public System.Data.Linq.Table<TurService> TurServices
		{
			get
			{
				return this.GetTable<TurService>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_MappingTurService> LT_V_MappingTurServices
		{
			get
			{
				return this.GetTable<LT_V_MappingTurService>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_MappingTurList> LT_V_MappingTurLists
		{
			get
			{
				return this.GetTable<LT_V_MappingTurList>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_ServiceNotUse> LT_V_ServiceNotUses
		{
			get
			{
				return this.GetTable<LT_V_ServiceNotUse>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_ServicesSkip> LT_V_ServicesSkips
		{
			get
			{
				return this.GetTable<LT_V_ServicesSkip>();
			}
		}
		
		public System.Data.Linq.Table<ServiceList> ServiceLists
		{
			get
			{
				return this.GetTable<ServiceList>();
			}
		}
		
		public System.Data.Linq.Table<AddDescript1> AddDescript1s
		{
			get
			{
				return this.GetTable<AddDescript1>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_Shablon> LT_V_Shablons
		{
			get
			{
				return this.GetTable<LT_V_Shablon>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_ShablonTourNames> LT_V_ShablonTourNames
		{
			get
			{
				return this.GetTable<LT_V_ShablonTourNames>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_ShablonFormatService> LT_V_ShablonFormatServices
		{
			get
			{
				return this.GetTable<LT_V_ShablonFormatService>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_ShablonService> LT_V_ShablonServices
		{
			get
			{
				return this.GetTable<LT_V_ShablonService>();
			}
		}
		
		public System.Data.Linq.Table<LT_V_ShablonTourGroup> LT_V_ShablonTourGroups
		{
			get
			{
				return this.GetTable<LT_V_ShablonTourGroup>();
			}
		}
		
		public System.Data.Linq.Table<AddDescript2> AddDescript2s
		{
			get
			{
				return this.GetTable<AddDescript2>();
			}
		}
		
		public System.Data.Linq.Table<LT_GroupToBaseTour> LT_GroupToBaseTours
		{
			get
			{
				return this.GetTable<LT_GroupToBaseTour>();
			}
		}
		
		public System.Data.Linq.Table<lanta_2011_hotelFIT_adon> lanta_2011_hotelFIT_adons
		{
			get
			{
				return this.GetTable<lanta_2011_hotelFIT_adon>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Dogovor")]
	public partial class tbl_Dogovor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DG_CODE;
		
		private System.DateTime _DG_TURDATE;
		
		private System.Nullable<int> _DG_TRKEY;
		
		private int _DG_CNKEY;
		
		private int _DG_CTKEY;
		
		private System.Nullable<short> _DG_PRINTVAUCHER;
		
		private int _DG_Key;
		
		private float _DG_NDAY;
		
		private decimal _DG_PRICE;
		
		private decimal _DG_PAYED;
		
		private int _DG_SOR_CODE;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<tbl_Turist> _tbl_Turists;
		
		private EntitySet<LT_V_Voucher> _LT_V_Vouchers;
		
		private EntityRef<tbl_TurList> _tbl_TurList;
		
		private EntityRef<tbl_Country> _tbl_Country;
		
		private EntityRef<Order_Status> _Order_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDG_CODEChanging(string value);
    partial void OnDG_CODEChanged();
    partial void OnDG_TURDATEChanging(System.DateTime value);
    partial void OnDG_TURDATEChanged();
    partial void OnDG_TRKEYChanging(System.Nullable<int> value);
    partial void OnDG_TRKEYChanged();
    partial void OnDG_CNKEYChanging(int value);
    partial void OnDG_CNKEYChanged();
    partial void OnDG_CTKEYChanging(int value);
    partial void OnDG_CTKEYChanged();
    partial void OnDG_PRINTVAUCHERChanging(System.Nullable<short> value);
    partial void OnDG_PRINTVAUCHERChanged();
    partial void OnDG_KeyChanging(int value);
    partial void OnDG_KeyChanged();
    partial void OnDG_NDAYChanging(float value);
    partial void OnDG_NDAYChanged();
    partial void OnDG_PRICEChanging(decimal value);
    partial void OnDG_PRICEChanged();
    partial void OnDG_PAYEDChanging(decimal value);
    partial void OnDG_PAYEDChanged();
    partial void OnDG_SOR_CODEChanging(int value);
    partial void OnDG_SOR_CODEChanged();
    #endregion
		
		public tbl_Dogovor()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._tbl_Turists = new EntitySet<tbl_Turist>(new Action<tbl_Turist>(this.attach_tbl_Turists), new Action<tbl_Turist>(this.detach_tbl_Turists));
			this._LT_V_Vouchers = new EntitySet<LT_V_Voucher>(new Action<LT_V_Voucher>(this.attach_LT_V_Vouchers), new Action<LT_V_Voucher>(this.detach_LT_V_Vouchers));
			this._tbl_TurList = default(EntityRef<tbl_TurList>);
			this._tbl_Country = default(EntityRef<tbl_Country>);
			this._Order_Status = default(EntityRef<Order_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_CODE", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DG_CODE
		{
			get
			{
				return this._DG_CODE;
			}
			set
			{
				if ((this._DG_CODE != value))
				{
					this.OnDG_CODEChanging(value);
					this.SendPropertyChanging();
					this._DG_CODE = value;
					this.SendPropertyChanged("DG_CODE");
					this.OnDG_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_TURDATE", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DG_TURDATE
		{
			get
			{
				return this._DG_TURDATE;
			}
			set
			{
				if ((this._DG_TURDATE != value))
				{
					this.OnDG_TURDATEChanging(value);
					this.SendPropertyChanging();
					this._DG_TURDATE = value;
					this.SendPropertyChanged("DG_TURDATE");
					this.OnDG_TURDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_TRKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DG_TRKEY
		{
			get
			{
				return this._DG_TRKEY;
			}
			set
			{
				if ((this._DG_TRKEY != value))
				{
					if (this._tbl_TurList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDG_TRKEYChanging(value);
					this.SendPropertyChanging();
					this._DG_TRKEY = value;
					this.SendPropertyChanged("DG_TRKEY");
					this.OnDG_TRKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_CNKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DG_CNKEY
		{
			get
			{
				return this._DG_CNKEY;
			}
			set
			{
				if ((this._DG_CNKEY != value))
				{
					if (this._tbl_Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDG_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._DG_CNKEY = value;
					this.SendPropertyChanged("DG_CNKEY");
					this.OnDG_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_CTKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		private int DG_CTKEY
		{
			get
			{
				return this._DG_CTKEY;
			}
			set
			{
				if ((this._DG_CTKEY != value))
				{
					this.OnDG_CTKEYChanging(value);
					this.SendPropertyChanging();
					this._DG_CTKEY = value;
					this.SendPropertyChanged("DG_CTKEY");
					this.OnDG_CTKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_PRINTVAUCHER", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DG_PRINTVAUCHER
		{
			get
			{
				return this._DG_PRINTVAUCHER;
			}
			set
			{
				if ((this._DG_PRINTVAUCHER != value))
				{
					this.OnDG_PRINTVAUCHERChanging(value);
					this.SendPropertyChanging();
					this._DG_PRINTVAUCHER = value;
					this.SendPropertyChanged("DG_PRINTVAUCHER");
					this.OnDG_PRINTVAUCHERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_Key", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int DG_Key
		{
			get
			{
				return this._DG_Key;
			}
			set
			{
				if ((this._DG_Key != value))
				{
					this.OnDG_KeyChanging(value);
					this.SendPropertyChanging();
					this._DG_Key = value;
					this.SendPropertyChanged("DG_Key");
					this.OnDG_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_NDAY", DbType="float not null")]
		public float DG_NDAY
		{
			get
			{
				return this._DG_NDAY;
			}
			set
			{
				if ((this._DG_NDAY != value))
				{
					this.OnDG_NDAYChanging(value);
					this.SendPropertyChanging();
					this._DG_NDAY = value;
					this.SendPropertyChanged("DG_NDAY");
					this.OnDG_NDAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_PRICE", DbType="money not null")]
		public decimal DG_PRICE
		{
			get
			{
				return this._DG_PRICE;
			}
			set
			{
				if ((this._DG_PRICE != value))
				{
					this.OnDG_PRICEChanging(value);
					this.SendPropertyChanging();
					this._DG_PRICE = value;
					this.SendPropertyChanged("DG_PRICE");
					this.OnDG_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_PAYED", DbType="money not null")]
		public decimal DG_PAYED
		{
			get
			{
				return this._DG_PAYED;
			}
			set
			{
				if ((this._DG_PAYED != value))
				{
					this.OnDG_PAYEDChanging(value);
					this.SendPropertyChanging();
					this._DG_PAYED = value;
					this.SendPropertyChanged("DG_PAYED");
					this.OnDG_PAYEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DG_SOR_CODE", DbType="int not null")]
		public int DG_SOR_CODE
		{
			get
			{
				return this._DG_SOR_CODE;
			}
			set
			{
				if ((this._DG_SOR_CODE != value))
				{
					if (this._Order_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDG_SOR_CODEChanging(value);
					this.SendPropertyChanging();
					this._DG_SOR_CODE = value;
					this.SendPropertyChanged("DG_SOR_CODE");
					this.OnDG_SOR_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dogovor_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="DG_Key", OtherKey="DL_DGKEY")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dogovor_tbl_Turist", Storage="_tbl_Turists", ThisKey="DG_Key", OtherKey="TU_DGKEY")]
		public EntitySet<tbl_Turist> tbl_Turists
		{
			get
			{
				return this._tbl_Turists;
			}
			set
			{
				this._tbl_Turists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dogovor_LT_V_Voucher", Storage="_LT_V_Vouchers", ThisKey="DG_Key", OtherKey="V_DGKey")]
		public EntitySet<LT_V_Voucher> LT_V_Vouchers
		{
			get
			{
				return this._LT_V_Vouchers;
			}
			set
			{
				this._LT_V_Vouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_tbl_Dogovor", Storage="_tbl_TurList", ThisKey="DG_TRKEY", OtherKey="TL_KEY", IsForeignKey=true)]
		public tbl_TurList tbl_TurList
		{
			get
			{
				return this._tbl_TurList.Entity;
			}
			set
			{
				tbl_TurList previousValue = this._tbl_TurList.Entity;
				if (((previousValue != value) 
							|| (this._tbl_TurList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_TurList.Entity = null;
						previousValue.tbl_Dogovors.Remove(this);
					}
					this._tbl_TurList.Entity = value;
					if ((value != null))
					{
						value.tbl_Dogovors.Add(this);
						this._DG_TRKEY = value.TL_KEY;
					}
					else
					{
						this._DG_TRKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_TurList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Country_tbl_Dogovor", Storage="_tbl_Country", ThisKey="DG_CNKEY", OtherKey="CN_KEY", IsForeignKey=true)]
		public tbl_Country tbl_Country
		{
			get
			{
				return this._tbl_Country.Entity;
			}
			set
			{
				tbl_Country previousValue = this._tbl_Country.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Country.Entity = null;
						previousValue.tbl_Dogovors.Remove(this);
					}
					this._tbl_Country.Entity = value;
					if ((value != null))
					{
						value.tbl_Dogovors.Add(this);
						this._DG_CNKEY = value.CN_KEY;
					}
					else
					{
						this._DG_CNKEY = default(int);
					}
					this.SendPropertyChanged("tbl_Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Status_tbl_Dogovor", Storage="_Order_Status", ThisKey="DG_SOR_CODE", OtherKey="OS_CODE", IsForeignKey=true)]
		public Order_Status Order_Status
		{
			get
			{
				return this._Order_Status.Entity;
			}
			set
			{
				Order_Status previousValue = this._Order_Status.Entity;
				if (((previousValue != value) 
							|| (this._Order_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Status.Entity = null;
						previousValue.tbl_Dogovors.Remove(this);
					}
					this._Order_Status.Entity = value;
					if ((value != null))
					{
						value.tbl_Dogovors.Add(this);
						this._DG_SOR_CODE = value.OS_CODE;
					}
					else
					{
						this._DG_SOR_CODE = default(int);
					}
					this.SendPropertyChanged("Order_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dogovor = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dogovor = null;
		}
		
		private void attach_tbl_Turists(tbl_Turist entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dogovor = this;
		}
		
		private void detach_tbl_Turists(tbl_Turist entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dogovor = null;
		}
		
		private void attach_LT_V_Vouchers(LT_V_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dogovor = this;
		}
		
		private void detach_LT_V_Vouchers(LT_V_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dogovor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class COUNTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CN_KEY;
		
		private string _CN_NAME;
		
		private EntityRef<tbl_Country> _tbl_Countries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCN_KEYChanging(int value);
    partial void OnCN_KEYChanged();
    partial void OnCN_NAMEChanging(string value);
    partial void OnCN_NAMEChanged();
    #endregion
		
		public COUNTRY()
		{
			this._tbl_Countries = default(EntityRef<tbl_Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CN_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int CN_KEY
		{
			get
			{
				return this._CN_KEY;
			}
			set
			{
				if ((this._CN_KEY != value))
				{
					this.OnCN_KEYChanging(value);
					this.SendPropertyChanging();
					this._CN_KEY = value;
					this.SendPropertyChanged("CN_KEY");
					this.OnCN_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CN_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CN_NAME
		{
			get
			{
				return this._CN_NAME;
			}
			set
			{
				if ((this._CN_NAME != value))
				{
					this.OnCN_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CN_NAME = value;
					this.SendPropertyChanged("CN_NAME");
					this.OnCN_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_tbl_Country", Storage="_tbl_Countries", ThisKey="CN_KEY", OtherKey="CN_KEY", IsUnique=true, IsForeignKey=false)]
		public tbl_Country tbl_Country
		{
			get
			{
				return this._tbl_Countries.Entity;
			}
			set
			{
				tbl_Country previousValue = this._tbl_Countries.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Countries.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Countries.Entity = null;
						previousValue.COUNTRY = null;
					}
					this._tbl_Countries.Entity = value;
					if ((value != null))
					{
						value.COUNTRY = this;
					}
					this.SendPropertyChanged("tbl_Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_DogovorList")]
	public partial class tbl_DogovorList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DL_DGCOD;
		
		private int _DL_KEY;
		
		private int _DL_SVKEY;
		
		private string _DL_NAME;
		
		private System.Nullable<short> _DL_DAY;
		
		private int _DL_CODE;
		
		private System.Nullable<int> _DL_SUBCODE1;
		
		private System.Nullable<int> _DL_SUBCODE2;
		
		private short _DL_NMEN;
		
		private System.Nullable<short> _DL_NDAYS;
		
		private System.Nullable<int> _DL_CNKEY;
		
		private System.Nullable<int> _DL_CTKEY;
		
		private System.Nullable<int> _DL_PARTNERKEY;
		
		private string _DL_Comment;
		
		private System.Nullable<int> _DL_DGKEY;
		
		private string _DL_NameLat;
		
		private System.Nullable<decimal> _DL_COST;
		
		private System.Nullable<int> _DL_ATTRIBUTE;
		
		private EntitySet<TuristService> _TuristServices;
		
		private EntitySet<LT_V_Service> _LT_V_Services;
		
		private EntityRef<tbl_Dogovor> _tbl_Dogovor;
		
		private EntityRef<tbl_Partner> _tbl_Partner;
		
		private EntityRef<HotelDictionary> _HotelDictionary;
		
		private EntityRef<HotelRoom> _HotelRoom;
		
		private EntityRef<Pansion> _Pansion;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Charter> _Charter;
		
		private EntityRef<Transfer> _Transfer;
		
		private EntityRef<Transport> _Transport;
		
		private EntityRef<ExcurDictionary> _ExcurDictionary;
		
		private EntityRef<tbl_Country> _tbl_Country;
		
		private EntityRef<LT_V_ServicesSkip> _LT_V_ServicesSkip;
		
		private EntityRef<ServiceList> _ServiceList;
		
		private EntityRef<AddDescript1> _AddDescript1;
		
		private EntityRef<AddDescript2> _AddDescript2;
		
		private EntityRef<lanta_2011_hotelFIT_adon> _lanta_2011_hotelFIT_adon;
		
		private EntityRef<CityDictionary> _CityDictionary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDL_DGCODChanging(string value);
    partial void OnDL_DGCODChanged();
    partial void OnDL_KEYChanging(int value);
    partial void OnDL_KEYChanged();
    partial void OnDL_SVKEYChanging(int value);
    partial void OnDL_SVKEYChanged();
    partial void OnDL_NAMEChanging(string value);
    partial void OnDL_NAMEChanged();
    partial void OnDL_DAYChanging(System.Nullable<short> value);
    partial void OnDL_DAYChanged();
    partial void OnDL_CODEChanging(int value);
    partial void OnDL_CODEChanged();
    partial void OnDL_SUBCODE1Changing(System.Nullable<int> value);
    partial void OnDL_SUBCODE1Changed();
    partial void OnDL_SUBCODE2Changing(System.Nullable<int> value);
    partial void OnDL_SUBCODE2Changed();
    partial void OnDL_NMENChanging(short value);
    partial void OnDL_NMENChanged();
    partial void OnDL_NDAYSChanging(System.Nullable<short> value);
    partial void OnDL_NDAYSChanged();
    partial void OnDL_CNKEYChanging(System.Nullable<int> value);
    partial void OnDL_CNKEYChanged();
    partial void OnDL_CTKEYChanging(System.Nullable<int> value);
    partial void OnDL_CTKEYChanged();
    partial void OnDL_PARTNERKEYChanging(System.Nullable<int> value);
    partial void OnDL_PARTNERKEYChanged();
    partial void OnDL_CommentChanging(string value);
    partial void OnDL_CommentChanged();
    partial void OnDL_DGKEYChanging(System.Nullable<int> value);
    partial void OnDL_DGKEYChanged();
    partial void OnDL_NameLatChanging(string value);
    partial void OnDL_NameLatChanged();
    partial void OnDL_COSTChanging(System.Nullable<decimal> value);
    partial void OnDL_COSTChanged();
    partial void OnDL_ATTRIBUTEChanging(System.Nullable<int> value);
    partial void OnDL_ATTRIBUTEChanged();
    #endregion
		
		public tbl_DogovorList()
		{
			this._TuristServices = new EntitySet<TuristService>(new Action<TuristService>(this.attach_TuristServices), new Action<TuristService>(this.detach_TuristServices));
			this._LT_V_Services = new EntitySet<LT_V_Service>(new Action<LT_V_Service>(this.attach_LT_V_Services), new Action<LT_V_Service>(this.detach_LT_V_Services));
			this._tbl_Dogovor = default(EntityRef<tbl_Dogovor>);
			this._tbl_Partner = default(EntityRef<tbl_Partner>);
			this._HotelDictionary = default(EntityRef<HotelDictionary>);
			this._HotelRoom = default(EntityRef<HotelRoom>);
			this._Pansion = default(EntityRef<Pansion>);
			this._Service = default(EntityRef<Service>);
			this._Charter = default(EntityRef<Charter>);
			this._Transfer = default(EntityRef<Transfer>);
			this._Transport = default(EntityRef<Transport>);
			this._ExcurDictionary = default(EntityRef<ExcurDictionary>);
			this._tbl_Country = default(EntityRef<tbl_Country>);
			this._LT_V_ServicesSkip = default(EntityRef<LT_V_ServicesSkip>);
			this._ServiceList = default(EntityRef<ServiceList>);
			this._AddDescript1 = default(EntityRef<AddDescript1>);
			this._AddDescript2 = default(EntityRef<AddDescript2>);
			this._lanta_2011_hotelFIT_adon = default(EntityRef<lanta_2011_hotelFIT_adon>);
			this._CityDictionary = default(EntityRef<CityDictionary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_DGCOD", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DL_DGCOD
		{
			get
			{
				return this._DL_DGCOD;
			}
			set
			{
				if ((this._DL_DGCOD != value))
				{
					this.OnDL_DGCODChanging(value);
					this.SendPropertyChanging();
					this._DL_DGCOD = value;
					this.SendPropertyChanged("DL_DGCOD");
					this.OnDL_DGCODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int DL_KEY
		{
			get
			{
				return this._DL_KEY;
			}
			set
			{
				if ((this._DL_KEY != value))
				{
					if (this._LT_V_ServicesSkip.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDL_KEYChanging(value);
					this.SendPropertyChanging();
					this._DL_KEY = value;
					this.SendPropertyChanged("DL_KEY");
					this.OnDL_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_SVKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DL_SVKEY
		{
			get
			{
				return this._DL_SVKEY;
			}
			set
			{
				if ((this._DL_SVKEY != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDL_SVKEYChanging(value);
					this.SendPropertyChanging();
					this._DL_SVKEY = value;
					this.SendPropertyChanged("DL_SVKEY");
					this.OnDL_SVKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_NAME", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DL_NAME
		{
			get
			{
				return this._DL_NAME;
			}
			set
			{
				if ((this._DL_NAME != value))
				{
					this.OnDL_NAMEChanging(value);
					this.SendPropertyChanging();
					this._DL_NAME = value;
					this.SendPropertyChanged("DL_NAME");
					this.OnDL_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_DAY", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DL_DAY
		{
			get
			{
				return this._DL_DAY;
			}
			set
			{
				if ((this._DL_DAY != value))
				{
					this.OnDL_DAYChanging(value);
					this.SendPropertyChanging();
					this._DL_DAY = value;
					this.SendPropertyChanged("DL_DAY");
					this.OnDL_DAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_CODE", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DL_CODE
		{
			get
			{
				return this._DL_CODE;
			}
			set
			{
				if ((this._DL_CODE != value))
				{
					if ((((((this._HotelDictionary.HasLoadedOrAssignedValue || this._Charter.HasLoadedOrAssignedValue) 
								|| this._Transfer.HasLoadedOrAssignedValue) 
								|| this._ExcurDictionary.HasLoadedOrAssignedValue) 
								|| this._ServiceList.HasLoadedOrAssignedValue) 
								|| this._lanta_2011_hotelFIT_adon.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDL_CODEChanging(value);
					this.SendPropertyChanging();
					this._DL_CODE = value;
					this.SendPropertyChanged("DL_CODE");
					this.OnDL_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_SUBCODE1", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DL_SUBCODE1
		{
			get
			{
				return this._DL_SUBCODE1;
			}
			set
			{
				if ((this._DL_SUBCODE1 != value))
				{
					if (((this._HotelRoom.HasLoadedOrAssignedValue || this._Transport.HasLoadedOrAssignedValue) 
								|| this._AddDescript1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDL_SUBCODE1Changing(value);
					this.SendPropertyChanging();
					this._DL_SUBCODE1 = value;
					this.SendPropertyChanged("DL_SUBCODE1");
					this.OnDL_SUBCODE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_SUBCODE2", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DL_SUBCODE2
		{
			get
			{
				return this._DL_SUBCODE2;
			}
			set
			{
				if ((this._DL_SUBCODE2 != value))
				{
					if ((this._Pansion.HasLoadedOrAssignedValue || this._AddDescript2.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDL_SUBCODE2Changing(value);
					this.SendPropertyChanging();
					this._DL_SUBCODE2 = value;
					this.SendPropertyChanged("DL_SUBCODE2");
					this.OnDL_SUBCODE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_NMEN", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short DL_NMEN
		{
			get
			{
				return this._DL_NMEN;
			}
			set
			{
				if ((this._DL_NMEN != value))
				{
					this.OnDL_NMENChanging(value);
					this.SendPropertyChanging();
					this._DL_NMEN = value;
					this.SendPropertyChanged("DL_NMEN");
					this.OnDL_NMENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_NDAYS", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> DL_NDAYS
		{
			get
			{
				return this._DL_NDAYS;
			}
			set
			{
				if ((this._DL_NDAYS != value))
				{
					this.OnDL_NDAYSChanging(value);
					this.SendPropertyChanging();
					this._DL_NDAYS = value;
					this.SendPropertyChanged("DL_NDAYS");
					this.OnDL_NDAYSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_CNKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DL_CNKEY
		{
			get
			{
				return this._DL_CNKEY;
			}
			set
			{
				if ((this._DL_CNKEY != value))
				{
					if (this._tbl_Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDL_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._DL_CNKEY = value;
					this.SendPropertyChanged("DL_CNKEY");
					this.OnDL_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_CTKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DL_CTKEY
		{
			get
			{
				return this._DL_CTKEY;
			}
			set
			{
				if ((this._DL_CTKEY != value))
				{
					if (this._CityDictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDL_CTKEYChanging(value);
					this.SendPropertyChanging();
					this._DL_CTKEY = value;
					this.SendPropertyChanged("DL_CTKEY");
					this.OnDL_CTKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_PARTNERKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DL_PARTNERKEY
		{
			get
			{
				return this._DL_PARTNERKEY;
			}
			set
			{
				if ((this._DL_PARTNERKEY != value))
				{
					if (this._tbl_Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDL_PARTNERKEYChanging(value);
					this.SendPropertyChanging();
					this._DL_PARTNERKEY = value;
					this.SendPropertyChanged("DL_PARTNERKEY");
					this.OnDL_PARTNERKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_Comment", DbType="VarChar(254)", UpdateCheck=UpdateCheck.Never)]
		public string DL_Comment
		{
			get
			{
				return this._DL_Comment;
			}
			set
			{
				if ((this._DL_Comment != value))
				{
					this.OnDL_CommentChanging(value);
					this.SendPropertyChanging();
					this._DL_Comment = value;
					this.SendPropertyChanged("DL_Comment");
					this.OnDL_CommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_DGKEY", DbType="int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DL_DGKEY
		{
			get
			{
				return this._DL_DGKEY;
			}
			set
			{
				if ((this._DL_DGKEY != value))
				{
					if (this._tbl_Dogovor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDL_DGKEYChanging(value);
					this.SendPropertyChanging();
					this._DL_DGKEY = value;
					this.SendPropertyChanged("DL_DGKEY");
					this.OnDL_DGKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_NameLat", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DL_NameLat
		{
			get
			{
				return this._DL_NameLat;
			}
			set
			{
				if ((this._DL_NameLat != value))
				{
					this.OnDL_NameLatChanging(value);
					this.SendPropertyChanging();
					this._DL_NameLat = value;
					this.SendPropertyChanged("DL_NameLat");
					this.OnDL_NameLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_COST", DbType="Money")]
		public System.Nullable<decimal> DL_COST
		{
			get
			{
				return this._DL_COST;
			}
			set
			{
				if ((this._DL_COST != value))
				{
					this.OnDL_COSTChanging(value);
					this.SendPropertyChanging();
					this._DL_COST = value;
					this.SendPropertyChanged("DL_COST");
					this.OnDL_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_ATTRIBUTE", DbType="int")]
		public System.Nullable<int> DL_ATTRIBUTE
		{
			get
			{
				return this._DL_ATTRIBUTE;
			}
			set
			{
				if ((this._DL_ATTRIBUTE != value))
				{
					this.OnDL_ATTRIBUTEChanging(value);
					this.SendPropertyChanging();
					this._DL_ATTRIBUTE = value;
					this.SendPropertyChanged("DL_ATTRIBUTE");
					this.OnDL_ATTRIBUTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_DogovorList_TuristService", Storage="_TuristServices", ThisKey="DL_KEY", OtherKey="TU_DLKEY")]
		public EntitySet<TuristService> TuristServices
		{
			get
			{
				return this._TuristServices;
			}
			set
			{
				this._TuristServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_DogovorList_LT_V_Service", Storage="_LT_V_Services", ThisKey="DL_KEY", OtherKey="VS_DLKey")]
		public EntitySet<LT_V_Service> LT_V_Services
		{
			get
			{
				return this._LT_V_Services;
			}
			set
			{
				this._LT_V_Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dogovor_tbl_DogovorList", Storage="_tbl_Dogovor", ThisKey="DL_DGKEY", OtherKey="DG_Key", IsForeignKey=true)]
		public tbl_Dogovor tbl_Dogovor
		{
			get
			{
				return this._tbl_Dogovor.Entity;
			}
			set
			{
				tbl_Dogovor previousValue = this._tbl_Dogovor.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Dogovor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Dogovor.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._tbl_Dogovor.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_DGKEY = value.DG_Key;
					}
					else
					{
						this._DL_DGKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Dogovor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Partner_tbl_DogovorList", Storage="_tbl_Partner", ThisKey="DL_PARTNERKEY", OtherKey="PR_KEY", IsForeignKey=true)]
		public tbl_Partner tbl_Partner
		{
			get
			{
				return this._tbl_Partner.Entity;
			}
			set
			{
				tbl_Partner previousValue = this._tbl_Partner.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Partner.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._tbl_Partner.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_PARTNERKEY = value.PR_KEY;
					}
					else
					{
						this._DL_PARTNERKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Partner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HotelDictionary_tbl_DogovorList", Storage="_HotelDictionary", ThisKey="DL_CODE", OtherKey="HD_KEY", IsForeignKey=true)]
		public HotelDictionary HotelDictionary
		{
			get
			{
				return this._HotelDictionary.Entity;
			}
			set
			{
				HotelDictionary previousValue = this._HotelDictionary.Entity;
				if (((previousValue != value) 
							|| (this._HotelDictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HotelDictionary.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._HotelDictionary.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_CODE = value.HD_KEY;
					}
					else
					{
						this._DL_CODE = default(int);
					}
					this.SendPropertyChanged("HotelDictionary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HotelRoom_tbl_DogovorList", Storage="_HotelRoom", ThisKey="DL_SUBCODE1", OtherKey="HR_KEY", IsForeignKey=true)]
		public HotelRoom HotelRoom
		{
			get
			{
				return this._HotelRoom.Entity;
			}
			set
			{
				HotelRoom previousValue = this._HotelRoom.Entity;
				if (((previousValue != value) 
							|| (this._HotelRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HotelRoom.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._HotelRoom.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_SUBCODE1 = value.HR_KEY;
					}
					else
					{
						this._DL_SUBCODE1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("HotelRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pansion_tbl_DogovorList", Storage="_Pansion", ThisKey="DL_SUBCODE2", OtherKey="PN_KEY", IsForeignKey=true)]
		public Pansion Pansion
		{
			get
			{
				return this._Pansion.Entity;
			}
			set
			{
				Pansion previousValue = this._Pansion.Entity;
				if (((previousValue != value) 
							|| (this._Pansion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pansion.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._Pansion.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_SUBCODE2 = value.PN_KEY;
					}
					else
					{
						this._DL_SUBCODE2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pansion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_tbl_DogovorList", Storage="_Service", ThisKey="DL_SVKEY", OtherKey="SV_KEY", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_SVKEY = value.SV_KEY;
					}
					else
					{
						this._DL_SVKEY = default(int);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Charter_tbl_DogovorList", Storage="_Charter", ThisKey="DL_CODE", OtherKey="CH_KEY", IsForeignKey=true)]
		public Charter Charter
		{
			get
			{
				return this._Charter.Entity;
			}
			set
			{
				Charter previousValue = this._Charter.Entity;
				if (((previousValue != value) 
							|| (this._Charter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Charter.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._Charter.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_CODE = value.CH_KEY;
					}
					else
					{
						this._DL_CODE = default(int);
					}
					this.SendPropertyChanged("Charter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transfer_tbl_DogovorList", Storage="_Transfer", ThisKey="DL_CODE", OtherKey="TF_KEY", IsForeignKey=true)]
		public Transfer Transfer
		{
			get
			{
				return this._Transfer.Entity;
			}
			set
			{
				Transfer previousValue = this._Transfer.Entity;
				if (((previousValue != value) 
							|| (this._Transfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transfer.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._Transfer.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_CODE = value.TF_KEY;
					}
					else
					{
						this._DL_CODE = default(int);
					}
					this.SendPropertyChanged("Transfer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transport_tbl_DogovorList", Storage="_Transport", ThisKey="DL_SUBCODE1", OtherKey="TR_KEY", IsForeignKey=true)]
		public Transport Transport
		{
			get
			{
				return this._Transport.Entity;
			}
			set
			{
				Transport previousValue = this._Transport.Entity;
				if (((previousValue != value) 
							|| (this._Transport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transport.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._Transport.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_SUBCODE1 = value.TR_KEY;
					}
					else
					{
						this._DL_SUBCODE1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Transport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExcurDictionary_tbl_DogovorList", Storage="_ExcurDictionary", ThisKey="DL_CODE", OtherKey="ED_KEY", IsForeignKey=true)]
		public ExcurDictionary ExcurDictionary
		{
			get
			{
				return this._ExcurDictionary.Entity;
			}
			set
			{
				ExcurDictionary previousValue = this._ExcurDictionary.Entity;
				if (((previousValue != value) 
							|| (this._ExcurDictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExcurDictionary.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._ExcurDictionary.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_CODE = value.ED_KEY;
					}
					else
					{
						this._DL_CODE = default(int);
					}
					this.SendPropertyChanged("ExcurDictionary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Country_tbl_DogovorList", Storage="_tbl_Country", ThisKey="DL_CNKEY", OtherKey="CN_KEY", IsForeignKey=true)]
		public tbl_Country tbl_Country
		{
			get
			{
				return this._tbl_Country.Entity;
			}
			set
			{
				tbl_Country previousValue = this._tbl_Country.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Country.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._tbl_Country.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_CNKEY = value.CN_KEY;
					}
					else
					{
						this._DL_CNKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_ServicesSkip_tbl_DogovorList", Storage="_LT_V_ServicesSkip", ThisKey="DL_KEY", OtherKey="LSS_DLKey", IsForeignKey=true)]
		public LT_V_ServicesSkip LT_V_ServicesSkip
		{
			get
			{
				return this._LT_V_ServicesSkip.Entity;
			}
			set
			{
				LT_V_ServicesSkip previousValue = this._LT_V_ServicesSkip.Entity;
				if (((previousValue != value) 
							|| (this._LT_V_ServicesSkip.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LT_V_ServicesSkip.Entity = null;
						previousValue.tbl_DogovorList = null;
					}
					this._LT_V_ServicesSkip.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorList = this;
						this._DL_KEY = value.LSS_DLKey;
					}
					else
					{
						this._DL_KEY = default(int);
					}
					this.SendPropertyChanged("LT_V_ServicesSkip");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceList_tbl_DogovorList", Storage="_ServiceList", ThisKey="DL_CODE", OtherKey="SL_KEY", IsForeignKey=true)]
		public ServiceList ServiceList
		{
			get
			{
				return this._ServiceList.Entity;
			}
			set
			{
				if ((this._ServiceList.Entity != value))
				{
					this.SendPropertyChanging();
					this._ServiceList.Entity = value;
					this.SendPropertyChanged("ServiceList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddDescript1_tbl_DogovorList", Storage="_AddDescript1", ThisKey="DL_SUBCODE1", OtherKey="A1_KEY", IsForeignKey=true)]
		public AddDescript1 AddDescript1
		{
			get
			{
				return this._AddDescript1.Entity;
			}
			set
			{
				AddDescript1 previousValue = this._AddDescript1.Entity;
				if (((previousValue != value) 
							|| (this._AddDescript1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddDescript1.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._AddDescript1.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_SUBCODE1 = value.A1_KEY;
					}
					else
					{
						this._DL_SUBCODE1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("AddDescript1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddDescript2_tbl_DogovorList", Storage="_AddDescript2", ThisKey="DL_SUBCODE2", OtherKey="A2_KEY", IsForeignKey=true)]
		public AddDescript2 AddDescript2
		{
			get
			{
				return this._AddDescript2.Entity;
			}
			set
			{
				AddDescript2 previousValue = this._AddDescript2.Entity;
				if (((previousValue != value) 
							|| (this._AddDescript2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddDescript2.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._AddDescript2.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_SUBCODE2 = value.A2_KEY;
					}
					else
					{
						this._DL_SUBCODE2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("AddDescript2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lanta_2011_hotelFIT_adon_tbl_DogovorList", Storage="_lanta_2011_hotelFIT_adon", ThisKey="DL_CODE", OtherKey="sl_key", IsForeignKey=true)]
		public lanta_2011_hotelFIT_adon lanta_2011_hotelFIT_adon
		{
			get
			{
				return this._lanta_2011_hotelFIT_adon.Entity;
			}
			set
			{
				lanta_2011_hotelFIT_adon previousValue = this._lanta_2011_hotelFIT_adon.Entity;
				if (((previousValue != value) 
							|| (this._lanta_2011_hotelFIT_adon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lanta_2011_hotelFIT_adon.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._lanta_2011_hotelFIT_adon.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_CODE = value.sl_key;
					}
					else
					{
						this._DL_CODE = default(int);
					}
					this.SendPropertyChanged("lanta_2011_hotelFIT_adon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityDictionary_tbl_DogovorList", Storage="_CityDictionary", ThisKey="DL_CTKEY", OtherKey="CT_KEY", IsForeignKey=true)]
		public CityDictionary CityDictionary
		{
			get
			{
				return this._CityDictionary.Entity;
			}
			set
			{
				CityDictionary previousValue = this._CityDictionary.Entity;
				if (((previousValue != value) 
							|| (this._CityDictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CityDictionary.Entity = null;
						previousValue.tbl_DogovorLists.Remove(this);
					}
					this._CityDictionary.Entity = value;
					if ((value != null))
					{
						value.tbl_DogovorLists.Add(this);
						this._DL_CTKEY = value.CT_KEY;
					}
					else
					{
						this._DL_CTKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("CityDictionary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TuristServices(TuristService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_DogovorList = this;
		}
		
		private void detach_TuristServices(TuristService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_DogovorList = null;
		}
		
		private void attach_LT_V_Services(LT_V_Service entity)
		{
			this.SendPropertyChanging();
			entity.tbl_DogovorList = this;
		}
		
		private void detach_LT_V_Services(LT_V_Service entity)
		{
			this.SendPropertyChanging();
			entity.tbl_DogovorList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Turist")]
	public partial class tbl_Turist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TU_DGCOD;
		
		private int _TU_KEY;
		
		private string _TU_NAMERUS;
		
		private string _TU_NAMELAT;
		
		private string _TU_SHORTNAME;
		
		private System.Nullable<short> _TU_SEX;
		
		private string _TU_FNAMERUS;
		
		private string _TU_FNAMELAT;
		
		private string _TU_SNAMERUS;
		
		private string _TU_SNAMELAT;
		
		private System.Nullable<System.DateTime> _TU_BIRTHDAY;
		
		private string _TU_BIRTHCOUNTRY;
		
		private string _TU_BIRTHCITY;
		
		private string _TU_CITIZEN;
		
		private string _TU_POSTINDEX;
		
		private string _TU_POSTCITY;
		
		private string _TU_POSTSTREET;
		
		private string _TU_POSTBILD;
		
		private string _TU_POSTFLAT;
		
		private string _TU_PHONE;
		
		private string _TU_PHONECODE;
		
		private string _TU_PASPORTTYPE;
		
		private string _TU_PASPORTNUM;
		
		private System.Nullable<System.DateTime> _TU_PASPORTDATE;
		
		private System.Nullable<System.DateTime> _TU_PASPORTDATEEND;
		
		private string _TU_PASPORTBYWHOM;
		
		private System.Nullable<short> _TU_PLACE;
		
		private System.Nullable<short> _TU_ISANKETA;
		
		private int _TU_CREATOR;
		
		private int _TU_OWNER;
		
		private string _TU_PASPRUSER;
		
		private string _TU_PASPRUNUM;
		
		private System.Nullable<System.DateTime> _TU_PASPRUDATE;
		
		private string _TU_PASPRUBYWHOM;
		
		private string _TU_INSURPOLIS;
		
		private System.Nullable<double> _TU_INSURSUM;
		
		private System.Nullable<double> _TU_DISCOUNT;
		
		private System.Nullable<double> _TU_TYPEDISCOUNT;
		
		private System.Nullable<int> _TU_ID;
		
		private System.Nullable<short> _TU_ISMAIN;
		
		private System.Data.Linq.Binary _ROWID;
		
		private System.Nullable<int> _TU_AgentID;
		
		private string _TL_ADVDESC;
		
		private string _TL_ATTDESC;
		
		private string _TL_DOPDESC;
		
		private string _TL_FULLDESC;
		
		private string _TL_SMALLDESC;
		
		private System.Nullable<int> _TU_DGKEY;
		
		private System.Nullable<short> _TU_RealSex;
		
		private string _TU_EMAIL;
		
		private EntitySet<TuristService> _TuristServices;
		
		private EntitySet<LT_V_Person> _LT_V_Persons;
		
		private EntityRef<tbl_Dogovor> _tbl_Dogovor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTU_DGCODChanging(string value);
    partial void OnTU_DGCODChanged();
    partial void OnTU_KEYChanging(int value);
    partial void OnTU_KEYChanged();
    partial void OnTU_NAMERUSChanging(string value);
    partial void OnTU_NAMERUSChanged();
    partial void OnTU_NAMELATChanging(string value);
    partial void OnTU_NAMELATChanged();
    partial void OnTU_SHORTNAMEChanging(string value);
    partial void OnTU_SHORTNAMEChanged();
    partial void OnTU_SEXChanging(System.Nullable<short> value);
    partial void OnTU_SEXChanged();
    partial void OnTU_FNAMERUSChanging(string value);
    partial void OnTU_FNAMERUSChanged();
    partial void OnTU_FNAMELATChanging(string value);
    partial void OnTU_FNAMELATChanged();
    partial void OnTU_SNAMERUSChanging(string value);
    partial void OnTU_SNAMERUSChanged();
    partial void OnTU_SNAMELATChanging(string value);
    partial void OnTU_SNAMELATChanged();
    partial void OnTU_BIRTHDAYChanging(System.Nullable<System.DateTime> value);
    partial void OnTU_BIRTHDAYChanged();
    partial void OnTU_BIRTHCOUNTRYChanging(string value);
    partial void OnTU_BIRTHCOUNTRYChanged();
    partial void OnTU_BIRTHCITYChanging(string value);
    partial void OnTU_BIRTHCITYChanged();
    partial void OnTU_CITIZENChanging(string value);
    partial void OnTU_CITIZENChanged();
    partial void OnTU_POSTINDEXChanging(string value);
    partial void OnTU_POSTINDEXChanged();
    partial void OnTU_POSTCITYChanging(string value);
    partial void OnTU_POSTCITYChanged();
    partial void OnTU_POSTSTREETChanging(string value);
    partial void OnTU_POSTSTREETChanged();
    partial void OnTU_POSTBILDChanging(string value);
    partial void OnTU_POSTBILDChanged();
    partial void OnTU_POSTFLATChanging(string value);
    partial void OnTU_POSTFLATChanged();
    partial void OnTU_PHONEChanging(string value);
    partial void OnTU_PHONEChanged();
    partial void OnTU_PHONECODEChanging(string value);
    partial void OnTU_PHONECODEChanged();
    partial void OnTU_PASPORTTYPEChanging(string value);
    partial void OnTU_PASPORTTYPEChanged();
    partial void OnTU_PASPORTNUMChanging(string value);
    partial void OnTU_PASPORTNUMChanged();
    partial void OnTU_PASPORTDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnTU_PASPORTDATEChanged();
    partial void OnTU_PASPORTDATEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnTU_PASPORTDATEENDChanged();
    partial void OnTU_PASPORTBYWHOMChanging(string value);
    partial void OnTU_PASPORTBYWHOMChanged();
    partial void OnTU_PLACEChanging(System.Nullable<short> value);
    partial void OnTU_PLACEChanged();
    partial void OnTU_ISANKETAChanging(System.Nullable<short> value);
    partial void OnTU_ISANKETAChanged();
    partial void OnTU_CREATORChanging(int value);
    partial void OnTU_CREATORChanged();
    partial void OnTU_OWNERChanging(int value);
    partial void OnTU_OWNERChanged();
    partial void OnTU_PASPRUSERChanging(string value);
    partial void OnTU_PASPRUSERChanged();
    partial void OnTU_PASPRUNUMChanging(string value);
    partial void OnTU_PASPRUNUMChanged();
    partial void OnTU_PASPRUDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnTU_PASPRUDATEChanged();
    partial void OnTU_PASPRUBYWHOMChanging(string value);
    partial void OnTU_PASPRUBYWHOMChanged();
    partial void OnTU_INSURPOLISChanging(string value);
    partial void OnTU_INSURPOLISChanged();
    partial void OnTU_INSURSUMChanging(System.Nullable<double> value);
    partial void OnTU_INSURSUMChanged();
    partial void OnTU_DISCOUNTChanging(System.Nullable<double> value);
    partial void OnTU_DISCOUNTChanged();
    partial void OnTU_TYPEDISCOUNTChanging(System.Nullable<double> value);
    partial void OnTU_TYPEDISCOUNTChanged();
    partial void OnTU_IDChanging(System.Nullable<int> value);
    partial void OnTU_IDChanged();
    partial void OnTU_ISMAINChanging(System.Nullable<short> value);
    partial void OnTU_ISMAINChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnTU_AgentIDChanging(System.Nullable<int> value);
    partial void OnTU_AgentIDChanged();
    partial void OnTL_ADVDESCChanging(string value);
    partial void OnTL_ADVDESCChanged();
    partial void OnTL_ATTDESCChanging(string value);
    partial void OnTL_ATTDESCChanged();
    partial void OnTL_DOPDESCChanging(string value);
    partial void OnTL_DOPDESCChanged();
    partial void OnTL_FULLDESCChanging(string value);
    partial void OnTL_FULLDESCChanged();
    partial void OnTL_SMALLDESCChanging(string value);
    partial void OnTL_SMALLDESCChanged();
    partial void OnTU_DGKEYChanging(System.Nullable<int> value);
    partial void OnTU_DGKEYChanged();
    partial void OnTU_RealSexChanging(System.Nullable<short> value);
    partial void OnTU_RealSexChanged();
    partial void OnTU_EMAILChanging(string value);
    partial void OnTU_EMAILChanged();
    #endregion
		
		public tbl_Turist()
		{
			this._TuristServices = new EntitySet<TuristService>(new Action<TuristService>(this.attach_TuristServices), new Action<TuristService>(this.detach_TuristServices));
			this._LT_V_Persons = new EntitySet<LT_V_Person>(new Action<LT_V_Person>(this.attach_LT_V_Persons), new Action<LT_V_Person>(this.detach_LT_V_Persons));
			this._tbl_Dogovor = default(EntityRef<tbl_Dogovor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_DGCOD", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TU_DGCOD
		{
			get
			{
				return this._TU_DGCOD;
			}
			set
			{
				if ((this._TU_DGCOD != value))
				{
					this.OnTU_DGCODChanging(value);
					this.SendPropertyChanging();
					this._TU_DGCOD = value;
					this.SendPropertyChanged("TU_DGCOD");
					this.OnTU_DGCODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int TU_KEY
		{
			get
			{
				return this._TU_KEY;
			}
			set
			{
				if ((this._TU_KEY != value))
				{
					this.OnTU_KEYChanging(value);
					this.SendPropertyChanging();
					this._TU_KEY = value;
					this.SendPropertyChanged("TU_KEY");
					this.OnTU_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_NAMERUS", DbType="VarChar(35)", UpdateCheck=UpdateCheck.Never)]
		public string TU_NAMERUS
		{
			get
			{
				return this._TU_NAMERUS;
			}
			set
			{
				if ((this._TU_NAMERUS != value))
				{
					this.OnTU_NAMERUSChanging(value);
					this.SendPropertyChanging();
					this._TU_NAMERUS = value;
					this.SendPropertyChanged("TU_NAMERUS");
					this.OnTU_NAMERUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_NAMELAT", DbType="VarChar(35)", UpdateCheck=UpdateCheck.Never)]
		public string TU_NAMELAT
		{
			get
			{
				return this._TU_NAMELAT;
			}
			set
			{
				if ((this._TU_NAMELAT != value))
				{
					this.OnTU_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._TU_NAMELAT = value;
					this.SendPropertyChanged("TU_NAMELAT");
					this.OnTU_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_SHORTNAME", DbType="VarChar(4) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TU_SHORTNAME
		{
			get
			{
				return this._TU_SHORTNAME;
			}
			set
			{
				if ((this._TU_SHORTNAME != value))
				{
					this.OnTU_SHORTNAMEChanging(value);
					this.SendPropertyChanging();
					this._TU_SHORTNAME = value;
					this.SendPropertyChanged("TU_SHORTNAME");
					this.OnTU_SHORTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_SEX", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TU_SEX
		{
			get
			{
				return this._TU_SEX;
			}
			set
			{
				if ((this._TU_SEX != value))
				{
					this.OnTU_SEXChanging(value);
					this.SendPropertyChanging();
					this._TU_SEX = value;
					this.SendPropertyChanged("TU_SEX");
					this.OnTU_SEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_FNAMERUS", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TU_FNAMERUS
		{
			get
			{
				return this._TU_FNAMERUS;
			}
			set
			{
				if ((this._TU_FNAMERUS != value))
				{
					this.OnTU_FNAMERUSChanging(value);
					this.SendPropertyChanging();
					this._TU_FNAMERUS = value;
					this.SendPropertyChanged("TU_FNAMERUS");
					this.OnTU_FNAMERUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_FNAMELAT", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TU_FNAMELAT
		{
			get
			{
				return this._TU_FNAMELAT;
			}
			set
			{
				if ((this._TU_FNAMELAT != value))
				{
					this.OnTU_FNAMELATChanging(value);
					this.SendPropertyChanging();
					this._TU_FNAMELAT = value;
					this.SendPropertyChanged("TU_FNAMELAT");
					this.OnTU_FNAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_SNAMERUS", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string TU_SNAMERUS
		{
			get
			{
				return this._TU_SNAMERUS;
			}
			set
			{
				if ((this._TU_SNAMERUS != value))
				{
					this.OnTU_SNAMERUSChanging(value);
					this.SendPropertyChanging();
					this._TU_SNAMERUS = value;
					this.SendPropertyChanged("TU_SNAMERUS");
					this.OnTU_SNAMERUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_SNAMELAT", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string TU_SNAMELAT
		{
			get
			{
				return this._TU_SNAMELAT;
			}
			set
			{
				if ((this._TU_SNAMELAT != value))
				{
					this.OnTU_SNAMELATChanging(value);
					this.SendPropertyChanging();
					this._TU_SNAMELAT = value;
					this.SendPropertyChanged("TU_SNAMELAT");
					this.OnTU_SNAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_BIRTHDAY", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TU_BIRTHDAY
		{
			get
			{
				return this._TU_BIRTHDAY;
			}
			set
			{
				if ((this._TU_BIRTHDAY != value))
				{
					this.OnTU_BIRTHDAYChanging(value);
					this.SendPropertyChanging();
					this._TU_BIRTHDAY = value;
					this.SendPropertyChanged("TU_BIRTHDAY");
					this.OnTU_BIRTHDAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_BIRTHCOUNTRY", DbType="VarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string TU_BIRTHCOUNTRY
		{
			get
			{
				return this._TU_BIRTHCOUNTRY;
			}
			set
			{
				if ((this._TU_BIRTHCOUNTRY != value))
				{
					this.OnTU_BIRTHCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._TU_BIRTHCOUNTRY = value;
					this.SendPropertyChanged("TU_BIRTHCOUNTRY");
					this.OnTU_BIRTHCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_BIRTHCITY", DbType="VarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string TU_BIRTHCITY
		{
			get
			{
				return this._TU_BIRTHCITY;
			}
			set
			{
				if ((this._TU_BIRTHCITY != value))
				{
					this.OnTU_BIRTHCITYChanging(value);
					this.SendPropertyChanging();
					this._TU_BIRTHCITY = value;
					this.SendPropertyChanged("TU_BIRTHCITY");
					this.OnTU_BIRTHCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_CITIZEN", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TU_CITIZEN
		{
			get
			{
				return this._TU_CITIZEN;
			}
			set
			{
				if ((this._TU_CITIZEN != value))
				{
					this.OnTU_CITIZENChanging(value);
					this.SendPropertyChanging();
					this._TU_CITIZEN = value;
					this.SendPropertyChanged("TU_CITIZEN");
					this.OnTU_CITIZENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_POSTINDEX", DbType="VarChar(8)", UpdateCheck=UpdateCheck.Never)]
		public string TU_POSTINDEX
		{
			get
			{
				return this._TU_POSTINDEX;
			}
			set
			{
				if ((this._TU_POSTINDEX != value))
				{
					this.OnTU_POSTINDEXChanging(value);
					this.SendPropertyChanging();
					this._TU_POSTINDEX = value;
					this.SendPropertyChanged("TU_POSTINDEX");
					this.OnTU_POSTINDEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_POSTCITY", DbType="VarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string TU_POSTCITY
		{
			get
			{
				return this._TU_POSTCITY;
			}
			set
			{
				if ((this._TU_POSTCITY != value))
				{
					this.OnTU_POSTCITYChanging(value);
					this.SendPropertyChanging();
					this._TU_POSTCITY = value;
					this.SendPropertyChanged("TU_POSTCITY");
					this.OnTU_POSTCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_POSTSTREET", DbType="VarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string TU_POSTSTREET
		{
			get
			{
				return this._TU_POSTSTREET;
			}
			set
			{
				if ((this._TU_POSTSTREET != value))
				{
					this.OnTU_POSTSTREETChanging(value);
					this.SendPropertyChanging();
					this._TU_POSTSTREET = value;
					this.SendPropertyChanged("TU_POSTSTREET");
					this.OnTU_POSTSTREETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_POSTBILD", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string TU_POSTBILD
		{
			get
			{
				return this._TU_POSTBILD;
			}
			set
			{
				if ((this._TU_POSTBILD != value))
				{
					this.OnTU_POSTBILDChanging(value);
					this.SendPropertyChanging();
					this._TU_POSTBILD = value;
					this.SendPropertyChanged("TU_POSTBILD");
					this.OnTU_POSTBILDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_POSTFLAT", DbType="VarChar(4)", UpdateCheck=UpdateCheck.Never)]
		public string TU_POSTFLAT
		{
			get
			{
				return this._TU_POSTFLAT;
			}
			set
			{
				if ((this._TU_POSTFLAT != value))
				{
					this.OnTU_POSTFLATChanging(value);
					this.SendPropertyChanging();
					this._TU_POSTFLAT = value;
					this.SendPropertyChanged("TU_POSTFLAT");
					this.OnTU_POSTFLATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PHONE", DbType="VarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string TU_PHONE
		{
			get
			{
				return this._TU_PHONE;
			}
			set
			{
				if ((this._TU_PHONE != value))
				{
					this.OnTU_PHONEChanging(value);
					this.SendPropertyChanging();
					this._TU_PHONE = value;
					this.SendPropertyChanged("TU_PHONE");
					this.OnTU_PHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PHONECODE", DbType="VarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string TU_PHONECODE
		{
			get
			{
				return this._TU_PHONECODE;
			}
			set
			{
				if ((this._TU_PHONECODE != value))
				{
					this.OnTU_PHONECODEChanging(value);
					this.SendPropertyChanging();
					this._TU_PHONECODE = value;
					this.SendPropertyChanged("TU_PHONECODE");
					this.OnTU_PHONECODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PASPORTTYPE", DbType="VarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string TU_PASPORTTYPE
		{
			get
			{
				return this._TU_PASPORTTYPE;
			}
			set
			{
				if ((this._TU_PASPORTTYPE != value))
				{
					this.OnTU_PASPORTTYPEChanging(value);
					this.SendPropertyChanging();
					this._TU_PASPORTTYPE = value;
					this.SendPropertyChanged("TU_PASPORTTYPE");
					this.OnTU_PASPORTTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PASPORTNUM", DbType="VarChar(13)", UpdateCheck=UpdateCheck.Never)]
		public string TU_PASPORTNUM
		{
			get
			{
				return this._TU_PASPORTNUM;
			}
			set
			{
				if ((this._TU_PASPORTNUM != value))
				{
					this.OnTU_PASPORTNUMChanging(value);
					this.SendPropertyChanging();
					this._TU_PASPORTNUM = value;
					this.SendPropertyChanged("TU_PASPORTNUM");
					this.OnTU_PASPORTNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PASPORTDATE", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TU_PASPORTDATE
		{
			get
			{
				return this._TU_PASPORTDATE;
			}
			set
			{
				if ((this._TU_PASPORTDATE != value))
				{
					this.OnTU_PASPORTDATEChanging(value);
					this.SendPropertyChanging();
					this._TU_PASPORTDATE = value;
					this.SendPropertyChanged("TU_PASPORTDATE");
					this.OnTU_PASPORTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PASPORTDATEEND", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TU_PASPORTDATEEND
		{
			get
			{
				return this._TU_PASPORTDATEEND;
			}
			set
			{
				if ((this._TU_PASPORTDATEEND != value))
				{
					this.OnTU_PASPORTDATEENDChanging(value);
					this.SendPropertyChanging();
					this._TU_PASPORTDATEEND = value;
					this.SendPropertyChanged("TU_PASPORTDATEEND");
					this.OnTU_PASPORTDATEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PASPORTBYWHOM", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string TU_PASPORTBYWHOM
		{
			get
			{
				return this._TU_PASPORTBYWHOM;
			}
			set
			{
				if ((this._TU_PASPORTBYWHOM != value))
				{
					this.OnTU_PASPORTBYWHOMChanging(value);
					this.SendPropertyChanging();
					this._TU_PASPORTBYWHOM = value;
					this.SendPropertyChanged("TU_PASPORTBYWHOM");
					this.OnTU_PASPORTBYWHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PLACE", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TU_PLACE
		{
			get
			{
				return this._TU_PLACE;
			}
			set
			{
				if ((this._TU_PLACE != value))
				{
					this.OnTU_PLACEChanging(value);
					this.SendPropertyChanging();
					this._TU_PLACE = value;
					this.SendPropertyChanged("TU_PLACE");
					this.OnTU_PLACEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_ISANKETA", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TU_ISANKETA
		{
			get
			{
				return this._TU_ISANKETA;
			}
			set
			{
				if ((this._TU_ISANKETA != value))
				{
					this.OnTU_ISANKETAChanging(value);
					this.SendPropertyChanging();
					this._TU_ISANKETA = value;
					this.SendPropertyChanged("TU_ISANKETA");
					this.OnTU_ISANKETAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_CREATOR", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TU_CREATOR
		{
			get
			{
				return this._TU_CREATOR;
			}
			set
			{
				if ((this._TU_CREATOR != value))
				{
					this.OnTU_CREATORChanging(value);
					this.SendPropertyChanging();
					this._TU_CREATOR = value;
					this.SendPropertyChanged("TU_CREATOR");
					this.OnTU_CREATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_OWNER", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TU_OWNER
		{
			get
			{
				return this._TU_OWNER;
			}
			set
			{
				if ((this._TU_OWNER != value))
				{
					this.OnTU_OWNERChanging(value);
					this.SendPropertyChanging();
					this._TU_OWNER = value;
					this.SendPropertyChanged("TU_OWNER");
					this.OnTU_OWNERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PASPRUSER", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string TU_PASPRUSER
		{
			get
			{
				return this._TU_PASPRUSER;
			}
			set
			{
				if ((this._TU_PASPRUSER != value))
				{
					this.OnTU_PASPRUSERChanging(value);
					this.SendPropertyChanging();
					this._TU_PASPRUSER = value;
					this.SendPropertyChanged("TU_PASPRUSER");
					this.OnTU_PASPRUSERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PASPRUNUM", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string TU_PASPRUNUM
		{
			get
			{
				return this._TU_PASPRUNUM;
			}
			set
			{
				if ((this._TU_PASPRUNUM != value))
				{
					this.OnTU_PASPRUNUMChanging(value);
					this.SendPropertyChanging();
					this._TU_PASPRUNUM = value;
					this.SendPropertyChanged("TU_PASPRUNUM");
					this.OnTU_PASPRUNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PASPRUDATE", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TU_PASPRUDATE
		{
			get
			{
				return this._TU_PASPRUDATE;
			}
			set
			{
				if ((this._TU_PASPRUDATE != value))
				{
					this.OnTU_PASPRUDATEChanging(value);
					this.SendPropertyChanging();
					this._TU_PASPRUDATE = value;
					this.SendPropertyChanged("TU_PASPRUDATE");
					this.OnTU_PASPRUDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_PASPRUBYWHOM", DbType="VarChar(45)", UpdateCheck=UpdateCheck.Never)]
		public string TU_PASPRUBYWHOM
		{
			get
			{
				return this._TU_PASPRUBYWHOM;
			}
			set
			{
				if ((this._TU_PASPRUBYWHOM != value))
				{
					this.OnTU_PASPRUBYWHOMChanging(value);
					this.SendPropertyChanging();
					this._TU_PASPRUBYWHOM = value;
					this.SendPropertyChanged("TU_PASPRUBYWHOM");
					this.OnTU_PASPRUBYWHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_INSURPOLIS", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string TU_INSURPOLIS
		{
			get
			{
				return this._TU_INSURPOLIS;
			}
			set
			{
				if ((this._TU_INSURPOLIS != value))
				{
					this.OnTU_INSURPOLISChanging(value);
					this.SendPropertyChanging();
					this._TU_INSURPOLIS = value;
					this.SendPropertyChanged("TU_INSURPOLIS");
					this.OnTU_INSURPOLISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_INSURSUM", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> TU_INSURSUM
		{
			get
			{
				return this._TU_INSURSUM;
			}
			set
			{
				if ((this._TU_INSURSUM != value))
				{
					this.OnTU_INSURSUMChanging(value);
					this.SendPropertyChanging();
					this._TU_INSURSUM = value;
					this.SendPropertyChanged("TU_INSURSUM");
					this.OnTU_INSURSUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_DISCOUNT", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> TU_DISCOUNT
		{
			get
			{
				return this._TU_DISCOUNT;
			}
			set
			{
				if ((this._TU_DISCOUNT != value))
				{
					this.OnTU_DISCOUNTChanging(value);
					this.SendPropertyChanging();
					this._TU_DISCOUNT = value;
					this.SendPropertyChanged("TU_DISCOUNT");
					this.OnTU_DISCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_TYPEDISCOUNT", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> TU_TYPEDISCOUNT
		{
			get
			{
				return this._TU_TYPEDISCOUNT;
			}
			set
			{
				if ((this._TU_TYPEDISCOUNT != value))
				{
					this.OnTU_TYPEDISCOUNTChanging(value);
					this.SendPropertyChanging();
					this._TU_TYPEDISCOUNT = value;
					this.SendPropertyChanged("TU_TYPEDISCOUNT");
					this.OnTU_TYPEDISCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TU_ID
		{
			get
			{
				return this._TU_ID;
			}
			set
			{
				if ((this._TU_ID != value))
				{
					this.OnTU_IDChanging(value);
					this.SendPropertyChanging();
					this._TU_ID = value;
					this.SendPropertyChanged("TU_ID");
					this.OnTU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_ISMAIN", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TU_ISMAIN
		{
			get
			{
				return this._TU_ISMAIN;
			}
			set
			{
				if ((this._TU_ISMAIN != value))
				{
					this.OnTU_ISMAINChanging(value);
					this.SendPropertyChanging();
					this._TU_ISMAIN = value;
					this.SendPropertyChanged("TU_ISMAIN");
					this.OnTU_ISMAINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_AgentID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TU_AgentID
		{
			get
			{
				return this._TU_AgentID;
			}
			set
			{
				if ((this._TU_AgentID != value))
				{
					this.OnTU_AgentIDChanging(value);
					this.SendPropertyChanging();
					this._TU_AgentID = value;
					this.SendPropertyChanged("TU_AgentID");
					this.OnTU_AgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TL_ADVDESC", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TL_ADVDESC
		{
			get
			{
				return this._TL_ADVDESC;
			}
			set
			{
				if ((this._TL_ADVDESC != value))
				{
					this.OnTL_ADVDESCChanging(value);
					this.SendPropertyChanging();
					this._TL_ADVDESC = value;
					this.SendPropertyChanged("TL_ADVDESC");
					this.OnTL_ADVDESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TL_ATTDESC", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TL_ATTDESC
		{
			get
			{
				return this._TL_ATTDESC;
			}
			set
			{
				if ((this._TL_ATTDESC != value))
				{
					this.OnTL_ATTDESCChanging(value);
					this.SendPropertyChanging();
					this._TL_ATTDESC = value;
					this.SendPropertyChanged("TL_ATTDESC");
					this.OnTL_ATTDESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TL_DOPDESC", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TL_DOPDESC
		{
			get
			{
				return this._TL_DOPDESC;
			}
			set
			{
				if ((this._TL_DOPDESC != value))
				{
					this.OnTL_DOPDESCChanging(value);
					this.SendPropertyChanging();
					this._TL_DOPDESC = value;
					this.SendPropertyChanged("TL_DOPDESC");
					this.OnTL_DOPDESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TL_FULLDESC", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TL_FULLDESC
		{
			get
			{
				return this._TL_FULLDESC;
			}
			set
			{
				if ((this._TL_FULLDESC != value))
				{
					this.OnTL_FULLDESCChanging(value);
					this.SendPropertyChanging();
					this._TL_FULLDESC = value;
					this.SendPropertyChanged("TL_FULLDESC");
					this.OnTL_FULLDESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TL_SMALLDESC", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TL_SMALLDESC
		{
			get
			{
				return this._TL_SMALLDESC;
			}
			set
			{
				if ((this._TL_SMALLDESC != value))
				{
					this.OnTL_SMALLDESCChanging(value);
					this.SendPropertyChanging();
					this._TL_SMALLDESC = value;
					this.SendPropertyChanged("TL_SMALLDESC");
					this.OnTL_SMALLDESCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_DGKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TU_DGKEY
		{
			get
			{
				return this._TU_DGKEY;
			}
			set
			{
				if ((this._TU_DGKEY != value))
				{
					if (this._tbl_Dogovor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTU_DGKEYChanging(value);
					this.SendPropertyChanging();
					this._TU_DGKEY = value;
					this.SendPropertyChanged("TU_DGKEY");
					this.OnTU_DGKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_RealSex", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TU_RealSex
		{
			get
			{
				return this._TU_RealSex;
			}
			set
			{
				if ((this._TU_RealSex != value))
				{
					this.OnTU_RealSexChanging(value);
					this.SendPropertyChanging();
					this._TU_RealSex = value;
					this.SendPropertyChanged("TU_RealSex");
					this.OnTU_RealSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_EMAIL", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TU_EMAIL
		{
			get
			{
				return this._TU_EMAIL;
			}
			set
			{
				if ((this._TU_EMAIL != value))
				{
					this.OnTU_EMAILChanging(value);
					this.SendPropertyChanging();
					this._TU_EMAIL = value;
					this.SendPropertyChanged("TU_EMAIL");
					this.OnTU_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Turist_TuristService", Storage="_TuristServices", ThisKey="TU_KEY", OtherKey="TU_TUKEY")]
		public EntitySet<TuristService> TuristServices
		{
			get
			{
				return this._TuristServices;
			}
			set
			{
				this._TuristServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Turist_LT_V_Person", Storage="_LT_V_Persons", ThisKey="TU_KEY", OtherKey="VT_TUKey")]
		public EntitySet<LT_V_Person> LT_V_Persons
		{
			get
			{
				return this._LT_V_Persons;
			}
			set
			{
				this._LT_V_Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dogovor_tbl_Turist", Storage="_tbl_Dogovor", ThisKey="TU_DGKEY", OtherKey="DG_Key", IsForeignKey=true)]
		public tbl_Dogovor tbl_Dogovor
		{
			get
			{
				return this._tbl_Dogovor.Entity;
			}
			set
			{
				tbl_Dogovor previousValue = this._tbl_Dogovor.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Dogovor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Dogovor.Entity = null;
						previousValue.tbl_Turists.Remove(this);
					}
					this._tbl_Dogovor.Entity = value;
					if ((value != null))
					{
						value.tbl_Turists.Add(this);
						this._TU_DGKEY = value.DG_Key;
					}
					else
					{
						this._TU_DGKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Dogovor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TuristServices(TuristService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Turist = this;
		}
		
		private void detach_TuristServices(TuristService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Turist = null;
		}
		
		private void attach_LT_V_Persons(LT_V_Person entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Turist = this;
		}
		
		private void detach_LT_V_Persons(LT_V_Person entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Turist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TuristService")]
	public partial class TuristService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TU_TUKEY;
		
		private int _TU_DLKEY;
		
		private string _TU_NUMDOC;
		
		private System.Nullable<short> _TU_NUMROOM;
		
		private string _TU_SEAT;
		
		private System.Nullable<short> _TU_AREA;
		
		private System.Nullable<System.DateTime> _TU_DOCDATE;
		
		private System.Data.Linq.Binary _ROWID;
		
		private int _TU_IDKEY;
		
		private EntityRef<tbl_DogovorList> _tbl_DogovorList;
		
		private EntityRef<tbl_Turist> _tbl_Turist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTU_TUKEYChanging(int value);
    partial void OnTU_TUKEYChanged();
    partial void OnTU_DLKEYChanging(int value);
    partial void OnTU_DLKEYChanged();
    partial void OnTU_NUMDOCChanging(string value);
    partial void OnTU_NUMDOCChanged();
    partial void OnTU_NUMROOMChanging(System.Nullable<short> value);
    partial void OnTU_NUMROOMChanged();
    partial void OnTU_SEATChanging(string value);
    partial void OnTU_SEATChanged();
    partial void OnTU_AREAChanging(System.Nullable<short> value);
    partial void OnTU_AREAChanged();
    partial void OnTU_DOCDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnTU_DOCDATEChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnTU_IDKEYChanging(int value);
    partial void OnTU_IDKEYChanged();
    #endregion
		
		public TuristService()
		{
			this._tbl_DogovorList = default(EntityRef<tbl_DogovorList>);
			this._tbl_Turist = default(EntityRef<tbl_Turist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_TUKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TU_TUKEY
		{
			get
			{
				return this._TU_TUKEY;
			}
			set
			{
				if ((this._TU_TUKEY != value))
				{
					if (this._tbl_Turist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTU_TUKEYChanging(value);
					this.SendPropertyChanging();
					this._TU_TUKEY = value;
					this.SendPropertyChanged("TU_TUKEY");
					this.OnTU_TUKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_DLKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TU_DLKEY
		{
			get
			{
				return this._TU_DLKEY;
			}
			set
			{
				if ((this._TU_DLKEY != value))
				{
					if (this._tbl_DogovorList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTU_DLKEYChanging(value);
					this.SendPropertyChanging();
					this._TU_DLKEY = value;
					this.SendPropertyChanged("TU_DLKEY");
					this.OnTU_DLKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_NUMDOC", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string TU_NUMDOC
		{
			get
			{
				return this._TU_NUMDOC;
			}
			set
			{
				if ((this._TU_NUMDOC != value))
				{
					this.OnTU_NUMDOCChanging(value);
					this.SendPropertyChanging();
					this._TU_NUMDOC = value;
					this.SendPropertyChanged("TU_NUMDOC");
					this.OnTU_NUMDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_NUMROOM", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TU_NUMROOM
		{
			get
			{
				return this._TU_NUMROOM;
			}
			set
			{
				if ((this._TU_NUMROOM != value))
				{
					this.OnTU_NUMROOMChanging(value);
					this.SendPropertyChanging();
					this._TU_NUMROOM = value;
					this.SendPropertyChanged("TU_NUMROOM");
					this.OnTU_NUMROOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_SEAT", DbType="VarChar(4)", UpdateCheck=UpdateCheck.Never)]
		public string TU_SEAT
		{
			get
			{
				return this._TU_SEAT;
			}
			set
			{
				if ((this._TU_SEAT != value))
				{
					this.OnTU_SEATChanging(value);
					this.SendPropertyChanging();
					this._TU_SEAT = value;
					this.SendPropertyChanged("TU_SEAT");
					this.OnTU_SEATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_AREA", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TU_AREA
		{
			get
			{
				return this._TU_AREA;
			}
			set
			{
				if ((this._TU_AREA != value))
				{
					this.OnTU_AREAChanging(value);
					this.SendPropertyChanging();
					this._TU_AREA = value;
					this.SendPropertyChanged("TU_AREA");
					this.OnTU_AREAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_DOCDATE", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TU_DOCDATE
		{
			get
			{
				return this._TU_DOCDATE;
			}
			set
			{
				if ((this._TU_DOCDATE != value))
				{
					this.OnTU_DOCDATEChanging(value);
					this.SendPropertyChanging();
					this._TU_DOCDATE = value;
					this.SendPropertyChanged("TU_DOCDATE");
					this.OnTU_DOCDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TU_IDKEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int TU_IDKEY
		{
			get
			{
				return this._TU_IDKEY;
			}
			set
			{
				if ((this._TU_IDKEY != value))
				{
					this.OnTU_IDKEYChanging(value);
					this.SendPropertyChanging();
					this._TU_IDKEY = value;
					this.SendPropertyChanged("TU_IDKEY");
					this.OnTU_IDKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_DogovorList_TuristService", Storage="_tbl_DogovorList", ThisKey="TU_DLKEY", OtherKey="DL_KEY", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_DogovorList tbl_DogovorList
		{
			get
			{
				return this._tbl_DogovorList.Entity;
			}
			set
			{
				tbl_DogovorList previousValue = this._tbl_DogovorList.Entity;
				if (((previousValue != value) 
							|| (this._tbl_DogovorList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_DogovorList.Entity = null;
						previousValue.TuristServices.Remove(this);
					}
					this._tbl_DogovorList.Entity = value;
					if ((value != null))
					{
						value.TuristServices.Add(this);
						this._TU_DLKEY = value.DL_KEY;
					}
					else
					{
						this._TU_DLKEY = default(int);
					}
					this.SendPropertyChanged("tbl_DogovorList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Turist_TuristService", Storage="_tbl_Turist", ThisKey="TU_TUKEY", OtherKey="TU_KEY", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Turist tbl_Turist
		{
			get
			{
				return this._tbl_Turist.Entity;
			}
			set
			{
				tbl_Turist previousValue = this._tbl_Turist.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Turist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Turist.Entity = null;
						previousValue.TuristServices.Remove(this);
					}
					this._tbl_Turist.Entity = value;
					if ((value != null))
					{
						value.TuristServices.Add(this);
						this._TU_TUKEY = value.TU_KEY;
					}
					else
					{
						this._TU_TUKEY = default(int);
					}
					this.SendPropertyChanged("tbl_Turist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_TurList")]
	public partial class tbl_TurList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TL_KEY;
		
		private string _TL_NAME;
		
		private string _TL_NameLat;
		
		private int _TL_CNKEY;
		
		private EntitySet<tbl_Dogovor> _tbl_Dogovors;
		
		private EntitySet<LT_V_Voucher> _LT_V_Vouchers;
		
		private EntitySet<TurDate> _TurDates;
		
		private EntitySet<TurService> _TurServices;
		
		private EntitySet<LT_V_MappingTurList> _LT_V_MappingTurLists;
		
		private EntityRef<tbl_Country> _tbl_Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTL_KEYChanging(int value);
    partial void OnTL_KEYChanged();
    partial void OnTL_NAMEChanging(string value);
    partial void OnTL_NAMEChanged();
    partial void OnTL_NameLatChanging(string value);
    partial void OnTL_NameLatChanged();
    partial void OnTL_CNKEYChanging(int value);
    partial void OnTL_CNKEYChanged();
    #endregion
		
		public tbl_TurList()
		{
			this._tbl_Dogovors = new EntitySet<tbl_Dogovor>(new Action<tbl_Dogovor>(this.attach_tbl_Dogovors), new Action<tbl_Dogovor>(this.detach_tbl_Dogovors));
			this._LT_V_Vouchers = new EntitySet<LT_V_Voucher>(new Action<LT_V_Voucher>(this.attach_LT_V_Vouchers), new Action<LT_V_Voucher>(this.detach_LT_V_Vouchers));
			this._TurDates = new EntitySet<TurDate>(new Action<TurDate>(this.attach_TurDates), new Action<TurDate>(this.detach_TurDates));
			this._TurServices = new EntitySet<TurService>(new Action<TurService>(this.attach_TurServices), new Action<TurService>(this.detach_TurServices));
			this._LT_V_MappingTurLists = new EntitySet<LT_V_MappingTurList>(new Action<LT_V_MappingTurList>(this.attach_LT_V_MappingTurLists), new Action<LT_V_MappingTurList>(this.detach_LT_V_MappingTurLists));
			this._tbl_Country = default(EntityRef<tbl_Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TL_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int TL_KEY
		{
			get
			{
				return this._TL_KEY;
			}
			set
			{
				if ((this._TL_KEY != value))
				{
					this.OnTL_KEYChanging(value);
					this.SendPropertyChanging();
					this._TL_KEY = value;
					this.SendPropertyChanged("TL_KEY");
					this.OnTL_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TL_NAME", DbType="VarChar(160) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TL_NAME
		{
			get
			{
				return this._TL_NAME;
			}
			set
			{
				if ((this._TL_NAME != value))
				{
					this.OnTL_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TL_NAME = value;
					this.SendPropertyChanged("TL_NAME");
					this.OnTL_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TL_NameLat", DbType="VarChar(160)", UpdateCheck=UpdateCheck.Never)]
		public string TL_NameLat
		{
			get
			{
				return this._TL_NameLat;
			}
			set
			{
				if ((this._TL_NameLat != value))
				{
					this.OnTL_NameLatChanging(value);
					this.SendPropertyChanging();
					this._TL_NameLat = value;
					this.SendPropertyChanged("TL_NameLat");
					this.OnTL_NameLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TL_CNKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TL_CNKEY
		{
			get
			{
				return this._TL_CNKEY;
			}
			set
			{
				if ((this._TL_CNKEY != value))
				{
					if (this._tbl_Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTL_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._TL_CNKEY = value;
					this.SendPropertyChanged("TL_CNKEY");
					this.OnTL_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_tbl_Dogovor", Storage="_tbl_Dogovors", ThisKey="TL_KEY", OtherKey="DG_TRKEY")]
		public EntitySet<tbl_Dogovor> tbl_Dogovors
		{
			get
			{
				return this._tbl_Dogovors;
			}
			set
			{
				this._tbl_Dogovors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_LT_V_Voucher", Storage="_LT_V_Vouchers", ThisKey="TL_KEY", OtherKey="V_TRKey")]
		public EntitySet<LT_V_Voucher> LT_V_Vouchers
		{
			get
			{
				return this._LT_V_Vouchers;
			}
			set
			{
				this._LT_V_Vouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_TurDate", Storage="_TurDates", ThisKey="TL_KEY", OtherKey="TD_TRKEY")]
		public EntitySet<TurDate> TurDates
		{
			get
			{
				return this._TurDates;
			}
			set
			{
				this._TurDates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_TurService", Storage="_TurServices", ThisKey="TL_KEY", OtherKey="TS_TRKEY")]
		public EntitySet<TurService> TurServices
		{
			get
			{
				return this._TurServices;
			}
			set
			{
				this._TurServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_LT_V_MappingTurList", Storage="_LT_V_MappingTurLists", ThisKey="TL_KEY", OtherKey="VT_TLKey")]
		public EntitySet<LT_V_MappingTurList> LT_V_MappingTurLists
		{
			get
			{
				return this._LT_V_MappingTurLists;
			}
			set
			{
				this._LT_V_MappingTurLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Country_tbl_TurList", Storage="_tbl_Country", ThisKey="TL_CNKEY", OtherKey="CN_KEY", IsForeignKey=true)]
		public tbl_Country tbl_Country
		{
			get
			{
				return this._tbl_Country.Entity;
			}
			set
			{
				tbl_Country previousValue = this._tbl_Country.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Country.Entity = null;
						previousValue.tbl_TurLists.Remove(this);
					}
					this._tbl_Country.Entity = value;
					if ((value != null))
					{
						value.tbl_TurLists.Add(this);
						this._TL_CNKEY = value.CN_KEY;
					}
					else
					{
						this._TL_CNKEY = default(int);
					}
					this.SendPropertyChanged("tbl_Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Dogovors(tbl_Dogovor entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TurList = this;
		}
		
		private void detach_tbl_Dogovors(tbl_Dogovor entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TurList = null;
		}
		
		private void attach_LT_V_Vouchers(LT_V_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TurList = this;
		}
		
		private void detach_LT_V_Vouchers(LT_V_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TurList = null;
		}
		
		private void attach_TurDates(TurDate entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TurList = this;
		}
		
		private void detach_TurDates(TurDate entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TurList = null;
		}
		
		private void attach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TurList = this;
		}
		
		private void detach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TurList = null;
		}
		
		private void attach_LT_V_MappingTurLists(LT_V_MappingTurList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TurList = this;
		}
		
		private void detach_LT_V_MappingTurLists(LT_V_MappingTurList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TurList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Partners")]
	public partial class tbl_Partner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PR_KEY;
		
		private string _PR_FULLNAME;
		
		private string _PR_NAME;
		
		private string _PR_NAMEENG;
		
		private string _PR_ADRESS;
		
		private string _PR_PHONES;
		
		private string _PR_FAX;
		
		private string _PR_EMAIL;
		
		private System.Nullable<int> _PR_CTKEY;
		
		private string _PR_FAX1;
		
		private string _PR_LEGALADDRESS;
		
		private string _PR_POSTINDEX;
		
		private string _PR_LEGALPOSTINDEX;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<LT_V_Voucher> _LT_V_Vouchers;
		
		private EntityRef<LT_V_MappingPartner> _LT_V_MappingPartner;
		
		private EntitySet<TurService> _TurServices;
		
		private EntityRef<CityDictionary> _CityDictionary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPR_KEYChanging(int value);
    partial void OnPR_KEYChanged();
    partial void OnPR_FULLNAMEChanging(string value);
    partial void OnPR_FULLNAMEChanged();
    partial void OnPR_NAMEChanging(string value);
    partial void OnPR_NAMEChanged();
    partial void OnPR_NAMEENGChanging(string value);
    partial void OnPR_NAMEENGChanged();
    partial void OnPR_ADRESSChanging(string value);
    partial void OnPR_ADRESSChanged();
    partial void OnPR_PHONESChanging(string value);
    partial void OnPR_PHONESChanged();
    partial void OnPR_FAXChanging(string value);
    partial void OnPR_FAXChanged();
    partial void OnPR_EMAILChanging(string value);
    partial void OnPR_EMAILChanged();
    partial void OnPR_CTKEYChanging(System.Nullable<int> value);
    partial void OnPR_CTKEYChanged();
    partial void OnPR_FAX1Changing(string value);
    partial void OnPR_FAX1Changed();
    partial void OnPR_LEGALADDRESSChanging(string value);
    partial void OnPR_LEGALADDRESSChanged();
    partial void OnPR_POSTINDEXChanging(string value);
    partial void OnPR_POSTINDEXChanged();
    partial void OnPR_LEGALPOSTINDEXChanging(string value);
    partial void OnPR_LEGALPOSTINDEXChanged();
    #endregion
		
		public tbl_Partner()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._LT_V_Vouchers = new EntitySet<LT_V_Voucher>(new Action<LT_V_Voucher>(this.attach_LT_V_Vouchers), new Action<LT_V_Voucher>(this.detach_LT_V_Vouchers));
			this._LT_V_MappingPartner = default(EntityRef<LT_V_MappingPartner>);
			this._TurServices = new EntitySet<TurService>(new Action<TurService>(this.attach_TurServices), new Action<TurService>(this.detach_TurServices));
			this._CityDictionary = default(EntityRef<CityDictionary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int PR_KEY
		{
			get
			{
				return this._PR_KEY;
			}
			set
			{
				if ((this._PR_KEY != value))
				{
					this.OnPR_KEYChanging(value);
					this.SendPropertyChanging();
					this._PR_KEY = value;
					this.SendPropertyChanged("PR_KEY");
					this.OnPR_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_FULLNAME", DbType="VarChar(160)", UpdateCheck=UpdateCheck.Never)]
		public string PR_FULLNAME
		{
			get
			{
				return this._PR_FULLNAME;
			}
			set
			{
				if ((this._PR_FULLNAME != value))
				{
					this.OnPR_FULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._PR_FULLNAME = value;
					this.SendPropertyChanged("PR_FULLNAME");
					this.OnPR_FULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PR_NAME
		{
			get
			{
				return this._PR_NAME;
			}
			set
			{
				if ((this._PR_NAME != value))
				{
					this.OnPR_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PR_NAME = value;
					this.SendPropertyChanged("PR_NAME");
					this.OnPR_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_NAMEENG", DbType="VarChar(80)", UpdateCheck=UpdateCheck.Never)]
		public string PR_NAMEENG
		{
			get
			{
				return this._PR_NAMEENG;
			}
			set
			{
				if ((this._PR_NAMEENG != value))
				{
					this.OnPR_NAMEENGChanging(value);
					this.SendPropertyChanging();
					this._PR_NAMEENG = value;
					this.SendPropertyChanged("PR_NAMEENG");
					this.OnPR_NAMEENGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_ADRESS", DbType="VarChar(160)", UpdateCheck=UpdateCheck.Never)]
		public string PR_ADRESS
		{
			get
			{
				return this._PR_ADRESS;
			}
			set
			{
				if ((this._PR_ADRESS != value))
				{
					this.OnPR_ADRESSChanging(value);
					this.SendPropertyChanging();
					this._PR_ADRESS = value;
					this.SendPropertyChanged("PR_ADRESS");
					this.OnPR_ADRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_PHONES", DbType="VarChar(254)", UpdateCheck=UpdateCheck.Never)]
		public string PR_PHONES
		{
			get
			{
				return this._PR_PHONES;
			}
			set
			{
				if ((this._PR_PHONES != value))
				{
					this.OnPR_PHONESChanging(value);
					this.SendPropertyChanging();
					this._PR_PHONES = value;
					this.SendPropertyChanged("PR_PHONES");
					this.OnPR_PHONESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_FAX", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string PR_FAX
		{
			get
			{
				return this._PR_FAX;
			}
			set
			{
				if ((this._PR_FAX != value))
				{
					this.OnPR_FAXChanging(value);
					this.SendPropertyChanging();
					this._PR_FAX = value;
					this.SendPropertyChanged("PR_FAX");
					this.OnPR_FAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_EMAIL", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PR_EMAIL
		{
			get
			{
				return this._PR_EMAIL;
			}
			set
			{
				if ((this._PR_EMAIL != value))
				{
					this.OnPR_EMAILChanging(value);
					this.SendPropertyChanging();
					this._PR_EMAIL = value;
					this.SendPropertyChanged("PR_EMAIL");
					this.OnPR_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_CTKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PR_CTKEY
		{
			get
			{
				return this._PR_CTKEY;
			}
			set
			{
				if ((this._PR_CTKEY != value))
				{
					if (this._CityDictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPR_CTKEYChanging(value);
					this.SendPropertyChanging();
					this._PR_CTKEY = value;
					this.SendPropertyChanged("PR_CTKEY");
					this.OnPR_CTKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_FAX1", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string PR_FAX1
		{
			get
			{
				return this._PR_FAX1;
			}
			set
			{
				if ((this._PR_FAX1 != value))
				{
					this.OnPR_FAX1Changing(value);
					this.SendPropertyChanging();
					this._PR_FAX1 = value;
					this.SendPropertyChanged("PR_FAX1");
					this.OnPR_FAX1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_LEGALADDRESS", DbType="VarChar(160)", UpdateCheck=UpdateCheck.Never)]
		public string PR_LEGALADDRESS
		{
			get
			{
				return this._PR_LEGALADDRESS;
			}
			set
			{
				if ((this._PR_LEGALADDRESS != value))
				{
					this.OnPR_LEGALADDRESSChanging(value);
					this.SendPropertyChanging();
					this._PR_LEGALADDRESS = value;
					this.SendPropertyChanged("PR_LEGALADDRESS");
					this.OnPR_LEGALADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_POSTINDEX", DbType="VarChar(6)", UpdateCheck=UpdateCheck.Never)]
		public string PR_POSTINDEX
		{
			get
			{
				return this._PR_POSTINDEX;
			}
			set
			{
				if ((this._PR_POSTINDEX != value))
				{
					this.OnPR_POSTINDEXChanging(value);
					this.SendPropertyChanging();
					this._PR_POSTINDEX = value;
					this.SendPropertyChanged("PR_POSTINDEX");
					this.OnPR_POSTINDEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR_LEGALPOSTINDEX", DbType="VarChar(6)", UpdateCheck=UpdateCheck.Never)]
		public string PR_LEGALPOSTINDEX
		{
			get
			{
				return this._PR_LEGALPOSTINDEX;
			}
			set
			{
				if ((this._PR_LEGALPOSTINDEX != value))
				{
					this.OnPR_LEGALPOSTINDEXChanging(value);
					this.SendPropertyChanging();
					this._PR_LEGALPOSTINDEX = value;
					this.SendPropertyChanged("PR_LEGALPOSTINDEX");
					this.OnPR_LEGALPOSTINDEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Partner_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="PR_KEY", OtherKey="DL_PARTNERKEY")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Partner_LT_V_Voucher", Storage="_LT_V_Vouchers", ThisKey="PR_KEY", OtherKey="V_PRKey")]
		public EntitySet<LT_V_Voucher> LT_V_Vouchers
		{
			get
			{
				return this._LT_V_Vouchers;
			}
			set
			{
				this._LT_V_Vouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Partner_LT_V_MappingPartner", Storage="_LT_V_MappingPartner", ThisKey="PR_KEY", OtherKey="VMP_PRKey", IsUnique=true, IsForeignKey=false)]
		public LT_V_MappingPartner LT_V_MappingPartner
		{
			get
			{
				return this._LT_V_MappingPartner.Entity;
			}
			set
			{
				LT_V_MappingPartner previousValue = this._LT_V_MappingPartner.Entity;
				if (((previousValue != value) 
							|| (this._LT_V_MappingPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LT_V_MappingPartner.Entity = null;
						previousValue.tbl_Partner = null;
					}
					this._LT_V_MappingPartner.Entity = value;
					if ((value != null))
					{
						value.tbl_Partner = this;
					}
					this.SendPropertyChanged("LT_V_MappingPartner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Partner_TurService", Storage="_TurServices", ThisKey="PR_KEY", OtherKey="TS_PARTNERKEY")]
		public EntitySet<TurService> TurServices
		{
			get
			{
				return this._TurServices;
			}
			set
			{
				this._TurServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityDictionary_tbl_Partner", Storage="_CityDictionary", ThisKey="PR_CTKEY", OtherKey="CT_KEY", IsForeignKey=true)]
		public CityDictionary CityDictionary
		{
			get
			{
				return this._CityDictionary.Entity;
			}
			set
			{
				CityDictionary previousValue = this._CityDictionary.Entity;
				if (((previousValue != value) 
							|| (this._CityDictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CityDictionary.Entity = null;
						previousValue.tbl_Partners.Remove(this);
					}
					this._CityDictionary.Entity = value;
					if ((value != null))
					{
						value.tbl_Partners.Add(this);
						this._PR_CTKEY = value.CT_KEY;
					}
					else
					{
						this._PR_CTKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("CityDictionary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Partner = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Partner = null;
		}
		
		private void attach_LT_V_Vouchers(LT_V_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Partner = this;
		}
		
		private void detach_LT_V_Vouchers(LT_V_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Partner = null;
		}
		
		private void attach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Partner = this;
		}
		
		private void detach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Partner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Country")]
	public partial class tbl_Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CN_KEY;
		
		private string _CN_NAME;
		
		private string _CN_NAMELAT;
		
		private EntitySet<tbl_Dogovor> _tbl_Dogovors;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<tbl_TurList> _tbl_TurLists;
		
		private EntitySet<CityDictionary> _CityDictionaries;
		
		private EntitySet<LT_V_Voucher> _LT_V_Vouchers;
		
		private EntityRef<COUNTRY> _COUNTRY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCN_KEYChanging(int value);
    partial void OnCN_KEYChanged();
    partial void OnCN_NAMEChanging(string value);
    partial void OnCN_NAMEChanged();
    partial void OnCN_NAMELATChanging(string value);
    partial void OnCN_NAMELATChanged();
    #endregion
		
		public tbl_Country()
		{
			this._tbl_Dogovors = new EntitySet<tbl_Dogovor>(new Action<tbl_Dogovor>(this.attach_tbl_Dogovors), new Action<tbl_Dogovor>(this.detach_tbl_Dogovors));
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._tbl_TurLists = new EntitySet<tbl_TurList>(new Action<tbl_TurList>(this.attach_tbl_TurLists), new Action<tbl_TurList>(this.detach_tbl_TurLists));
			this._CityDictionaries = new EntitySet<CityDictionary>(new Action<CityDictionary>(this.attach_CityDictionaries), new Action<CityDictionary>(this.detach_CityDictionaries));
			this._LT_V_Vouchers = new EntitySet<LT_V_Voucher>(new Action<LT_V_Voucher>(this.attach_LT_V_Vouchers), new Action<LT_V_Voucher>(this.detach_LT_V_Vouchers));
			this._COUNTRY = default(EntityRef<COUNTRY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CN_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int CN_KEY
		{
			get
			{
				return this._CN_KEY;
			}
			set
			{
				if ((this._CN_KEY != value))
				{
					if (this._COUNTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCN_KEYChanging(value);
					this.SendPropertyChanging();
					this._CN_KEY = value;
					this.SendPropertyChanged("CN_KEY");
					this.OnCN_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CN_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CN_NAME
		{
			get
			{
				return this._CN_NAME;
			}
			set
			{
				if ((this._CN_NAME != value))
				{
					this.OnCN_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CN_NAME = value;
					this.SendPropertyChanged("CN_NAME");
					this.OnCN_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CN_NAMELAT", DbType="VarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string CN_NAMELAT
		{
			get
			{
				return this._CN_NAMELAT;
			}
			set
			{
				if ((this._CN_NAMELAT != value))
				{
					this.OnCN_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._CN_NAMELAT = value;
					this.SendPropertyChanged("CN_NAMELAT");
					this.OnCN_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Country_tbl_Dogovor", Storage="_tbl_Dogovors", ThisKey="CN_KEY", OtherKey="DG_CNKEY")]
		public EntitySet<tbl_Dogovor> tbl_Dogovors
		{
			get
			{
				return this._tbl_Dogovors;
			}
			set
			{
				this._tbl_Dogovors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Country_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="CN_KEY", OtherKey="DL_CNKEY")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Country_tbl_TurList", Storage="_tbl_TurLists", ThisKey="CN_KEY", OtherKey="TL_CNKEY")]
		public EntitySet<tbl_TurList> tbl_TurLists
		{
			get
			{
				return this._tbl_TurLists;
			}
			set
			{
				this._tbl_TurLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Country_CityDictionary", Storage="_CityDictionaries", ThisKey="CN_KEY", OtherKey="CT_CNKEY")]
		public EntitySet<CityDictionary> CityDictionaries
		{
			get
			{
				return this._CityDictionaries;
			}
			set
			{
				this._CityDictionaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Country_LT_V_Voucher", Storage="_LT_V_Vouchers", ThisKey="CN_KEY", OtherKey="V_CNKey")]
		public EntitySet<LT_V_Voucher> LT_V_Vouchers
		{
			get
			{
				return this._LT_V_Vouchers;
			}
			set
			{
				this._LT_V_Vouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_tbl_Country", Storage="_COUNTRY", ThisKey="CN_KEY", OtherKey="CN_KEY", IsForeignKey=true)]
		public COUNTRY COUNTRY
		{
			get
			{
				return this._COUNTRY.Entity;
			}
			set
			{
				COUNTRY previousValue = this._COUNTRY.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRY.Entity = null;
						previousValue.tbl_Country = null;
					}
					this._COUNTRY.Entity = value;
					if ((value != null))
					{
						value.tbl_Country = this;
						this._CN_KEY = value.CN_KEY;
					}
					else
					{
						this._CN_KEY = default(int);
					}
					this.SendPropertyChanged("COUNTRY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Dogovors(tbl_Dogovor entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Country = this;
		}
		
		private void detach_tbl_Dogovors(tbl_Dogovor entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Country = null;
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Country = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Country = null;
		}
		
		private void attach_tbl_TurLists(tbl_TurList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Country = this;
		}
		
		private void detach_tbl_TurLists(tbl_TurList entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Country = null;
		}
		
		private void attach_CityDictionaries(CityDictionary entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Country = this;
		}
		
		private void detach_CityDictionaries(CityDictionary entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Country = null;
		}
		
		private void attach_LT_V_Vouchers(LT_V_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Country = this;
		}
		
		private void detach_LT_V_Vouchers(LT_V_Voucher entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CityDictionary")]
	public partial class CityDictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CT_CNKEY;
		
		private int _CT_KEY;
		
		private string _CT_NAME;
		
		private string _CT_NAMELAT;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<tbl_Partner> _tbl_Partners;
		
		private EntitySet<HotelDictionary> _HotelDictionaries;
		
		private EntityRef<tbl_Country> _tbl_Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCT_CNKEYChanging(int value);
    partial void OnCT_CNKEYChanged();
    partial void OnCT_KEYChanging(int value);
    partial void OnCT_KEYChanged();
    partial void OnCT_NAMEChanging(string value);
    partial void OnCT_NAMEChanged();
    partial void OnCT_NAMELATChanging(string value);
    partial void OnCT_NAMELATChanged();
    #endregion
		
		public CityDictionary()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._tbl_Partners = new EntitySet<tbl_Partner>(new Action<tbl_Partner>(this.attach_tbl_Partners), new Action<tbl_Partner>(this.detach_tbl_Partners));
			this._HotelDictionaries = new EntitySet<HotelDictionary>(new Action<HotelDictionary>(this.attach_HotelDictionaries), new Action<HotelDictionary>(this.detach_HotelDictionaries));
			this._tbl_Country = default(EntityRef<tbl_Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CT_CNKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CT_CNKEY
		{
			get
			{
				return this._CT_CNKEY;
			}
			set
			{
				if ((this._CT_CNKEY != value))
				{
					if (this._tbl_Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCT_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._CT_CNKEY = value;
					this.SendPropertyChanged("CT_CNKEY");
					this.OnCT_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CT_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int CT_KEY
		{
			get
			{
				return this._CT_KEY;
			}
			set
			{
				if ((this._CT_KEY != value))
				{
					this.OnCT_KEYChanging(value);
					this.SendPropertyChanging();
					this._CT_KEY = value;
					this.SendPropertyChanged("CT_KEY");
					this.OnCT_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CT_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CT_NAME
		{
			get
			{
				return this._CT_NAME;
			}
			set
			{
				if ((this._CT_NAME != value))
				{
					this.OnCT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CT_NAME = value;
					this.SendPropertyChanged("CT_NAME");
					this.OnCT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CT_NAMELAT", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CT_NAMELAT
		{
			get
			{
				return this._CT_NAMELAT;
			}
			set
			{
				if ((this._CT_NAMELAT != value))
				{
					this.OnCT_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._CT_NAMELAT = value;
					this.SendPropertyChanged("CT_NAMELAT");
					this.OnCT_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityDictionary_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="CT_KEY", OtherKey="DL_CTKEY")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityDictionary_tbl_Partner", Storage="_tbl_Partners", ThisKey="CT_KEY", OtherKey="PR_CTKEY")]
		public EntitySet<tbl_Partner> tbl_Partners
		{
			get
			{
				return this._tbl_Partners;
			}
			set
			{
				this._tbl_Partners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityDictionary_HotelDictionary", Storage="_HotelDictionaries", ThisKey="CT_KEY", OtherKey="HD_CTKEY")]
		public EntitySet<HotelDictionary> HotelDictionaries
		{
			get
			{
				return this._HotelDictionaries;
			}
			set
			{
				this._HotelDictionaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Country_CityDictionary", Storage="_tbl_Country", ThisKey="CT_CNKEY", OtherKey="CN_KEY", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Country tbl_Country
		{
			get
			{
				return this._tbl_Country.Entity;
			}
			set
			{
				tbl_Country previousValue = this._tbl_Country.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Country.Entity = null;
						previousValue.CityDictionaries.Remove(this);
					}
					this._tbl_Country.Entity = value;
					if ((value != null))
					{
						value.CityDictionaries.Add(this);
						this._CT_CNKEY = value.CN_KEY;
					}
					else
					{
						this._CT_CNKEY = default(int);
					}
					this.SendPropertyChanged("tbl_Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.CityDictionary = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.CityDictionary = null;
		}
		
		private void attach_tbl_Partners(tbl_Partner entity)
		{
			this.SendPropertyChanging();
			entity.CityDictionary = this;
		}
		
		private void detach_tbl_Partners(tbl_Partner entity)
		{
			this.SendPropertyChanging();
			entity.CityDictionary = null;
		}
		
		private void attach_HotelDictionaries(HotelDictionary entity)
		{
			this.SendPropertyChanging();
			entity.CityDictionary = this;
		}
		
		private void detach_HotelDictionaries(HotelDictionary entity)
		{
			this.SendPropertyChanging();
			entity.CityDictionary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Charter")]
	public partial class Charter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CH_KEY;
		
		private int _CH_CITYKEYFROM;
		
		private string _CH_PORTCODEFROM;
		
		private int _CH_CITYKEYTO;
		
		private string _CH_PORTCODETO;
		
		private System.Nullable<System.DateTime> _CH_DATEFROM;
		
		private System.Nullable<System.DateTime> _CH_DATETO;
		
		private string _CH_DAYS;
		
		private System.Nullable<System.DateTime> _CH_TIMEFROM;
		
		private System.Nullable<System.DateTime> _CH_TIMETO;
		
		private System.Nullable<double> _CH_NEXTDAYARRIV;
		
		private string _CH_AIRLINECODE;
		
		private string _CH_FLIGHT;
		
		private string _CH_AIRCRAFT;
		
		private string _CH_SERVICE;
		
		private System.Nullable<short> _CH_STOPS;
		
		private string _CH_TIMECHANGES;
		
		private System.Data.Linq.Binary _ROWID;
		
		private string _CH_StdKey;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<AirSeason> _AirSeasons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCH_KEYChanging(int value);
    partial void OnCH_KEYChanged();
    partial void OnCH_CITYKEYFROMChanging(int value);
    partial void OnCH_CITYKEYFROMChanged();
    partial void OnCH_PORTCODEFROMChanging(string value);
    partial void OnCH_PORTCODEFROMChanged();
    partial void OnCH_CITYKEYTOChanging(int value);
    partial void OnCH_CITYKEYTOChanged();
    partial void OnCH_PORTCODETOChanging(string value);
    partial void OnCH_PORTCODETOChanged();
    partial void OnCH_DATEFROMChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_DATEFROMChanged();
    partial void OnCH_DATETOChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_DATETOChanged();
    partial void OnCH_DAYSChanging(string value);
    partial void OnCH_DAYSChanged();
    partial void OnCH_TIMEFROMChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_TIMEFROMChanged();
    partial void OnCH_TIMETOChanging(System.Nullable<System.DateTime> value);
    partial void OnCH_TIMETOChanged();
    partial void OnCH_NEXTDAYARRIVChanging(System.Nullable<double> value);
    partial void OnCH_NEXTDAYARRIVChanged();
    partial void OnCH_AIRLINECODEChanging(string value);
    partial void OnCH_AIRLINECODEChanged();
    partial void OnCH_FLIGHTChanging(string value);
    partial void OnCH_FLIGHTChanged();
    partial void OnCH_AIRCRAFTChanging(string value);
    partial void OnCH_AIRCRAFTChanged();
    partial void OnCH_SERVICEChanging(string value);
    partial void OnCH_SERVICEChanged();
    partial void OnCH_STOPSChanging(System.Nullable<short> value);
    partial void OnCH_STOPSChanged();
    partial void OnCH_TIMECHANGESChanging(string value);
    partial void OnCH_TIMECHANGESChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnCH_StdKeyChanging(string value);
    partial void OnCH_StdKeyChanged();
    #endregion
		
		public Charter()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._AirSeasons = new EntitySet<AirSeason>(new Action<AirSeason>(this.attach_AirSeasons), new Action<AirSeason>(this.detach_AirSeasons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int CH_KEY
		{
			get
			{
				return this._CH_KEY;
			}
			set
			{
				if ((this._CH_KEY != value))
				{
					this.OnCH_KEYChanging(value);
					this.SendPropertyChanging();
					this._CH_KEY = value;
					this.SendPropertyChanged("CH_KEY");
					this.OnCH_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_CITYKEYFROM", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CH_CITYKEYFROM
		{
			get
			{
				return this._CH_CITYKEYFROM;
			}
			set
			{
				if ((this._CH_CITYKEYFROM != value))
				{
					this.OnCH_CITYKEYFROMChanging(value);
					this.SendPropertyChanging();
					this._CH_CITYKEYFROM = value;
					this.SendPropertyChanged("CH_CITYKEYFROM");
					this.OnCH_CITYKEYFROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_PORTCODEFROM", DbType="VarChar(4)", UpdateCheck=UpdateCheck.Never)]
		public string CH_PORTCODEFROM
		{
			get
			{
				return this._CH_PORTCODEFROM;
			}
			set
			{
				if ((this._CH_PORTCODEFROM != value))
				{
					this.OnCH_PORTCODEFROMChanging(value);
					this.SendPropertyChanging();
					this._CH_PORTCODEFROM = value;
					this.SendPropertyChanged("CH_PORTCODEFROM");
					this.OnCH_PORTCODEFROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_CITYKEYTO", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CH_CITYKEYTO
		{
			get
			{
				return this._CH_CITYKEYTO;
			}
			set
			{
				if ((this._CH_CITYKEYTO != value))
				{
					this.OnCH_CITYKEYTOChanging(value);
					this.SendPropertyChanging();
					this._CH_CITYKEYTO = value;
					this.SendPropertyChanged("CH_CITYKEYTO");
					this.OnCH_CITYKEYTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_PORTCODETO", DbType="VarChar(4)", UpdateCheck=UpdateCheck.Never)]
		public string CH_PORTCODETO
		{
			get
			{
				return this._CH_PORTCODETO;
			}
			set
			{
				if ((this._CH_PORTCODETO != value))
				{
					this.OnCH_PORTCODETOChanging(value);
					this.SendPropertyChanging();
					this._CH_PORTCODETO = value;
					this.SendPropertyChanged("CH_PORTCODETO");
					this.OnCH_PORTCODETOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_DATEFROM", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CH_DATEFROM
		{
			get
			{
				return this._CH_DATEFROM;
			}
			set
			{
				if ((this._CH_DATEFROM != value))
				{
					this.OnCH_DATEFROMChanging(value);
					this.SendPropertyChanging();
					this._CH_DATEFROM = value;
					this.SendPropertyChanged("CH_DATEFROM");
					this.OnCH_DATEFROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_DATETO", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CH_DATETO
		{
			get
			{
				return this._CH_DATETO;
			}
			set
			{
				if ((this._CH_DATETO != value))
				{
					this.OnCH_DATETOChanging(value);
					this.SendPropertyChanging();
					this._CH_DATETO = value;
					this.SendPropertyChanged("CH_DATETO");
					this.OnCH_DATETOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_DAYS", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string CH_DAYS
		{
			get
			{
				return this._CH_DAYS;
			}
			set
			{
				if ((this._CH_DAYS != value))
				{
					this.OnCH_DAYSChanging(value);
					this.SendPropertyChanging();
					this._CH_DAYS = value;
					this.SendPropertyChanged("CH_DAYS");
					this.OnCH_DAYSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TIMEFROM", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CH_TIMEFROM
		{
			get
			{
				return this._CH_TIMEFROM;
			}
			set
			{
				if ((this._CH_TIMEFROM != value))
				{
					this.OnCH_TIMEFROMChanging(value);
					this.SendPropertyChanging();
					this._CH_TIMEFROM = value;
					this.SendPropertyChanged("CH_TIMEFROM");
					this.OnCH_TIMEFROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TIMETO", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CH_TIMETO
		{
			get
			{
				return this._CH_TIMETO;
			}
			set
			{
				if ((this._CH_TIMETO != value))
				{
					this.OnCH_TIMETOChanging(value);
					this.SendPropertyChanging();
					this._CH_TIMETO = value;
					this.SendPropertyChanged("CH_TIMETO");
					this.OnCH_TIMETOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_NEXTDAYARRIV", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> CH_NEXTDAYARRIV
		{
			get
			{
				return this._CH_NEXTDAYARRIV;
			}
			set
			{
				if ((this._CH_NEXTDAYARRIV != value))
				{
					this.OnCH_NEXTDAYARRIVChanging(value);
					this.SendPropertyChanging();
					this._CH_NEXTDAYARRIV = value;
					this.SendPropertyChanged("CH_NEXTDAYARRIV");
					this.OnCH_NEXTDAYARRIVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_AIRLINECODE", DbType="VarChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string CH_AIRLINECODE
		{
			get
			{
				return this._CH_AIRLINECODE;
			}
			set
			{
				if ((this._CH_AIRLINECODE != value))
				{
					this.OnCH_AIRLINECODEChanging(value);
					this.SendPropertyChanging();
					this._CH_AIRLINECODE = value;
					this.SendPropertyChanged("CH_AIRLINECODE");
					this.OnCH_AIRLINECODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_FLIGHT", DbType="VarChar(4) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CH_FLIGHT
		{
			get
			{
				return this._CH_FLIGHT;
			}
			set
			{
				if ((this._CH_FLIGHT != value))
				{
					this.OnCH_FLIGHTChanging(value);
					this.SendPropertyChanging();
					this._CH_FLIGHT = value;
					this.SendPropertyChanged("CH_FLIGHT");
					this.OnCH_FLIGHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_AIRCRAFT", DbType="VarChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string CH_AIRCRAFT
		{
			get
			{
				return this._CH_AIRCRAFT;
			}
			set
			{
				if ((this._CH_AIRCRAFT != value))
				{
					this.OnCH_AIRCRAFTChanging(value);
					this.SendPropertyChanging();
					this._CH_AIRCRAFT = value;
					this.SendPropertyChanged("CH_AIRCRAFT");
					this.OnCH_AIRCRAFTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_SERVICE", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string CH_SERVICE
		{
			get
			{
				return this._CH_SERVICE;
			}
			set
			{
				if ((this._CH_SERVICE != value))
				{
					this.OnCH_SERVICEChanging(value);
					this.SendPropertyChanging();
					this._CH_SERVICE = value;
					this.SendPropertyChanged("CH_SERVICE");
					this.OnCH_SERVICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_STOPS", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> CH_STOPS
		{
			get
			{
				return this._CH_STOPS;
			}
			set
			{
				if ((this._CH_STOPS != value))
				{
					this.OnCH_STOPSChanging(value);
					this.SendPropertyChanging();
					this._CH_STOPS = value;
					this.SendPropertyChanged("CH_STOPS");
					this.OnCH_STOPSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TIMECHANGES", DbType="VarChar(1)", UpdateCheck=UpdateCheck.Never)]
		public string CH_TIMECHANGES
		{
			get
			{
				return this._CH_TIMECHANGES;
			}
			set
			{
				if ((this._CH_TIMECHANGES != value))
				{
					this.OnCH_TIMECHANGESChanging(value);
					this.SendPropertyChanging();
					this._CH_TIMECHANGES = value;
					this.SendPropertyChanged("CH_TIMECHANGES");
					this.OnCH_TIMECHANGESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string CH_StdKey
		{
			get
			{
				return this._CH_StdKey;
			}
			set
			{
				if ((this._CH_StdKey != value))
				{
					this.OnCH_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._CH_StdKey = value;
					this.SendPropertyChanged("CH_StdKey");
					this.OnCH_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Charter_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="CH_KEY", OtherKey="DL_CODE")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Charter_AirSeason", Storage="_AirSeasons", ThisKey="CH_KEY", OtherKey="AS_CHKEY")]
		public EntitySet<AirSeason> AirSeasons
		{
			get
			{
				return this._AirSeasons;
			}
			set
			{
				this._AirSeasons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.Charter = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.Charter = null;
		}
		
		private void attach_AirSeasons(AirSeason entity)
		{
			this.SendPropertyChanging();
			entity.Charter = this;
		}
		
		private void detach_AirSeasons(AirSeason entity)
		{
			this.SendPropertyChanging();
			entity.Charter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AirSeason")]
	public partial class AirSeason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AS_CHKEY;
		
		private System.Nullable<System.DateTime> _AS_DATEFROM;
		
		private System.Nullable<System.DateTime> _AS_DATETO;
		
		private string _AS_WEEK;
		
		private System.Nullable<System.DateTime> _AS_TIMEFROM;
		
		private System.Nullable<System.DateTime> _AS_TIMETO;
		
		private System.Data.Linq.Binary _ROWID;
		
		private System.Nullable<short> _AS_NextDayArriv;
		
		private int _AS_ID;
		
		private string _AS_Remark;
		
		private EntityRef<Charter> _Charter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAS_CHKEYChanging(int value);
    partial void OnAS_CHKEYChanged();
    partial void OnAS_DATEFROMChanging(System.Nullable<System.DateTime> value);
    partial void OnAS_DATEFROMChanged();
    partial void OnAS_DATETOChanging(System.Nullable<System.DateTime> value);
    partial void OnAS_DATETOChanged();
    partial void OnAS_WEEKChanging(string value);
    partial void OnAS_WEEKChanged();
    partial void OnAS_TIMEFROMChanging(System.Nullable<System.DateTime> value);
    partial void OnAS_TIMEFROMChanged();
    partial void OnAS_TIMETOChanging(System.Nullable<System.DateTime> value);
    partial void OnAS_TIMETOChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnAS_NextDayArrivChanging(System.Nullable<short> value);
    partial void OnAS_NextDayArrivChanged();
    partial void OnAS_IDChanging(int value);
    partial void OnAS_IDChanged();
    partial void OnAS_RemarkChanging(string value);
    partial void OnAS_RemarkChanged();
    #endregion
		
		public AirSeason()
		{
			this._Charter = default(EntityRef<Charter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_CHKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int AS_CHKEY
		{
			get
			{
				return this._AS_CHKEY;
			}
			set
			{
				if ((this._AS_CHKEY != value))
				{
					if (this._Charter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAS_CHKEYChanging(value);
					this.SendPropertyChanging();
					this._AS_CHKEY = value;
					this.SendPropertyChanged("AS_CHKEY");
					this.OnAS_CHKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_DATEFROM", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AS_DATEFROM
		{
			get
			{
				return this._AS_DATEFROM;
			}
			set
			{
				if ((this._AS_DATEFROM != value))
				{
					this.OnAS_DATEFROMChanging(value);
					this.SendPropertyChanging();
					this._AS_DATEFROM = value;
					this.SendPropertyChanged("AS_DATEFROM");
					this.OnAS_DATEFROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_DATETO", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AS_DATETO
		{
			get
			{
				return this._AS_DATETO;
			}
			set
			{
				if ((this._AS_DATETO != value))
				{
					this.OnAS_DATETOChanging(value);
					this.SendPropertyChanging();
					this._AS_DATETO = value;
					this.SendPropertyChanged("AS_DATETO");
					this.OnAS_DATETOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_WEEK", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string AS_WEEK
		{
			get
			{
				return this._AS_WEEK;
			}
			set
			{
				if ((this._AS_WEEK != value))
				{
					this.OnAS_WEEKChanging(value);
					this.SendPropertyChanging();
					this._AS_WEEK = value;
					this.SendPropertyChanged("AS_WEEK");
					this.OnAS_WEEKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_TIMEFROM", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AS_TIMEFROM
		{
			get
			{
				return this._AS_TIMEFROM;
			}
			set
			{
				if ((this._AS_TIMEFROM != value))
				{
					this.OnAS_TIMEFROMChanging(value);
					this.SendPropertyChanging();
					this._AS_TIMEFROM = value;
					this.SendPropertyChanged("AS_TIMEFROM");
					this.OnAS_TIMEFROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_TIMETO", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AS_TIMETO
		{
			get
			{
				return this._AS_TIMETO;
			}
			set
			{
				if ((this._AS_TIMETO != value))
				{
					this.OnAS_TIMETOChanging(value);
					this.SendPropertyChanging();
					this._AS_TIMETO = value;
					this.SendPropertyChanged("AS_TIMETO");
					this.OnAS_TIMETOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_NextDayArriv", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> AS_NextDayArriv
		{
			get
			{
				return this._AS_NextDayArriv;
			}
			set
			{
				if ((this._AS_NextDayArriv != value))
				{
					this.OnAS_NextDayArrivChanging(value);
					this.SendPropertyChanging();
					this._AS_NextDayArriv = value;
					this.SendPropertyChanged("AS_NextDayArriv");
					this.OnAS_NextDayArrivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int AS_ID
		{
			get
			{
				return this._AS_ID;
			}
			set
			{
				if ((this._AS_ID != value))
				{
					this.OnAS_IDChanging(value);
					this.SendPropertyChanging();
					this._AS_ID = value;
					this.SendPropertyChanged("AS_ID");
					this.OnAS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AS_Remark", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string AS_Remark
		{
			get
			{
				return this._AS_Remark;
			}
			set
			{
				if ((this._AS_Remark != value))
				{
					this.OnAS_RemarkChanging(value);
					this.SendPropertyChanging();
					this._AS_Remark = value;
					this.SendPropertyChanged("AS_Remark");
					this.OnAS_RemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Charter_AirSeason", Storage="_Charter", ThisKey="AS_CHKEY", OtherKey="CH_KEY", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Charter Charter
		{
			get
			{
				return this._Charter.Entity;
			}
			set
			{
				Charter previousValue = this._Charter.Entity;
				if (((previousValue != value) 
							|| (this._Charter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Charter.Entity = null;
						previousValue.AirSeasons.Remove(this);
					}
					this._Charter.Entity = value;
					if ((value != null))
					{
						value.AirSeasons.Add(this);
						this._AS_CHKEY = value.CH_KEY;
					}
					else
					{
						this._AS_CHKEY = default(int);
					}
					this.SendPropertyChanged("Charter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotelDictionary")]
	public partial class HotelDictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HD_CNKEY;
		
		private int _HD_CTKEY;
		
		private int _HD_KEY;
		
		private string _HD_NAME;
		
		private string _HD_STARS;
		
		private string _HD_ADDRESS;
		
		private string _HD_PHONE;
		
		private string _HD_FAX;
		
		private System.Nullable<short> _HD_SITE;
		
		private string _HD_DESCRIPT;
		
		private string _HD_PERSONNAME;
		
		private string _HD_PERSONAPP;
		
		private string _HD_CODE;
		
		private System.Nullable<int> _HD_RSKEY;
		
		private string _HD_EMAIL;
		
		private string _HD_HTTP;
		
		private string _HD_DESCROOM;
		
		private string _HD_DESCMEAL;
		
		private string _HD_DESCSERVICE;
		
		private string _HD_DESCSPORT;
		
		private string _HD_DESCEXCUR;
		
		private string _HD_DESCHEALTH;
		
		private System.Nullable<double> _HD_DISTANCE;
		
		private System.Nullable<int> _HD_WEB;
		
		private string _HD_DESCRAZVL;
		
		private string _HD_WEBIMAGE;
		
		private string _HD_WEBIMAGE1;
		
		private string _HD_WEBIMAGE2;
		
		private string _HD_WEBIMAGE3;
		
		private string _HD_WEBIMAGE4;
		
		private string _HD_WEBIMAGE5;
		
		private string _HD_WEBIMAGE6;
		
		private string _HD_WEBIMAGE7;
		
		private string _HD_WEBIMAGE8;
		
		private string _HD_REMARK;
		
		private string _HD_REMARK1;
		
		private string _HD_REMARK2;
		
		private string _HD_REMARK3;
		
		private string _HD_REMARK4;
		
		private string _HD_REMARK5;
		
		private string _HD_REMARK6;
		
		private string _HD_REMARK7;
		
		private string _HD_REMARK8;
		
		private System.Data.Linq.Binary _ROWID;
		
		private string _HD_StdKey;
		
		private System.DateTime _HD_UpdateDate;
		
		private string _HD_UNICODE;
		
		private System.Nullable<int> _HD_Order;
		
		private int _HD_IsCruise;
		
		private System.Nullable<int> _HD_COHId;
		
		private string _HD_NAMELAT;
		
		private System.Nullable<System.DateTime> _HD_PayHour1;
		
		private System.Nullable<System.DateTime> _HD_PayHour2;
		
		private string _HD_Travel;
		
		private string _HD_PayHourNote;
		
		private System.Nullable<System.DateTime> _HD_PayHour;
		
		private System.Nullable<int> _hd_rank;
		
		private string _HD_HTTPAdditional;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntityRef<Resort> _Resort;
		
		private EntityRef<CityDictionary> _CityDictionary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHD_CNKEYChanging(int value);
    partial void OnHD_CNKEYChanged();
    partial void OnHD_CTKEYChanging(int value);
    partial void OnHD_CTKEYChanged();
    partial void OnHD_KEYChanging(int value);
    partial void OnHD_KEYChanged();
    partial void OnHD_NAMEChanging(string value);
    partial void OnHD_NAMEChanged();
    partial void OnHD_STARSChanging(string value);
    partial void OnHD_STARSChanged();
    partial void OnHD_ADDRESSChanging(string value);
    partial void OnHD_ADDRESSChanged();
    partial void OnHD_PHONEChanging(string value);
    partial void OnHD_PHONEChanged();
    partial void OnHD_FAXChanging(string value);
    partial void OnHD_FAXChanged();
    partial void OnHD_SITEChanging(System.Nullable<short> value);
    partial void OnHD_SITEChanged();
    partial void OnHD_DESCRIPTChanging(string value);
    partial void OnHD_DESCRIPTChanged();
    partial void OnHD_PERSONNAMEChanging(string value);
    partial void OnHD_PERSONNAMEChanged();
    partial void OnHD_PERSONAPPChanging(string value);
    partial void OnHD_PERSONAPPChanged();
    partial void OnHD_CODEChanging(string value);
    partial void OnHD_CODEChanged();
    partial void OnHD_RSKEYChanging(System.Nullable<int> value);
    partial void OnHD_RSKEYChanged();
    partial void OnHD_EMAILChanging(string value);
    partial void OnHD_EMAILChanged();
    partial void OnHD_HTTPChanging(string value);
    partial void OnHD_HTTPChanged();
    partial void OnHD_DESCROOMChanging(string value);
    partial void OnHD_DESCROOMChanged();
    partial void OnHD_DESCMEALChanging(string value);
    partial void OnHD_DESCMEALChanged();
    partial void OnHD_DESCSERVICEChanging(string value);
    partial void OnHD_DESCSERVICEChanged();
    partial void OnHD_DESCSPORTChanging(string value);
    partial void OnHD_DESCSPORTChanged();
    partial void OnHD_DESCEXCURChanging(string value);
    partial void OnHD_DESCEXCURChanged();
    partial void OnHD_DESCHEALTHChanging(string value);
    partial void OnHD_DESCHEALTHChanged();
    partial void OnHD_DISTANCEChanging(System.Nullable<double> value);
    partial void OnHD_DISTANCEChanged();
    partial void OnHD_WEBChanging(System.Nullable<int> value);
    partial void OnHD_WEBChanged();
    partial void OnHD_DESCRAZVLChanging(string value);
    partial void OnHD_DESCRAZVLChanged();
    partial void OnHD_WEBIMAGEChanging(string value);
    partial void OnHD_WEBIMAGEChanged();
    partial void OnHD_WEBIMAGE1Changing(string value);
    partial void OnHD_WEBIMAGE1Changed();
    partial void OnHD_WEBIMAGE2Changing(string value);
    partial void OnHD_WEBIMAGE2Changed();
    partial void OnHD_WEBIMAGE3Changing(string value);
    partial void OnHD_WEBIMAGE3Changed();
    partial void OnHD_WEBIMAGE4Changing(string value);
    partial void OnHD_WEBIMAGE4Changed();
    partial void OnHD_WEBIMAGE5Changing(string value);
    partial void OnHD_WEBIMAGE5Changed();
    partial void OnHD_WEBIMAGE6Changing(string value);
    partial void OnHD_WEBIMAGE6Changed();
    partial void OnHD_WEBIMAGE7Changing(string value);
    partial void OnHD_WEBIMAGE7Changed();
    partial void OnHD_WEBIMAGE8Changing(string value);
    partial void OnHD_WEBIMAGE8Changed();
    partial void OnHD_REMARKChanging(string value);
    partial void OnHD_REMARKChanged();
    partial void OnHD_REMARK1Changing(string value);
    partial void OnHD_REMARK1Changed();
    partial void OnHD_REMARK2Changing(string value);
    partial void OnHD_REMARK2Changed();
    partial void OnHD_REMARK3Changing(string value);
    partial void OnHD_REMARK3Changed();
    partial void OnHD_REMARK4Changing(string value);
    partial void OnHD_REMARK4Changed();
    partial void OnHD_REMARK5Changing(string value);
    partial void OnHD_REMARK5Changed();
    partial void OnHD_REMARK6Changing(string value);
    partial void OnHD_REMARK6Changed();
    partial void OnHD_REMARK7Changing(string value);
    partial void OnHD_REMARK7Changed();
    partial void OnHD_REMARK8Changing(string value);
    partial void OnHD_REMARK8Changed();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnHD_StdKeyChanging(string value);
    partial void OnHD_StdKeyChanged();
    partial void OnHD_UpdateDateChanging(System.DateTime value);
    partial void OnHD_UpdateDateChanged();
    partial void OnHD_UNICODEChanging(string value);
    partial void OnHD_UNICODEChanged();
    partial void OnHD_OrderChanging(System.Nullable<int> value);
    partial void OnHD_OrderChanged();
    partial void OnHD_IsCruiseChanging(int value);
    partial void OnHD_IsCruiseChanged();
    partial void OnHD_COHIdChanging(System.Nullable<int> value);
    partial void OnHD_COHIdChanged();
    partial void OnHD_NAMELATChanging(string value);
    partial void OnHD_NAMELATChanged();
    partial void OnHD_PayHour1Changing(System.Nullable<System.DateTime> value);
    partial void OnHD_PayHour1Changed();
    partial void OnHD_PayHour2Changing(System.Nullable<System.DateTime> value);
    partial void OnHD_PayHour2Changed();
    partial void OnHD_TravelChanging(string value);
    partial void OnHD_TravelChanged();
    partial void OnHD_PayHourNoteChanging(string value);
    partial void OnHD_PayHourNoteChanged();
    partial void OnHD_PayHourChanging(System.Nullable<System.DateTime> value);
    partial void OnHD_PayHourChanged();
    partial void Onhd_rankChanging(System.Nullable<int> value);
    partial void Onhd_rankChanged();
    partial void OnHD_HTTPAdditionalChanging(string value);
    partial void OnHD_HTTPAdditionalChanged();
    #endregion
		
		public HotelDictionary()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._Resort = default(EntityRef<Resort>);
			this._CityDictionary = default(EntityRef<CityDictionary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_CNKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int HD_CNKEY
		{
			get
			{
				return this._HD_CNKEY;
			}
			set
			{
				if ((this._HD_CNKEY != value))
				{
					this.OnHD_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._HD_CNKEY = value;
					this.SendPropertyChanged("HD_CNKEY");
					this.OnHD_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_CTKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int HD_CTKEY
		{
			get
			{
				return this._HD_CTKEY;
			}
			set
			{
				if ((this._HD_CTKEY != value))
				{
					if (this._CityDictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHD_CTKEYChanging(value);
					this.SendPropertyChanging();
					this._HD_CTKEY = value;
					this.SendPropertyChanged("HD_CTKEY");
					this.OnHD_CTKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int HD_KEY
		{
			get
			{
				return this._HD_KEY;
			}
			set
			{
				if ((this._HD_KEY != value))
				{
					this.OnHD_KEYChanging(value);
					this.SendPropertyChanging();
					this._HD_KEY = value;
					this.SendPropertyChanged("HD_KEY");
					this.OnHD_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_NAME", DbType="VarChar(60) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HD_NAME
		{
			get
			{
				return this._HD_NAME;
			}
			set
			{
				if ((this._HD_NAME != value))
				{
					this.OnHD_NAMEChanging(value);
					this.SendPropertyChanging();
					this._HD_NAME = value;
					this.SendPropertyChanged("HD_NAME");
					this.OnHD_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_STARS", DbType="VarChar(12) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HD_STARS
		{
			get
			{
				return this._HD_STARS;
			}
			set
			{
				if ((this._HD_STARS != value))
				{
					this.OnHD_STARSChanging(value);
					this.SendPropertyChanging();
					this._HD_STARS = value;
					this.SendPropertyChanged("HD_STARS");
					this.OnHD_STARSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_ADDRESS", DbType="VarChar(254)", UpdateCheck=UpdateCheck.Never)]
		public string HD_ADDRESS
		{
			get
			{
				return this._HD_ADDRESS;
			}
			set
			{
				if ((this._HD_ADDRESS != value))
				{
					this.OnHD_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._HD_ADDRESS = value;
					this.SendPropertyChanged("HD_ADDRESS");
					this.OnHD_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_PHONE", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HD_PHONE
		{
			get
			{
				return this._HD_PHONE;
			}
			set
			{
				if ((this._HD_PHONE != value))
				{
					this.OnHD_PHONEChanging(value);
					this.SendPropertyChanging();
					this._HD_PHONE = value;
					this.SendPropertyChanged("HD_PHONE");
					this.OnHD_PHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_FAX", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string HD_FAX
		{
			get
			{
				return this._HD_FAX;
			}
			set
			{
				if ((this._HD_FAX != value))
				{
					this.OnHD_FAXChanging(value);
					this.SendPropertyChanging();
					this._HD_FAX = value;
					this.SendPropertyChanged("HD_FAX");
					this.OnHD_FAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_SITE", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> HD_SITE
		{
			get
			{
				return this._HD_SITE;
			}
			set
			{
				if ((this._HD_SITE != value))
				{
					this.OnHD_SITEChanging(value);
					this.SendPropertyChanging();
					this._HD_SITE = value;
					this.SendPropertyChanged("HD_SITE");
					this.OnHD_SITEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_DESCRIPT", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HD_DESCRIPT
		{
			get
			{
				return this._HD_DESCRIPT;
			}
			set
			{
				if ((this._HD_DESCRIPT != value))
				{
					this.OnHD_DESCRIPTChanging(value);
					this.SendPropertyChanging();
					this._HD_DESCRIPT = value;
					this.SendPropertyChanged("HD_DESCRIPT");
					this.OnHD_DESCRIPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_PERSONNAME", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HD_PERSONNAME
		{
			get
			{
				return this._HD_PERSONNAME;
			}
			set
			{
				if ((this._HD_PERSONNAME != value))
				{
					this.OnHD_PERSONNAMEChanging(value);
					this.SendPropertyChanging();
					this._HD_PERSONNAME = value;
					this.SendPropertyChanged("HD_PERSONNAME");
					this.OnHD_PERSONNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_PERSONAPP", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HD_PERSONAPP
		{
			get
			{
				return this._HD_PERSONAPP;
			}
			set
			{
				if ((this._HD_PERSONAPP != value))
				{
					this.OnHD_PERSONAPPChanging(value);
					this.SendPropertyChanging();
					this._HD_PERSONAPP = value;
					this.SendPropertyChanged("HD_PERSONAPP");
					this.OnHD_PERSONAPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_CODE", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string HD_CODE
		{
			get
			{
				return this._HD_CODE;
			}
			set
			{
				if ((this._HD_CODE != value))
				{
					this.OnHD_CODEChanging(value);
					this.SendPropertyChanging();
					this._HD_CODE = value;
					this.SendPropertyChanged("HD_CODE");
					this.OnHD_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_RSKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HD_RSKEY
		{
			get
			{
				return this._HD_RSKEY;
			}
			set
			{
				if ((this._HD_RSKEY != value))
				{
					if (this._Resort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHD_RSKEYChanging(value);
					this.SendPropertyChanging();
					this._HD_RSKEY = value;
					this.SendPropertyChanged("HD_RSKEY");
					this.OnHD_RSKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_EMAIL", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HD_EMAIL
		{
			get
			{
				return this._HD_EMAIL;
			}
			set
			{
				if ((this._HD_EMAIL != value))
				{
					this.OnHD_EMAILChanging(value);
					this.SendPropertyChanging();
					this._HD_EMAIL = value;
					this.SendPropertyChanged("HD_EMAIL");
					this.OnHD_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_HTTP", DbType="VarChar(254)", UpdateCheck=UpdateCheck.Never)]
		public string HD_HTTP
		{
			get
			{
				return this._HD_HTTP;
			}
			set
			{
				if ((this._HD_HTTP != value))
				{
					this.OnHD_HTTPChanging(value);
					this.SendPropertyChanging();
					this._HD_HTTP = value;
					this.SendPropertyChanged("HD_HTTP");
					this.OnHD_HTTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_DESCROOM", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HD_DESCROOM
		{
			get
			{
				return this._HD_DESCROOM;
			}
			set
			{
				if ((this._HD_DESCROOM != value))
				{
					this.OnHD_DESCROOMChanging(value);
					this.SendPropertyChanging();
					this._HD_DESCROOM = value;
					this.SendPropertyChanged("HD_DESCROOM");
					this.OnHD_DESCROOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_DESCMEAL", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HD_DESCMEAL
		{
			get
			{
				return this._HD_DESCMEAL;
			}
			set
			{
				if ((this._HD_DESCMEAL != value))
				{
					this.OnHD_DESCMEALChanging(value);
					this.SendPropertyChanging();
					this._HD_DESCMEAL = value;
					this.SendPropertyChanged("HD_DESCMEAL");
					this.OnHD_DESCMEALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_DESCSERVICE", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HD_DESCSERVICE
		{
			get
			{
				return this._HD_DESCSERVICE;
			}
			set
			{
				if ((this._HD_DESCSERVICE != value))
				{
					this.OnHD_DESCSERVICEChanging(value);
					this.SendPropertyChanging();
					this._HD_DESCSERVICE = value;
					this.SendPropertyChanged("HD_DESCSERVICE");
					this.OnHD_DESCSERVICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_DESCSPORT", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HD_DESCSPORT
		{
			get
			{
				return this._HD_DESCSPORT;
			}
			set
			{
				if ((this._HD_DESCSPORT != value))
				{
					this.OnHD_DESCSPORTChanging(value);
					this.SendPropertyChanging();
					this._HD_DESCSPORT = value;
					this.SendPropertyChanged("HD_DESCSPORT");
					this.OnHD_DESCSPORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_DESCEXCUR", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HD_DESCEXCUR
		{
			get
			{
				return this._HD_DESCEXCUR;
			}
			set
			{
				if ((this._HD_DESCEXCUR != value))
				{
					this.OnHD_DESCEXCURChanging(value);
					this.SendPropertyChanging();
					this._HD_DESCEXCUR = value;
					this.SendPropertyChanged("HD_DESCEXCUR");
					this.OnHD_DESCEXCURChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_DESCHEALTH", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HD_DESCHEALTH
		{
			get
			{
				return this._HD_DESCHEALTH;
			}
			set
			{
				if ((this._HD_DESCHEALTH != value))
				{
					this.OnHD_DESCHEALTHChanging(value);
					this.SendPropertyChanging();
					this._HD_DESCHEALTH = value;
					this.SendPropertyChanged("HD_DESCHEALTH");
					this.OnHD_DESCHEALTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_DISTANCE", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> HD_DISTANCE
		{
			get
			{
				return this._HD_DISTANCE;
			}
			set
			{
				if ((this._HD_DISTANCE != value))
				{
					this.OnHD_DISTANCEChanging(value);
					this.SendPropertyChanging();
					this._HD_DISTANCE = value;
					this.SendPropertyChanged("HD_DISTANCE");
					this.OnHD_DISTANCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_WEB", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HD_WEB
		{
			get
			{
				return this._HD_WEB;
			}
			set
			{
				if ((this._HD_WEB != value))
				{
					this.OnHD_WEBChanging(value);
					this.SendPropertyChanging();
					this._HD_WEB = value;
					this.SendPropertyChanged("HD_WEB");
					this.OnHD_WEBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_DESCRAZVL", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HD_DESCRAZVL
		{
			get
			{
				return this._HD_DESCRAZVL;
			}
			set
			{
				if ((this._HD_DESCRAZVL != value))
				{
					this.OnHD_DESCRAZVLChanging(value);
					this.SendPropertyChanging();
					this._HD_DESCRAZVL = value;
					this.SendPropertyChanged("HD_DESCRAZVL");
					this.OnHD_DESCRAZVLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_WEBIMAGE", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_WEBIMAGE
		{
			get
			{
				return this._HD_WEBIMAGE;
			}
			set
			{
				if ((this._HD_WEBIMAGE != value))
				{
					this.OnHD_WEBIMAGEChanging(value);
					this.SendPropertyChanging();
					this._HD_WEBIMAGE = value;
					this.SendPropertyChanged("HD_WEBIMAGE");
					this.OnHD_WEBIMAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_WEBIMAGE1", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_WEBIMAGE1
		{
			get
			{
				return this._HD_WEBIMAGE1;
			}
			set
			{
				if ((this._HD_WEBIMAGE1 != value))
				{
					this.OnHD_WEBIMAGE1Changing(value);
					this.SendPropertyChanging();
					this._HD_WEBIMAGE1 = value;
					this.SendPropertyChanged("HD_WEBIMAGE1");
					this.OnHD_WEBIMAGE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_WEBIMAGE2", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_WEBIMAGE2
		{
			get
			{
				return this._HD_WEBIMAGE2;
			}
			set
			{
				if ((this._HD_WEBIMAGE2 != value))
				{
					this.OnHD_WEBIMAGE2Changing(value);
					this.SendPropertyChanging();
					this._HD_WEBIMAGE2 = value;
					this.SendPropertyChanged("HD_WEBIMAGE2");
					this.OnHD_WEBIMAGE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_WEBIMAGE3", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_WEBIMAGE3
		{
			get
			{
				return this._HD_WEBIMAGE3;
			}
			set
			{
				if ((this._HD_WEBIMAGE3 != value))
				{
					this.OnHD_WEBIMAGE3Changing(value);
					this.SendPropertyChanging();
					this._HD_WEBIMAGE3 = value;
					this.SendPropertyChanged("HD_WEBIMAGE3");
					this.OnHD_WEBIMAGE3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_WEBIMAGE4", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_WEBIMAGE4
		{
			get
			{
				return this._HD_WEBIMAGE4;
			}
			set
			{
				if ((this._HD_WEBIMAGE4 != value))
				{
					this.OnHD_WEBIMAGE4Changing(value);
					this.SendPropertyChanging();
					this._HD_WEBIMAGE4 = value;
					this.SendPropertyChanged("HD_WEBIMAGE4");
					this.OnHD_WEBIMAGE4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_WEBIMAGE5", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_WEBIMAGE5
		{
			get
			{
				return this._HD_WEBIMAGE5;
			}
			set
			{
				if ((this._HD_WEBIMAGE5 != value))
				{
					this.OnHD_WEBIMAGE5Changing(value);
					this.SendPropertyChanging();
					this._HD_WEBIMAGE5 = value;
					this.SendPropertyChanged("HD_WEBIMAGE5");
					this.OnHD_WEBIMAGE5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_WEBIMAGE6", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_WEBIMAGE6
		{
			get
			{
				return this._HD_WEBIMAGE6;
			}
			set
			{
				if ((this._HD_WEBIMAGE6 != value))
				{
					this.OnHD_WEBIMAGE6Changing(value);
					this.SendPropertyChanging();
					this._HD_WEBIMAGE6 = value;
					this.SendPropertyChanged("HD_WEBIMAGE6");
					this.OnHD_WEBIMAGE6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_WEBIMAGE7", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_WEBIMAGE7
		{
			get
			{
				return this._HD_WEBIMAGE7;
			}
			set
			{
				if ((this._HD_WEBIMAGE7 != value))
				{
					this.OnHD_WEBIMAGE7Changing(value);
					this.SendPropertyChanging();
					this._HD_WEBIMAGE7 = value;
					this.SendPropertyChanged("HD_WEBIMAGE7");
					this.OnHD_WEBIMAGE7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_WEBIMAGE8", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_WEBIMAGE8
		{
			get
			{
				return this._HD_WEBIMAGE8;
			}
			set
			{
				if ((this._HD_WEBIMAGE8 != value))
				{
					this.OnHD_WEBIMAGE8Changing(value);
					this.SendPropertyChanging();
					this._HD_WEBIMAGE8 = value;
					this.SendPropertyChanged("HD_WEBIMAGE8");
					this.OnHD_WEBIMAGE8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_REMARK", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_REMARK
		{
			get
			{
				return this._HD_REMARK;
			}
			set
			{
				if ((this._HD_REMARK != value))
				{
					this.OnHD_REMARKChanging(value);
					this.SendPropertyChanging();
					this._HD_REMARK = value;
					this.SendPropertyChanged("HD_REMARK");
					this.OnHD_REMARKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_REMARK1", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_REMARK1
		{
			get
			{
				return this._HD_REMARK1;
			}
			set
			{
				if ((this._HD_REMARK1 != value))
				{
					this.OnHD_REMARK1Changing(value);
					this.SendPropertyChanging();
					this._HD_REMARK1 = value;
					this.SendPropertyChanged("HD_REMARK1");
					this.OnHD_REMARK1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_REMARK2", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_REMARK2
		{
			get
			{
				return this._HD_REMARK2;
			}
			set
			{
				if ((this._HD_REMARK2 != value))
				{
					this.OnHD_REMARK2Changing(value);
					this.SendPropertyChanging();
					this._HD_REMARK2 = value;
					this.SendPropertyChanged("HD_REMARK2");
					this.OnHD_REMARK2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_REMARK3", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_REMARK3
		{
			get
			{
				return this._HD_REMARK3;
			}
			set
			{
				if ((this._HD_REMARK3 != value))
				{
					this.OnHD_REMARK3Changing(value);
					this.SendPropertyChanging();
					this._HD_REMARK3 = value;
					this.SendPropertyChanged("HD_REMARK3");
					this.OnHD_REMARK3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_REMARK4", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_REMARK4
		{
			get
			{
				return this._HD_REMARK4;
			}
			set
			{
				if ((this._HD_REMARK4 != value))
				{
					this.OnHD_REMARK4Changing(value);
					this.SendPropertyChanging();
					this._HD_REMARK4 = value;
					this.SendPropertyChanged("HD_REMARK4");
					this.OnHD_REMARK4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_REMARK5", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_REMARK5
		{
			get
			{
				return this._HD_REMARK5;
			}
			set
			{
				if ((this._HD_REMARK5 != value))
				{
					this.OnHD_REMARK5Changing(value);
					this.SendPropertyChanging();
					this._HD_REMARK5 = value;
					this.SendPropertyChanged("HD_REMARK5");
					this.OnHD_REMARK5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_REMARK6", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_REMARK6
		{
			get
			{
				return this._HD_REMARK6;
			}
			set
			{
				if ((this._HD_REMARK6 != value))
				{
					this.OnHD_REMARK6Changing(value);
					this.SendPropertyChanging();
					this._HD_REMARK6 = value;
					this.SendPropertyChanged("HD_REMARK6");
					this.OnHD_REMARK6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_REMARK7", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_REMARK7
		{
			get
			{
				return this._HD_REMARK7;
			}
			set
			{
				if ((this._HD_REMARK7 != value))
				{
					this.OnHD_REMARK7Changing(value);
					this.SendPropertyChanging();
					this._HD_REMARK7 = value;
					this.SendPropertyChanged("HD_REMARK7");
					this.OnHD_REMARK7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_REMARK8", DbType="VarChar(64)", UpdateCheck=UpdateCheck.Never)]
		public string HD_REMARK8
		{
			get
			{
				return this._HD_REMARK8;
			}
			set
			{
				if ((this._HD_REMARK8 != value))
				{
					this.OnHD_REMARK8Changing(value);
					this.SendPropertyChanging();
					this._HD_REMARK8 = value;
					this.SendPropertyChanged("HD_REMARK8");
					this.OnHD_REMARK8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string HD_StdKey
		{
			get
			{
				return this._HD_StdKey;
			}
			set
			{
				if ((this._HD_StdKey != value))
				{
					this.OnHD_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._HD_StdKey = value;
					this.SendPropertyChanged("HD_StdKey");
					this.OnHD_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime HD_UpdateDate
		{
			get
			{
				return this._HD_UpdateDate;
			}
			set
			{
				if ((this._HD_UpdateDate != value))
				{
					this.OnHD_UpdateDateChanging(value);
					this.SendPropertyChanging();
					this._HD_UpdateDate = value;
					this.SendPropertyChanged("HD_UpdateDate");
					this.OnHD_UpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_UNICODE", DbType="Char(5)", UpdateCheck=UpdateCheck.Never)]
		public string HD_UNICODE
		{
			get
			{
				return this._HD_UNICODE;
			}
			set
			{
				if ((this._HD_UNICODE != value))
				{
					this.OnHD_UNICODEChanging(value);
					this.SendPropertyChanging();
					this._HD_UNICODE = value;
					this.SendPropertyChanged("HD_UNICODE");
					this.OnHD_UNICODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_Order", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HD_Order
		{
			get
			{
				return this._HD_Order;
			}
			set
			{
				if ((this._HD_Order != value))
				{
					this.OnHD_OrderChanging(value);
					this.SendPropertyChanging();
					this._HD_Order = value;
					this.SendPropertyChanged("HD_Order");
					this.OnHD_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_IsCruise", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int HD_IsCruise
		{
			get
			{
				return this._HD_IsCruise;
			}
			set
			{
				if ((this._HD_IsCruise != value))
				{
					this.OnHD_IsCruiseChanging(value);
					this.SendPropertyChanging();
					this._HD_IsCruise = value;
					this.SendPropertyChanged("HD_IsCruise");
					this.OnHD_IsCruiseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_COHId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HD_COHId
		{
			get
			{
				return this._HD_COHId;
			}
			set
			{
				if ((this._HD_COHId != value))
				{
					this.OnHD_COHIdChanging(value);
					this.SendPropertyChanging();
					this._HD_COHId = value;
					this.SendPropertyChanged("HD_COHId");
					this.OnHD_COHIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_NAMELAT", DbType="VarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string HD_NAMELAT
		{
			get
			{
				return this._HD_NAMELAT;
			}
			set
			{
				if ((this._HD_NAMELAT != value))
				{
					this.OnHD_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._HD_NAMELAT = value;
					this.SendPropertyChanged("HD_NAMELAT");
					this.OnHD_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_PayHour1", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> HD_PayHour1
		{
			get
			{
				return this._HD_PayHour1;
			}
			set
			{
				if ((this._HD_PayHour1 != value))
				{
					this.OnHD_PayHour1Changing(value);
					this.SendPropertyChanging();
					this._HD_PayHour1 = value;
					this.SendPropertyChanged("HD_PayHour1");
					this.OnHD_PayHour1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_PayHour2", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> HD_PayHour2
		{
			get
			{
				return this._HD_PayHour2;
			}
			set
			{
				if ((this._HD_PayHour2 != value))
				{
					this.OnHD_PayHour2Changing(value);
					this.SendPropertyChanging();
					this._HD_PayHour2 = value;
					this.SendPropertyChanged("HD_PayHour2");
					this.OnHD_PayHour2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_Travel", DbType="VarChar(254)", UpdateCheck=UpdateCheck.Never)]
		public string HD_Travel
		{
			get
			{
				return this._HD_Travel;
			}
			set
			{
				if ((this._HD_Travel != value))
				{
					this.OnHD_TravelChanging(value);
					this.SendPropertyChanging();
					this._HD_Travel = value;
					this.SendPropertyChanged("HD_Travel");
					this.OnHD_TravelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_PayHourNote", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HD_PayHourNote
		{
			get
			{
				return this._HD_PayHourNote;
			}
			set
			{
				if ((this._HD_PayHourNote != value))
				{
					this.OnHD_PayHourNoteChanging(value);
					this.SendPropertyChanging();
					this._HD_PayHourNote = value;
					this.SendPropertyChanged("HD_PayHourNote");
					this.OnHD_PayHourNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_PayHour", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> HD_PayHour
		{
			get
			{
				return this._HD_PayHour;
			}
			set
			{
				if ((this._HD_PayHour != value))
				{
					this.OnHD_PayHourChanging(value);
					this.SendPropertyChanging();
					this._HD_PayHour = value;
					this.SendPropertyChanged("HD_PayHour");
					this.OnHD_PayHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hd_rank", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> hd_rank
		{
			get
			{
				return this._hd_rank;
			}
			set
			{
				if ((this._hd_rank != value))
				{
					this.Onhd_rankChanging(value);
					this.SendPropertyChanging();
					this._hd_rank = value;
					this.SendPropertyChanged("hd_rank");
					this.Onhd_rankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD_HTTPAdditional", DbType="NVarChar(254)", UpdateCheck=UpdateCheck.Never)]
		public string HD_HTTPAdditional
		{
			get
			{
				return this._HD_HTTPAdditional;
			}
			set
			{
				if ((this._HD_HTTPAdditional != value))
				{
					this.OnHD_HTTPAdditionalChanging(value);
					this.SendPropertyChanging();
					this._HD_HTTPAdditional = value;
					this.SendPropertyChanged("HD_HTTPAdditional");
					this.OnHD_HTTPAdditionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HotelDictionary_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="HD_KEY", OtherKey="DL_CODE")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resort_HotelDictionary", Storage="_Resort", ThisKey="HD_RSKEY", OtherKey="RS_KEY", IsForeignKey=true)]
		public Resort Resort
		{
			get
			{
				return this._Resort.Entity;
			}
			set
			{
				Resort previousValue = this._Resort.Entity;
				if (((previousValue != value) 
							|| (this._Resort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resort.Entity = null;
						previousValue.HotelDictionaries.Remove(this);
					}
					this._Resort.Entity = value;
					if ((value != null))
					{
						value.HotelDictionaries.Add(this);
						this._HD_RSKEY = value.RS_KEY;
					}
					else
					{
						this._HD_RSKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("Resort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityDictionary_HotelDictionary", Storage="_CityDictionary", ThisKey="HD_CTKEY", OtherKey="CT_KEY", IsForeignKey=true)]
		public CityDictionary CityDictionary
		{
			get
			{
				return this._CityDictionary.Entity;
			}
			set
			{
				CityDictionary previousValue = this._CityDictionary.Entity;
				if (((previousValue != value) 
							|| (this._CityDictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CityDictionary.Entity = null;
						previousValue.HotelDictionaries.Remove(this);
					}
					this._CityDictionary.Entity = value;
					if ((value != null))
					{
						value.HotelDictionaries.Add(this);
						this._HD_CTKEY = value.CT_KEY;
					}
					else
					{
						this._HD_CTKEY = default(int);
					}
					this.SendPropertyChanged("CityDictionary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.HotelDictionary = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.HotelDictionary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotelRooms")]
	public partial class HotelRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HR_KEY;
		
		private int _HR_RMKEY;
		
		private int _HR_RCKEY;
		
		private short _HR_MAIN;
		
		private System.Nullable<short> _HR_AGEFROM;
		
		private System.Nullable<short> _HR_AGETO;
		
		private System.Nullable<int> _HR_ACKEY;
		
		private string _HR_StdKey;
		
		private System.Nullable<int> _HR_CINNUM;
		
		private string _HR_UNICODE;
		
		private System.Nullable<short> _HR_DoNotGetILCosts;
		
		private System.Data.Linq.Binary _version;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntityRef<Room> _Room;
		
		private EntityRef<Accmdmentype> _Accmdmentype;
		
		private EntityRef<RoomsCategory> _RoomsCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHR_KEYChanging(int value);
    partial void OnHR_KEYChanged();
    partial void OnHR_RMKEYChanging(int value);
    partial void OnHR_RMKEYChanged();
    partial void OnHR_RCKEYChanging(int value);
    partial void OnHR_RCKEYChanged();
    partial void OnHR_MAINChanging(short value);
    partial void OnHR_MAINChanged();
    partial void OnHR_AGEFROMChanging(System.Nullable<short> value);
    partial void OnHR_AGEFROMChanged();
    partial void OnHR_AGETOChanging(System.Nullable<short> value);
    partial void OnHR_AGETOChanged();
    partial void OnHR_ACKEYChanging(System.Nullable<int> value);
    partial void OnHR_ACKEYChanged();
    partial void OnHR_StdKeyChanging(string value);
    partial void OnHR_StdKeyChanged();
    partial void OnHR_CINNUMChanging(System.Nullable<int> value);
    partial void OnHR_CINNUMChanged();
    partial void OnHR_UNICODEChanging(string value);
    partial void OnHR_UNICODEChanged();
    partial void OnHR_DoNotGetILCostsChanging(System.Nullable<short> value);
    partial void OnHR_DoNotGetILCostsChanged();
    partial void OnversionChanging(System.Data.Linq.Binary value);
    partial void OnversionChanged();
    #endregion
		
		public HotelRoom()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._Room = default(EntityRef<Room>);
			this._Accmdmentype = default(EntityRef<Accmdmentype>);
			this._RoomsCategory = default(EntityRef<RoomsCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HR_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int HR_KEY
		{
			get
			{
				return this._HR_KEY;
			}
			set
			{
				if ((this._HR_KEY != value))
				{
					this.OnHR_KEYChanging(value);
					this.SendPropertyChanging();
					this._HR_KEY = value;
					this.SendPropertyChanged("HR_KEY");
					this.OnHR_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HR_RMKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int HR_RMKEY
		{
			get
			{
				return this._HR_RMKEY;
			}
			set
			{
				if ((this._HR_RMKEY != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHR_RMKEYChanging(value);
					this.SendPropertyChanging();
					this._HR_RMKEY = value;
					this.SendPropertyChanged("HR_RMKEY");
					this.OnHR_RMKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HR_RCKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int HR_RCKEY
		{
			get
			{
				return this._HR_RCKEY;
			}
			set
			{
				if ((this._HR_RCKEY != value))
				{
					if (this._RoomsCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHR_RCKEYChanging(value);
					this.SendPropertyChanging();
					this._HR_RCKEY = value;
					this.SendPropertyChanged("HR_RCKEY");
					this.OnHR_RCKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HR_MAIN", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short HR_MAIN
		{
			get
			{
				return this._HR_MAIN;
			}
			set
			{
				if ((this._HR_MAIN != value))
				{
					this.OnHR_MAINChanging(value);
					this.SendPropertyChanging();
					this._HR_MAIN = value;
					this.SendPropertyChanged("HR_MAIN");
					this.OnHR_MAINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HR_AGEFROM", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> HR_AGEFROM
		{
			get
			{
				return this._HR_AGEFROM;
			}
			set
			{
				if ((this._HR_AGEFROM != value))
				{
					this.OnHR_AGEFROMChanging(value);
					this.SendPropertyChanging();
					this._HR_AGEFROM = value;
					this.SendPropertyChanged("HR_AGEFROM");
					this.OnHR_AGEFROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HR_AGETO", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> HR_AGETO
		{
			get
			{
				return this._HR_AGETO;
			}
			set
			{
				if ((this._HR_AGETO != value))
				{
					this.OnHR_AGETOChanging(value);
					this.SendPropertyChanging();
					this._HR_AGETO = value;
					this.SendPropertyChanged("HR_AGETO");
					this.OnHR_AGETOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HR_ACKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HR_ACKEY
		{
			get
			{
				return this._HR_ACKEY;
			}
			set
			{
				if ((this._HR_ACKEY != value))
				{
					if (this._Accmdmentype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHR_ACKEYChanging(value);
					this.SendPropertyChanging();
					this._HR_ACKEY = value;
					this.SendPropertyChanged("HR_ACKEY");
					this.OnHR_ACKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HR_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string HR_StdKey
		{
			get
			{
				return this._HR_StdKey;
			}
			set
			{
				if ((this._HR_StdKey != value))
				{
					this.OnHR_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._HR_StdKey = value;
					this.SendPropertyChanged("HR_StdKey");
					this.OnHR_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HR_CINNUM", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HR_CINNUM
		{
			get
			{
				return this._HR_CINNUM;
			}
			set
			{
				if ((this._HR_CINNUM != value))
				{
					this.OnHR_CINNUMChanging(value);
					this.SendPropertyChanging();
					this._HR_CINNUM = value;
					this.SendPropertyChanged("HR_CINNUM");
					this.OnHR_CINNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HR_UNICODE", DbType="VarChar(125)", UpdateCheck=UpdateCheck.Never)]
		public string HR_UNICODE
		{
			get
			{
				return this._HR_UNICODE;
			}
			set
			{
				if ((this._HR_UNICODE != value))
				{
					this.OnHR_UNICODEChanging(value);
					this.SendPropertyChanging();
					this._HR_UNICODE = value;
					this.SendPropertyChanged("HR_UNICODE");
					this.OnHR_UNICODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HR_DoNotGetILCosts", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> HR_DoNotGetILCosts
		{
			get
			{
				return this._HR_DoNotGetILCosts;
			}
			set
			{
				if ((this._HR_DoNotGetILCosts != value))
				{
					this.OnHR_DoNotGetILCostsChanging(value);
					this.SendPropertyChanging();
					this._HR_DoNotGetILCosts = value;
					this.SendPropertyChanged("HR_DoNotGetILCosts");
					this.OnHR_DoNotGetILCostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HotelRoom_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="HR_KEY", OtherKey="DL_SUBCODE1")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_HotelRoom", Storage="_Room", ThisKey="HR_RMKEY", OtherKey="RM_KEY", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.HotelRooms.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.HotelRooms.Add(this);
						this._HR_RMKEY = value.RM_KEY;
					}
					else
					{
						this._HR_RMKEY = default(int);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accmdmentype_HotelRoom", Storage="_Accmdmentype", ThisKey="HR_ACKEY", OtherKey="AC_KEY", IsForeignKey=true, DeleteRule="CASCADE")]
		public Accmdmentype Accmdmentype
		{
			get
			{
				return this._Accmdmentype.Entity;
			}
			set
			{
				Accmdmentype previousValue = this._Accmdmentype.Entity;
				if (((previousValue != value) 
							|| (this._Accmdmentype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accmdmentype.Entity = null;
						previousValue.HotelRooms.Remove(this);
					}
					this._Accmdmentype.Entity = value;
					if ((value != null))
					{
						value.HotelRooms.Add(this);
						this._HR_ACKEY = value.AC_KEY;
					}
					else
					{
						this._HR_ACKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("Accmdmentype");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomsCategory_HotelRoom", Storage="_RoomsCategory", ThisKey="HR_RCKEY", OtherKey="RC_KEY", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RoomsCategory RoomsCategory
		{
			get
			{
				return this._RoomsCategory.Entity;
			}
			set
			{
				RoomsCategory previousValue = this._RoomsCategory.Entity;
				if (((previousValue != value) 
							|| (this._RoomsCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoomsCategory.Entity = null;
						previousValue.HotelRooms.Remove(this);
					}
					this._RoomsCategory.Entity = value;
					if ((value != null))
					{
						value.HotelRooms.Add(this);
						this._HR_RCKEY = value.RC_KEY;
					}
					else
					{
						this._HR_RCKEY = default(int);
					}
					this.SendPropertyChanged("RoomsCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.HotelRoom = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.HotelRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rooms")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RM_KEY;
		
		private string _RM_CODE;
		
		private string _RM_NAME;
		
		private string _RM_NAMELAT;
		
		private System.Nullable<short> _RM_NPLACES;
		
		private System.Nullable<int> _RM_ORDER;
		
		private int _RM_CREATOR;
		
		private System.DateTime _RM_UPDATEDATE;
		
		private System.Data.Linq.Binary _ROWID;
		
		private string _RM_StdKey;
		
		private System.Nullable<short> _RM_NPlacesEx;
		
		private System.Nullable<int> _RM_CINNUM;
		
		private string _RM_UNICODE;
		
		private string _RM_Description;
		
		private EntitySet<HotelRoom> _HotelRooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRM_KEYChanging(int value);
    partial void OnRM_KEYChanged();
    partial void OnRM_CODEChanging(string value);
    partial void OnRM_CODEChanged();
    partial void OnRM_NAMEChanging(string value);
    partial void OnRM_NAMEChanged();
    partial void OnRM_NAMELATChanging(string value);
    partial void OnRM_NAMELATChanged();
    partial void OnRM_NPLACESChanging(System.Nullable<short> value);
    partial void OnRM_NPLACESChanged();
    partial void OnRM_ORDERChanging(System.Nullable<int> value);
    partial void OnRM_ORDERChanged();
    partial void OnRM_CREATORChanging(int value);
    partial void OnRM_CREATORChanged();
    partial void OnRM_UPDATEDATEChanging(System.DateTime value);
    partial void OnRM_UPDATEDATEChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnRM_StdKeyChanging(string value);
    partial void OnRM_StdKeyChanged();
    partial void OnRM_NPlacesExChanging(System.Nullable<short> value);
    partial void OnRM_NPlacesExChanged();
    partial void OnRM_CINNUMChanging(System.Nullable<int> value);
    partial void OnRM_CINNUMChanged();
    partial void OnRM_UNICODEChanging(string value);
    partial void OnRM_UNICODEChanged();
    partial void OnRM_DescriptionChanging(string value);
    partial void OnRM_DescriptionChanged();
    #endregion
		
		public Room()
		{
			this._HotelRooms = new EntitySet<HotelRoom>(new Action<HotelRoom>(this.attach_HotelRooms), new Action<HotelRoom>(this.detach_HotelRooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int RM_KEY
		{
			get
			{
				return this._RM_KEY;
			}
			set
			{
				if ((this._RM_KEY != value))
				{
					this.OnRM_KEYChanging(value);
					this.SendPropertyChanging();
					this._RM_KEY = value;
					this.SendPropertyChanged("RM_KEY");
					this.OnRM_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_CODE", DbType="VarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string RM_CODE
		{
			get
			{
				return this._RM_CODE;
			}
			set
			{
				if ((this._RM_CODE != value))
				{
					this.OnRM_CODEChanging(value);
					this.SendPropertyChanging();
					this._RM_CODE = value;
					this.SendPropertyChanged("RM_CODE");
					this.OnRM_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_NAME", DbType="VarChar(60) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RM_NAME
		{
			get
			{
				return this._RM_NAME;
			}
			set
			{
				if ((this._RM_NAME != value))
				{
					this.OnRM_NAMEChanging(value);
					this.SendPropertyChanging();
					this._RM_NAME = value;
					this.SendPropertyChanged("RM_NAME");
					this.OnRM_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_NAMELAT", DbType="VarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string RM_NAMELAT
		{
			get
			{
				return this._RM_NAMELAT;
			}
			set
			{
				if ((this._RM_NAMELAT != value))
				{
					this.OnRM_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._RM_NAMELAT = value;
					this.SendPropertyChanged("RM_NAMELAT");
					this.OnRM_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_NPLACES", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> RM_NPLACES
		{
			get
			{
				return this._RM_NPLACES;
			}
			set
			{
				if ((this._RM_NPLACES != value))
				{
					this.OnRM_NPLACESChanging(value);
					this.SendPropertyChanging();
					this._RM_NPLACES = value;
					this.SendPropertyChanged("RM_NPLACES");
					this.OnRM_NPLACESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_ORDER", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RM_ORDER
		{
			get
			{
				return this._RM_ORDER;
			}
			set
			{
				if ((this._RM_ORDER != value))
				{
					this.OnRM_ORDERChanging(value);
					this.SendPropertyChanging();
					this._RM_ORDER = value;
					this.SendPropertyChanged("RM_ORDER");
					this.OnRM_ORDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_CREATOR", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int RM_CREATOR
		{
			get
			{
				return this._RM_CREATOR;
			}
			set
			{
				if ((this._RM_CREATOR != value))
				{
					this.OnRM_CREATORChanging(value);
					this.SendPropertyChanging();
					this._RM_CREATOR = value;
					this.SendPropertyChanged("RM_CREATOR");
					this.OnRM_CREATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_UPDATEDATE", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime RM_UPDATEDATE
		{
			get
			{
				return this._RM_UPDATEDATE;
			}
			set
			{
				if ((this._RM_UPDATEDATE != value))
				{
					this.OnRM_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._RM_UPDATEDATE = value;
					this.SendPropertyChanged("RM_UPDATEDATE");
					this.OnRM_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string RM_StdKey
		{
			get
			{
				return this._RM_StdKey;
			}
			set
			{
				if ((this._RM_StdKey != value))
				{
					this.OnRM_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._RM_StdKey = value;
					this.SendPropertyChanged("RM_StdKey");
					this.OnRM_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_NPlacesEx", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> RM_NPlacesEx
		{
			get
			{
				return this._RM_NPlacesEx;
			}
			set
			{
				if ((this._RM_NPlacesEx != value))
				{
					this.OnRM_NPlacesExChanging(value);
					this.SendPropertyChanging();
					this._RM_NPlacesEx = value;
					this.SendPropertyChanged("RM_NPlacesEx");
					this.OnRM_NPlacesExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_CINNUM", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RM_CINNUM
		{
			get
			{
				return this._RM_CINNUM;
			}
			set
			{
				if ((this._RM_CINNUM != value))
				{
					this.OnRM_CINNUMChanging(value);
					this.SendPropertyChanging();
					this._RM_CINNUM = value;
					this.SendPropertyChanged("RM_CINNUM");
					this.OnRM_CINNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_UNICODE", DbType="VarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string RM_UNICODE
		{
			get
			{
				return this._RM_UNICODE;
			}
			set
			{
				if ((this._RM_UNICODE != value))
				{
					this.OnRM_UNICODEChanging(value);
					this.SendPropertyChanging();
					this._RM_UNICODE = value;
					this.SendPropertyChanged("RM_UNICODE");
					this.OnRM_UNICODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RM_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string RM_Description
		{
			get
			{
				return this._RM_Description;
			}
			set
			{
				if ((this._RM_Description != value))
				{
					this.OnRM_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._RM_Description = value;
					this.SendPropertyChanged("RM_Description");
					this.OnRM_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_HotelRoom", Storage="_HotelRooms", ThisKey="RM_KEY", OtherKey="HR_RMKEY")]
		public EntitySet<HotelRoom> HotelRooms
		{
			get
			{
				return this._HotelRooms;
			}
			set
			{
				this._HotelRooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HotelRooms(HotelRoom entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_HotelRooms(HotelRoom entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accmdmentype")]
	public partial class Accmdmentype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AC_KEY;
		
		private string _AC_CODE;
		
		private string _AC_NAME;
		
		private System.Nullable<short> _AC_MAIN;
		
		private System.Nullable<short> _AC_AGEFROM;
		
		private System.Nullable<short> _AC_AGETO;
		
		private System.Nullable<int> _AC_CREATOR;
		
		private System.Nullable<System.DateTime> _AC_UPDATEDATE;
		
		private System.Nullable<int> _AC_NMenExBed;
		
		private System.Data.Linq.Binary _ROWID;
		
		private System.Nullable<int> _AC_Order;
		
		private System.Nullable<int> _AC_NRealPlaces;
		
		private string _AC_StdKey;
		
		private System.Nullable<int> _AC_CINNUM;
		
		private System.Nullable<short> _AC_AgeFrom2;
		
		private System.Nullable<short> _AC_AgeTo2;
		
		private string _AC_UNICODE;
		
		private string _AC_NAMELAT;
		
		private System.Nullable<short> _AC_PERROOM;
		
		private string _AC_Description;
		
		private EntitySet<HotelRoom> _HotelRooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAC_KEYChanging(int value);
    partial void OnAC_KEYChanged();
    partial void OnAC_CODEChanging(string value);
    partial void OnAC_CODEChanged();
    partial void OnAC_NAMEChanging(string value);
    partial void OnAC_NAMEChanged();
    partial void OnAC_MAINChanging(System.Nullable<short> value);
    partial void OnAC_MAINChanged();
    partial void OnAC_AGEFROMChanging(System.Nullable<short> value);
    partial void OnAC_AGEFROMChanged();
    partial void OnAC_AGETOChanging(System.Nullable<short> value);
    partial void OnAC_AGETOChanged();
    partial void OnAC_CREATORChanging(System.Nullable<int> value);
    partial void OnAC_CREATORChanged();
    partial void OnAC_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnAC_UPDATEDATEChanged();
    partial void OnAC_NMenExBedChanging(System.Nullable<int> value);
    partial void OnAC_NMenExBedChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnAC_OrderChanging(System.Nullable<int> value);
    partial void OnAC_OrderChanged();
    partial void OnAC_NRealPlacesChanging(System.Nullable<int> value);
    partial void OnAC_NRealPlacesChanged();
    partial void OnAC_StdKeyChanging(string value);
    partial void OnAC_StdKeyChanged();
    partial void OnAC_CINNUMChanging(System.Nullable<int> value);
    partial void OnAC_CINNUMChanged();
    partial void OnAC_AgeFrom2Changing(System.Nullable<short> value);
    partial void OnAC_AgeFrom2Changed();
    partial void OnAC_AgeTo2Changing(System.Nullable<short> value);
    partial void OnAC_AgeTo2Changed();
    partial void OnAC_UNICODEChanging(string value);
    partial void OnAC_UNICODEChanged();
    partial void OnAC_NAMELATChanging(string value);
    partial void OnAC_NAMELATChanged();
    partial void OnAC_PERROOMChanging(System.Nullable<short> value);
    partial void OnAC_PERROOMChanged();
    partial void OnAC_DescriptionChanging(string value);
    partial void OnAC_DescriptionChanged();
    #endregion
		
		public Accmdmentype()
		{
			this._HotelRooms = new EntitySet<HotelRoom>(new Action<HotelRoom>(this.attach_HotelRooms), new Action<HotelRoom>(this.detach_HotelRooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int AC_KEY
		{
			get
			{
				return this._AC_KEY;
			}
			set
			{
				if ((this._AC_KEY != value))
				{
					this.OnAC_KEYChanging(value);
					this.SendPropertyChanging();
					this._AC_KEY = value;
					this.SendPropertyChanged("AC_KEY");
					this.OnAC_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_CODE", DbType="VarChar(70)", UpdateCheck=UpdateCheck.Never)]
		public string AC_CODE
		{
			get
			{
				return this._AC_CODE;
			}
			set
			{
				if ((this._AC_CODE != value))
				{
					this.OnAC_CODEChanging(value);
					this.SendPropertyChanging();
					this._AC_CODE = value;
					this.SendPropertyChanged("AC_CODE");
					this.OnAC_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_NAME", DbType="VarChar(70)", UpdateCheck=UpdateCheck.Never)]
		public string AC_NAME
		{
			get
			{
				return this._AC_NAME;
			}
			set
			{
				if ((this._AC_NAME != value))
				{
					this.OnAC_NAMEChanging(value);
					this.SendPropertyChanging();
					this._AC_NAME = value;
					this.SendPropertyChanged("AC_NAME");
					this.OnAC_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_MAIN", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> AC_MAIN
		{
			get
			{
				return this._AC_MAIN;
			}
			set
			{
				if ((this._AC_MAIN != value))
				{
					this.OnAC_MAINChanging(value);
					this.SendPropertyChanging();
					this._AC_MAIN = value;
					this.SendPropertyChanged("AC_MAIN");
					this.OnAC_MAINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_AGEFROM", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> AC_AGEFROM
		{
			get
			{
				return this._AC_AGEFROM;
			}
			set
			{
				if ((this._AC_AGEFROM != value))
				{
					this.OnAC_AGEFROMChanging(value);
					this.SendPropertyChanging();
					this._AC_AGEFROM = value;
					this.SendPropertyChanged("AC_AGEFROM");
					this.OnAC_AGEFROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_AGETO", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> AC_AGETO
		{
			get
			{
				return this._AC_AGETO;
			}
			set
			{
				if ((this._AC_AGETO != value))
				{
					this.OnAC_AGETOChanging(value);
					this.SendPropertyChanging();
					this._AC_AGETO = value;
					this.SendPropertyChanged("AC_AGETO");
					this.OnAC_AGETOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_CREATOR", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AC_CREATOR
		{
			get
			{
				return this._AC_CREATOR;
			}
			set
			{
				if ((this._AC_CREATOR != value))
				{
					this.OnAC_CREATORChanging(value);
					this.SendPropertyChanging();
					this._AC_CREATOR = value;
					this.SendPropertyChanged("AC_CREATOR");
					this.OnAC_CREATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_UPDATEDATE", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AC_UPDATEDATE
		{
			get
			{
				return this._AC_UPDATEDATE;
			}
			set
			{
				if ((this._AC_UPDATEDATE != value))
				{
					this.OnAC_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._AC_UPDATEDATE = value;
					this.SendPropertyChanged("AC_UPDATEDATE");
					this.OnAC_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_NMenExBed", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AC_NMenExBed
		{
			get
			{
				return this._AC_NMenExBed;
			}
			set
			{
				if ((this._AC_NMenExBed != value))
				{
					this.OnAC_NMenExBedChanging(value);
					this.SendPropertyChanging();
					this._AC_NMenExBed = value;
					this.SendPropertyChanged("AC_NMenExBed");
					this.OnAC_NMenExBedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_Order", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AC_Order
		{
			get
			{
				return this._AC_Order;
			}
			set
			{
				if ((this._AC_Order != value))
				{
					this.OnAC_OrderChanging(value);
					this.SendPropertyChanging();
					this._AC_Order = value;
					this.SendPropertyChanged("AC_Order");
					this.OnAC_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_NRealPlaces", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AC_NRealPlaces
		{
			get
			{
				return this._AC_NRealPlaces;
			}
			set
			{
				if ((this._AC_NRealPlaces != value))
				{
					this.OnAC_NRealPlacesChanging(value);
					this.SendPropertyChanging();
					this._AC_NRealPlaces = value;
					this.SendPropertyChanged("AC_NRealPlaces");
					this.OnAC_NRealPlacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string AC_StdKey
		{
			get
			{
				return this._AC_StdKey;
			}
			set
			{
				if ((this._AC_StdKey != value))
				{
					this.OnAC_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._AC_StdKey = value;
					this.SendPropertyChanged("AC_StdKey");
					this.OnAC_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_CINNUM", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AC_CINNUM
		{
			get
			{
				return this._AC_CINNUM;
			}
			set
			{
				if ((this._AC_CINNUM != value))
				{
					this.OnAC_CINNUMChanging(value);
					this.SendPropertyChanging();
					this._AC_CINNUM = value;
					this.SendPropertyChanged("AC_CINNUM");
					this.OnAC_CINNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_AgeFrom2", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> AC_AgeFrom2
		{
			get
			{
				return this._AC_AgeFrom2;
			}
			set
			{
				if ((this._AC_AgeFrom2 != value))
				{
					this.OnAC_AgeFrom2Changing(value);
					this.SendPropertyChanging();
					this._AC_AgeFrom2 = value;
					this.SendPropertyChanged("AC_AgeFrom2");
					this.OnAC_AgeFrom2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_AgeTo2", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> AC_AgeTo2
		{
			get
			{
				return this._AC_AgeTo2;
			}
			set
			{
				if ((this._AC_AgeTo2 != value))
				{
					this.OnAC_AgeTo2Changing(value);
					this.SendPropertyChanging();
					this._AC_AgeTo2 = value;
					this.SendPropertyChanged("AC_AgeTo2");
					this.OnAC_AgeTo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_UNICODE", DbType="VarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string AC_UNICODE
		{
			get
			{
				return this._AC_UNICODE;
			}
			set
			{
				if ((this._AC_UNICODE != value))
				{
					this.OnAC_UNICODEChanging(value);
					this.SendPropertyChanging();
					this._AC_UNICODE = value;
					this.SendPropertyChanged("AC_UNICODE");
					this.OnAC_UNICODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_NAMELAT", DbType="VarChar(70)", UpdateCheck=UpdateCheck.Never)]
		public string AC_NAMELAT
		{
			get
			{
				return this._AC_NAMELAT;
			}
			set
			{
				if ((this._AC_NAMELAT != value))
				{
					this.OnAC_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._AC_NAMELAT = value;
					this.SendPropertyChanged("AC_NAMELAT");
					this.OnAC_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_PERROOM", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> AC_PERROOM
		{
			get
			{
				return this._AC_PERROOM;
			}
			set
			{
				if ((this._AC_PERROOM != value))
				{
					this.OnAC_PERROOMChanging(value);
					this.SendPropertyChanging();
					this._AC_PERROOM = value;
					this.SendPropertyChanged("AC_PERROOM");
					this.OnAC_PERROOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string AC_Description
		{
			get
			{
				return this._AC_Description;
			}
			set
			{
				if ((this._AC_Description != value))
				{
					this.OnAC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._AC_Description = value;
					this.SendPropertyChanged("AC_Description");
					this.OnAC_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accmdmentype_HotelRoom", Storage="_HotelRooms", ThisKey="AC_KEY", OtherKey="HR_ACKEY")]
		public EntitySet<HotelRoom> HotelRooms
		{
			get
			{
				return this._HotelRooms;
			}
			set
			{
				this._HotelRooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HotelRooms(HotelRoom entity)
		{
			this.SendPropertyChanging();
			entity.Accmdmentype = this;
		}
		
		private void detach_HotelRooms(HotelRoom entity)
		{
			this.SendPropertyChanging();
			entity.Accmdmentype = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pansion")]
	public partial class Pansion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PN_KEY;
		
		private string _PN_NAME;
		
		private string _PN_CODE;
		
		private System.Data.Linq.Binary _ROWID;
		
		private string _PN_StdKey;
		
		private System.Nullable<int> _PN_Order;
		
		private string _PN_NAMELAT;
		
		private string _PN_GlobalCode;
		
		private string _PN_Description;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPN_KEYChanging(int value);
    partial void OnPN_KEYChanged();
    partial void OnPN_NAMEChanging(string value);
    partial void OnPN_NAMEChanged();
    partial void OnPN_CODEChanging(string value);
    partial void OnPN_CODEChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnPN_StdKeyChanging(string value);
    partial void OnPN_StdKeyChanged();
    partial void OnPN_OrderChanging(System.Nullable<int> value);
    partial void OnPN_OrderChanged();
    partial void OnPN_NAMELATChanging(string value);
    partial void OnPN_NAMELATChanged();
    partial void OnPN_GlobalCodeChanging(string value);
    partial void OnPN_GlobalCodeChanged();
    partial void OnPN_DescriptionChanging(string value);
    partial void OnPN_DescriptionChanged();
    #endregion
		
		public Pansion()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int PN_KEY
		{
			get
			{
				return this._PN_KEY;
			}
			set
			{
				if ((this._PN_KEY != value))
				{
					this.OnPN_KEYChanging(value);
					this.SendPropertyChanging();
					this._PN_KEY = value;
					this.SendPropertyChanged("PN_KEY");
					this.OnPN_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_NAME", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PN_NAME
		{
			get
			{
				return this._PN_NAME;
			}
			set
			{
				if ((this._PN_NAME != value))
				{
					this.OnPN_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PN_NAME = value;
					this.SendPropertyChanged("PN_NAME");
					this.OnPN_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_CODE", DbType="VarChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string PN_CODE
		{
			get
			{
				return this._PN_CODE;
			}
			set
			{
				if ((this._PN_CODE != value))
				{
					this.OnPN_CODEChanging(value);
					this.SendPropertyChanging();
					this._PN_CODE = value;
					this.SendPropertyChanged("PN_CODE");
					this.OnPN_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string PN_StdKey
		{
			get
			{
				return this._PN_StdKey;
			}
			set
			{
				if ((this._PN_StdKey != value))
				{
					this.OnPN_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._PN_StdKey = value;
					this.SendPropertyChanged("PN_StdKey");
					this.OnPN_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_Order", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PN_Order
		{
			get
			{
				return this._PN_Order;
			}
			set
			{
				if ((this._PN_Order != value))
				{
					this.OnPN_OrderChanging(value);
					this.SendPropertyChanging();
					this._PN_Order = value;
					this.SendPropertyChanged("PN_Order");
					this.OnPN_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_NAMELAT", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string PN_NAMELAT
		{
			get
			{
				return this._PN_NAMELAT;
			}
			set
			{
				if ((this._PN_NAMELAT != value))
				{
					this.OnPN_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._PN_NAMELAT = value;
					this.SendPropertyChanged("PN_NAMELAT");
					this.OnPN_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_GlobalCode", DbType="VarChar(3)", UpdateCheck=UpdateCheck.Never)]
		public string PN_GlobalCode
		{
			get
			{
				return this._PN_GlobalCode;
			}
			set
			{
				if ((this._PN_GlobalCode != value))
				{
					this.OnPN_GlobalCodeChanging(value);
					this.SendPropertyChanging();
					this._PN_GlobalCode = value;
					this.SendPropertyChanged("PN_GlobalCode");
					this.OnPN_GlobalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PN_Description
		{
			get
			{
				return this._PN_Description;
			}
			set
			{
				if ((this._PN_Description != value))
				{
					this.OnPN_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._PN_Description = value;
					this.SendPropertyChanged("PN_Description");
					this.OnPN_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pansion_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="PN_KEY", OtherKey="DL_SUBCODE2")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.Pansion = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.Pansion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoomsCategory")]
	public partial class RoomsCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RC_KEY;
		
		private string _RC_CODE;
		
		private string _RC_NAME;
		
		private string _RC_NAMELAT;
		
		private System.Nullable<int> _RC_ORDER;
		
		private int _RC_CREATOR;
		
		private System.DateTime _RC_UPDATEDATE;
		
		private System.Data.Linq.Binary _ROWID;
		
		private string _RC_StdKey;
		
		private System.Nullable<int> _RC_GulNum;
		
		private System.Nullable<int> _RC_CINNUM;
		
		private string _RC_UNICODE;
		
		private string _RC_Description;
		
		private EntitySet<HotelRoom> _HotelRooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRC_KEYChanging(int value);
    partial void OnRC_KEYChanged();
    partial void OnRC_CODEChanging(string value);
    partial void OnRC_CODEChanged();
    partial void OnRC_NAMEChanging(string value);
    partial void OnRC_NAMEChanged();
    partial void OnRC_NAMELATChanging(string value);
    partial void OnRC_NAMELATChanged();
    partial void OnRC_ORDERChanging(System.Nullable<int> value);
    partial void OnRC_ORDERChanged();
    partial void OnRC_CREATORChanging(int value);
    partial void OnRC_CREATORChanged();
    partial void OnRC_UPDATEDATEChanging(System.DateTime value);
    partial void OnRC_UPDATEDATEChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnRC_StdKeyChanging(string value);
    partial void OnRC_StdKeyChanged();
    partial void OnRC_GulNumChanging(System.Nullable<int> value);
    partial void OnRC_GulNumChanged();
    partial void OnRC_CINNUMChanging(System.Nullable<int> value);
    partial void OnRC_CINNUMChanged();
    partial void OnRC_UNICODEChanging(string value);
    partial void OnRC_UNICODEChanged();
    partial void OnRC_DescriptionChanging(string value);
    partial void OnRC_DescriptionChanged();
    #endregion
		
		public RoomsCategory()
		{
			this._HotelRooms = new EntitySet<HotelRoom>(new Action<HotelRoom>(this.attach_HotelRooms), new Action<HotelRoom>(this.detach_HotelRooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int RC_KEY
		{
			get
			{
				return this._RC_KEY;
			}
			set
			{
				if ((this._RC_KEY != value))
				{
					this.OnRC_KEYChanging(value);
					this.SendPropertyChanging();
					this._RC_KEY = value;
					this.SendPropertyChanged("RC_KEY");
					this.OnRC_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_CODE", DbType="VarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string RC_CODE
		{
			get
			{
				return this._RC_CODE;
			}
			set
			{
				if ((this._RC_CODE != value))
				{
					this.OnRC_CODEChanging(value);
					this.SendPropertyChanging();
					this._RC_CODE = value;
					this.SendPropertyChanged("RC_CODE");
					this.OnRC_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_NAME", DbType="VarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string RC_NAME
		{
			get
			{
				return this._RC_NAME;
			}
			set
			{
				if ((this._RC_NAME != value))
				{
					this.OnRC_NAMEChanging(value);
					this.SendPropertyChanging();
					this._RC_NAME = value;
					this.SendPropertyChanged("RC_NAME");
					this.OnRC_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_NAMELAT", DbType="VarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string RC_NAMELAT
		{
			get
			{
				return this._RC_NAMELAT;
			}
			set
			{
				if ((this._RC_NAMELAT != value))
				{
					this.OnRC_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._RC_NAMELAT = value;
					this.SendPropertyChanged("RC_NAMELAT");
					this.OnRC_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_ORDER", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RC_ORDER
		{
			get
			{
				return this._RC_ORDER;
			}
			set
			{
				if ((this._RC_ORDER != value))
				{
					this.OnRC_ORDERChanging(value);
					this.SendPropertyChanging();
					this._RC_ORDER = value;
					this.SendPropertyChanged("RC_ORDER");
					this.OnRC_ORDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_CREATOR", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int RC_CREATOR
		{
			get
			{
				return this._RC_CREATOR;
			}
			set
			{
				if ((this._RC_CREATOR != value))
				{
					this.OnRC_CREATORChanging(value);
					this.SendPropertyChanging();
					this._RC_CREATOR = value;
					this.SendPropertyChanged("RC_CREATOR");
					this.OnRC_CREATORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_UPDATEDATE", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime RC_UPDATEDATE
		{
			get
			{
				return this._RC_UPDATEDATE;
			}
			set
			{
				if ((this._RC_UPDATEDATE != value))
				{
					this.OnRC_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._RC_UPDATEDATE = value;
					this.SendPropertyChanged("RC_UPDATEDATE");
					this.OnRC_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string RC_StdKey
		{
			get
			{
				return this._RC_StdKey;
			}
			set
			{
				if ((this._RC_StdKey != value))
				{
					this.OnRC_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._RC_StdKey = value;
					this.SendPropertyChanged("RC_StdKey");
					this.OnRC_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_GulNum", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RC_GulNum
		{
			get
			{
				return this._RC_GulNum;
			}
			set
			{
				if ((this._RC_GulNum != value))
				{
					this.OnRC_GulNumChanging(value);
					this.SendPropertyChanging();
					this._RC_GulNum = value;
					this.SendPropertyChanged("RC_GulNum");
					this.OnRC_GulNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_CINNUM", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RC_CINNUM
		{
			get
			{
				return this._RC_CINNUM;
			}
			set
			{
				if ((this._RC_CINNUM != value))
				{
					this.OnRC_CINNUMChanging(value);
					this.SendPropertyChanging();
					this._RC_CINNUM = value;
					this.SendPropertyChanged("RC_CINNUM");
					this.OnRC_CINNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_UNICODE", DbType="VarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string RC_UNICODE
		{
			get
			{
				return this._RC_UNICODE;
			}
			set
			{
				if ((this._RC_UNICODE != value))
				{
					this.OnRC_UNICODEChanging(value);
					this.SendPropertyChanging();
					this._RC_UNICODE = value;
					this.SendPropertyChanged("RC_UNICODE");
					this.OnRC_UNICODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RC_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string RC_Description
		{
			get
			{
				return this._RC_Description;
			}
			set
			{
				if ((this._RC_Description != value))
				{
					this.OnRC_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._RC_Description = value;
					this.SendPropertyChanged("RC_Description");
					this.OnRC_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomsCategory_HotelRoom", Storage="_HotelRooms", ThisKey="RC_KEY", OtherKey="HR_RCKEY")]
		public EntitySet<HotelRoom> HotelRooms
		{
			get
			{
				return this._HotelRooms;
			}
			set
			{
				this._HotelRooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HotelRooms(HotelRoom entity)
		{
			this.SendPropertyChanging();
			entity.RoomsCategory = this;
		}
		
		private void detach_HotelRooms(HotelRoom entity)
		{
			this.SendPropertyChanging();
			entity.RoomsCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resorts")]
	public partial class Resort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RS_KEY;
		
		private int _RS_CNKEY;
		
		private string _RS_NAME;
		
		private string _RS_NAMELAT;
		
		private System.Data.Linq.Binary _ROWID;
		
		private System.DateTime _RS_UPDATEDATE;
		
		private EntitySet<HotelDictionary> _HotelDictionaries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRS_KEYChanging(int value);
    partial void OnRS_KEYChanged();
    partial void OnRS_CNKEYChanging(int value);
    partial void OnRS_CNKEYChanged();
    partial void OnRS_NAMEChanging(string value);
    partial void OnRS_NAMEChanged();
    partial void OnRS_NAMELATChanging(string value);
    partial void OnRS_NAMELATChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnRS_UPDATEDATEChanging(System.DateTime value);
    partial void OnRS_UPDATEDATEChanged();
    #endregion
		
		public Resort()
		{
			this._HotelDictionaries = new EntitySet<HotelDictionary>(new Action<HotelDictionary>(this.attach_HotelDictionaries), new Action<HotelDictionary>(this.detach_HotelDictionaries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int RS_KEY
		{
			get
			{
				return this._RS_KEY;
			}
			set
			{
				if ((this._RS_KEY != value))
				{
					this.OnRS_KEYChanging(value);
					this.SendPropertyChanging();
					this._RS_KEY = value;
					this.SendPropertyChanged("RS_KEY");
					this.OnRS_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_CNKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int RS_CNKEY
		{
			get
			{
				return this._RS_CNKEY;
			}
			set
			{
				if ((this._RS_CNKEY != value))
				{
					this.OnRS_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._RS_CNKEY = value;
					this.SendPropertyChanged("RS_CNKEY");
					this.OnRS_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RS_NAME
		{
			get
			{
				return this._RS_NAME;
			}
			set
			{
				if ((this._RS_NAME != value))
				{
					this.OnRS_NAMEChanging(value);
					this.SendPropertyChanging();
					this._RS_NAME = value;
					this.SendPropertyChanged("RS_NAME");
					this.OnRS_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_NAMELAT", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string RS_NAMELAT
		{
			get
			{
				return this._RS_NAMELAT;
			}
			set
			{
				if ((this._RS_NAMELAT != value))
				{
					this.OnRS_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._RS_NAMELAT = value;
					this.SendPropertyChanged("RS_NAMELAT");
					this.OnRS_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RS_UPDATEDATE", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime RS_UPDATEDATE
		{
			get
			{
				return this._RS_UPDATEDATE;
			}
			set
			{
				if ((this._RS_UPDATEDATE != value))
				{
					this.OnRS_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._RS_UPDATEDATE = value;
					this.SendPropertyChanged("RS_UPDATEDATE");
					this.OnRS_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resort_HotelDictionary", Storage="_HotelDictionaries", ThisKey="RS_KEY", OtherKey="HD_RSKEY")]
		public EntitySet<HotelDictionary> HotelDictionaries
		{
			get
			{
				return this._HotelDictionaries;
			}
			set
			{
				this._HotelDictionaries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HotelDictionaries(HotelDictionary entity)
		{
			this.SendPropertyChanging();
			entity.Resort = this;
		}
		
		private void detach_HotelDictionaries(HotelDictionary entity)
		{
			this.SendPropertyChanging();
			entity.Resort = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_Services")]
	public partial class LT_V_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VS_Id;
		
		private int _VS_VId;
		
		private int _VS_DLKey;
		
		private int _VS_PrintLine;
		
		private string _VS_Name;
		
		private System.Nullable<int> _VS_Code;
		
		private System.Nullable<int> _VS_Code1;
		
		private System.Nullable<int> _VS_Code2;
		
		private EntityRef<LT_V_Voucher> _LT_V_Voucher;
		
		private EntityRef<tbl_DogovorList> _tbl_DogovorList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVS_IdChanging(int value);
    partial void OnVS_IdChanged();
    partial void OnVS_VIdChanging(int value);
    partial void OnVS_VIdChanged();
    partial void OnVS_DLKeyChanging(int value);
    partial void OnVS_DLKeyChanged();
    partial void OnVS_PrintLineChanging(int value);
    partial void OnVS_PrintLineChanged();
    partial void OnVS_NameChanging(string value);
    partial void OnVS_NameChanged();
    partial void OnVS_CodeChanging(System.Nullable<int> value);
    partial void OnVS_CodeChanged();
    partial void OnVS_Code1Changing(System.Nullable<int> value);
    partial void OnVS_Code1Changed();
    partial void OnVS_Code2Changing(System.Nullable<int> value);
    partial void OnVS_Code2Changed();
    #endregion
		
		public LT_V_Service()
		{
			this._LT_V_Voucher = default(EntityRef<LT_V_Voucher>);
			this._tbl_DogovorList = default(EntityRef<tbl_DogovorList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VS_Id
		{
			get
			{
				return this._VS_Id;
			}
			set
			{
				if ((this._VS_Id != value))
				{
					this.OnVS_IdChanging(value);
					this.SendPropertyChanging();
					this._VS_Id = value;
					this.SendPropertyChanged("VS_Id");
					this.OnVS_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_VId", DbType="Int NOT NULL")]
		public int VS_VId
		{
			get
			{
				return this._VS_VId;
			}
			set
			{
				if ((this._VS_VId != value))
				{
					if (this._LT_V_Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVS_VIdChanging(value);
					this.SendPropertyChanging();
					this._VS_VId = value;
					this.SendPropertyChanged("VS_VId");
					this.OnVS_VIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_DLKey", DbType="Int NOT NULL")]
		public int VS_DLKey
		{
			get
			{
				return this._VS_DLKey;
			}
			set
			{
				if ((this._VS_DLKey != value))
				{
					if (this._tbl_DogovorList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVS_DLKeyChanging(value);
					this.SendPropertyChanging();
					this._VS_DLKey = value;
					this.SendPropertyChanged("VS_DLKey");
					this.OnVS_DLKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_PrintLine", DbType="Int NOT NULL")]
		public int VS_PrintLine
		{
			get
			{
				return this._VS_PrintLine;
			}
			set
			{
				if ((this._VS_PrintLine != value))
				{
					this.OnVS_PrintLineChanging(value);
					this.SendPropertyChanging();
					this._VS_PrintLine = value;
					this.SendPropertyChanged("VS_PrintLine");
					this.OnVS_PrintLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_Name", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string VS_Name
		{
			get
			{
				return this._VS_Name;
			}
			set
			{
				if ((this._VS_Name != value))
				{
					this.OnVS_NameChanging(value);
					this.SendPropertyChanging();
					this._VS_Name = value;
					this.SendPropertyChanged("VS_Name");
					this.OnVS_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_Code", DbType="int")]
		public System.Nullable<int> VS_Code
		{
			get
			{
				return this._VS_Code;
			}
			set
			{
				if ((this._VS_Code != value))
				{
					this.OnVS_CodeChanging(value);
					this.SendPropertyChanging();
					this._VS_Code = value;
					this.SendPropertyChanged("VS_Code");
					this.OnVS_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_Code1", DbType="int")]
		public System.Nullable<int> VS_Code1
		{
			get
			{
				return this._VS_Code1;
			}
			set
			{
				if ((this._VS_Code1 != value))
				{
					this.OnVS_Code1Changing(value);
					this.SendPropertyChanging();
					this._VS_Code1 = value;
					this.SendPropertyChanged("VS_Code1");
					this.OnVS_Code1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_Code2", DbType="int")]
		public System.Nullable<int> VS_Code2
		{
			get
			{
				return this._VS_Code2;
			}
			set
			{
				if ((this._VS_Code2 != value))
				{
					this.OnVS_Code2Changing(value);
					this.SendPropertyChanging();
					this._VS_Code2 = value;
					this.SendPropertyChanged("VS_Code2");
					this.OnVS_Code2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_Voucher_LT_V_Service", Storage="_LT_V_Voucher", ThisKey="VS_VId", OtherKey="V_Id", IsForeignKey=true)]
		public LT_V_Voucher LT_V_Voucher
		{
			get
			{
				return this._LT_V_Voucher.Entity;
			}
			set
			{
				LT_V_Voucher previousValue = this._LT_V_Voucher.Entity;
				if (((previousValue != value) 
							|| (this._LT_V_Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LT_V_Voucher.Entity = null;
						previousValue.LT_V_Services.Remove(this);
					}
					this._LT_V_Voucher.Entity = value;
					if ((value != null))
					{
						value.LT_V_Services.Add(this);
						this._VS_VId = value.V_Id;
					}
					else
					{
						this._VS_VId = default(int);
					}
					this.SendPropertyChanged("LT_V_Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_DogovorList_LT_V_Service", Storage="_tbl_DogovorList", ThisKey="VS_DLKey", OtherKey="DL_KEY", IsForeignKey=true)]
		public tbl_DogovorList tbl_DogovorList
		{
			get
			{
				return this._tbl_DogovorList.Entity;
			}
			set
			{
				tbl_DogovorList previousValue = this._tbl_DogovorList.Entity;
				if (((previousValue != value) 
							|| (this._tbl_DogovorList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_DogovorList.Entity = null;
						previousValue.LT_V_Services.Remove(this);
					}
					this._tbl_DogovorList.Entity = value;
					if ((value != null))
					{
						value.LT_V_Services.Add(this);
						this._VS_DLKey = value.DL_KEY;
					}
					else
					{
						this._VS_DLKey = default(int);
					}
					this.SendPropertyChanged("tbl_DogovorList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_Person")]
	public partial class LT_V_Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VT_Id;
		
		private int _VT_VId;
		
		private int _VT_TUKey;
		
		private string _VT_Name;
		
		private EntityRef<LT_V_Voucher> _LT_V_Voucher;
		
		private EntityRef<tbl_Turist> _tbl_Turist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVT_IdChanging(int value);
    partial void OnVT_IdChanged();
    partial void OnVT_VIdChanging(int value);
    partial void OnVT_VIdChanged();
    partial void OnVT_TUKeyChanging(int value);
    partial void OnVT_TUKeyChanged();
    partial void OnVT_NameChanging(string value);
    partial void OnVT_NameChanged();
    #endregion
		
		public LT_V_Person()
		{
			this._LT_V_Voucher = default(EntityRef<LT_V_Voucher>);
			this._tbl_Turist = default(EntityRef<tbl_Turist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VT_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VT_Id
		{
			get
			{
				return this._VT_Id;
			}
			set
			{
				if ((this._VT_Id != value))
				{
					this.OnVT_IdChanging(value);
					this.SendPropertyChanging();
					this._VT_Id = value;
					this.SendPropertyChanged("VT_Id");
					this.OnVT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VT_VId", DbType="Int NOT NULL")]
		public int VT_VId
		{
			get
			{
				return this._VT_VId;
			}
			set
			{
				if ((this._VT_VId != value))
				{
					if (this._LT_V_Voucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVT_VIdChanging(value);
					this.SendPropertyChanging();
					this._VT_VId = value;
					this.SendPropertyChanged("VT_VId");
					this.OnVT_VIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VT_TUKey", DbType="Int NOT NULL")]
		public int VT_TUKey
		{
			get
			{
				return this._VT_TUKey;
			}
			set
			{
				if ((this._VT_TUKey != value))
				{
					if (this._tbl_Turist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVT_TUKeyChanging(value);
					this.SendPropertyChanging();
					this._VT_TUKey = value;
					this.SendPropertyChanged("VT_TUKey");
					this.OnVT_TUKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VT_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string VT_Name
		{
			get
			{
				return this._VT_Name;
			}
			set
			{
				if ((this._VT_Name != value))
				{
					this.OnVT_NameChanging(value);
					this.SendPropertyChanging();
					this._VT_Name = value;
					this.SendPropertyChanged("VT_Name");
					this.OnVT_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_Voucher_LT_V_Person", Storage="_LT_V_Voucher", ThisKey="VT_VId", OtherKey="V_Id", IsForeignKey=true)]
		public LT_V_Voucher LT_V_Voucher
		{
			get
			{
				return this._LT_V_Voucher.Entity;
			}
			set
			{
				LT_V_Voucher previousValue = this._LT_V_Voucher.Entity;
				if (((previousValue != value) 
							|| (this._LT_V_Voucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LT_V_Voucher.Entity = null;
						previousValue.LT_V_Persons.Remove(this);
					}
					this._LT_V_Voucher.Entity = value;
					if ((value != null))
					{
						value.LT_V_Persons.Add(this);
						this._VT_VId = value.V_Id;
					}
					else
					{
						this._VT_VId = default(int);
					}
					this.SendPropertyChanged("LT_V_Voucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Turist_LT_V_Person", Storage="_tbl_Turist", ThisKey="VT_TUKey", OtherKey="TU_KEY", IsForeignKey=true)]
		public tbl_Turist tbl_Turist
		{
			get
			{
				return this._tbl_Turist.Entity;
			}
			set
			{
				tbl_Turist previousValue = this._tbl_Turist.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Turist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Turist.Entity = null;
						previousValue.LT_V_Persons.Remove(this);
					}
					this._tbl_Turist.Entity = value;
					if ((value != null))
					{
						value.LT_V_Persons.Add(this);
						this._VT_TUKey = value.TU_KEY;
					}
					else
					{
						this._VT_TUKey = default(int);
					}
					this.SendPropertyChanged("tbl_Turist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_Voucher")]
	public partial class LT_V_Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _V_Id;
		
		private System.DateTime _V_CRDate;
		
		private System.DateTime _V_DateBeg;
		
		private System.DateTime _V_DateEnd;
		
		private int _V_DGKey = default(int);
		
		private string _V_Number = default(string);
		
		private string _V_BronNumber;
		
		private int _V_PRKey = default(int);
		
		private string _V_PartnerName;
		
		private string _V_PartnerContact;
		
		private int _V_CNKey = default(int);
		
		private string _V_CountryName;
		
		private string _V_ContactPerson;
		
		private int _V_TRKey = default(int);
		
		private string _V_TourName;
		
		private System.Nullable<System.DateTime> _V_AnnulDate;
		
		private System.Nullable<System.DateTime> _V_PrintDate;
		
		private int _V_VCId;
		
		private string _V_Reis;
		
		private bool _V_PrintByWeb;
		
		private EntitySet<LT_V_Service> _LT_V_Services;
		
		private EntitySet<LT_V_Person> _LT_V_Persons;
		
		private EntityRef<tbl_Country> _tbl_Country;
		
		private EntityRef<tbl_Dogovor> _tbl_Dogovor;
		
		private EntityRef<tbl_Partner> _tbl_Partner;
		
		private EntityRef<tbl_TurList> _tbl_TurList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnV_IdChanging(int value);
    partial void OnV_IdChanged();
    partial void OnV_CRDateChanging(System.DateTime value);
    partial void OnV_CRDateChanged();
    partial void OnV_DateBegChanging(System.DateTime value);
    partial void OnV_DateBegChanged();
    partial void OnV_DateEndChanging(System.DateTime value);
    partial void OnV_DateEndChanged();
    partial void OnV_BronNumberChanging(string value);
    partial void OnV_BronNumberChanged();
    partial void OnV_PartnerNameChanging(string value);
    partial void OnV_PartnerNameChanged();
    partial void OnV_PartnerContactChanging(string value);
    partial void OnV_PartnerContactChanged();
    partial void OnV_CountryNameChanging(string value);
    partial void OnV_CountryNameChanged();
    partial void OnV_ContactPersonChanging(string value);
    partial void OnV_ContactPersonChanged();
    partial void OnV_TourNameChanging(string value);
    partial void OnV_TourNameChanged();
    partial void OnV_AnnulDateChanging(System.Nullable<System.DateTime> value);
    partial void OnV_AnnulDateChanged();
    partial void OnV_PrintDateChanging(System.Nullable<System.DateTime> value);
    partial void OnV_PrintDateChanged();
    partial void OnV_VCIdChanging(int value);
    partial void OnV_VCIdChanged();
    partial void OnV_ReisChanging(string value);
    partial void OnV_ReisChanged();
    partial void OnV_PrintByWebChanging(bool value);
    partial void OnV_PrintByWebChanged();
    #endregion
		
		public LT_V_Voucher()
		{
			this._LT_V_Services = new EntitySet<LT_V_Service>(new Action<LT_V_Service>(this.attach_LT_V_Services), new Action<LT_V_Service>(this.detach_LT_V_Services));
			this._LT_V_Persons = new EntitySet<LT_V_Person>(new Action<LT_V_Person>(this.attach_LT_V_Persons), new Action<LT_V_Person>(this.detach_LT_V_Persons));
			this._tbl_Country = default(EntityRef<tbl_Country>);
			this._tbl_Dogovor = default(EntityRef<tbl_Dogovor>);
			this._tbl_Partner = default(EntityRef<tbl_Partner>);
			this._tbl_TurList = default(EntityRef<tbl_TurList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int V_Id
		{
			get
			{
				return this._V_Id;
			}
			set
			{
				if ((this._V_Id != value))
				{
					this.OnV_IdChanging(value);
					this.SendPropertyChanging();
					this._V_Id = value;
					this.SendPropertyChanged("V_Id");
					this.OnV_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_CRDate", DbType="DateTime NOT NULL")]
		public System.DateTime V_CRDate
		{
			get
			{
				return this._V_CRDate;
			}
			set
			{
				if ((this._V_CRDate != value))
				{
					this.OnV_CRDateChanging(value);
					this.SendPropertyChanging();
					this._V_CRDate = value;
					this.SendPropertyChanged("V_CRDate");
					this.OnV_CRDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_DateBeg", DbType="DateTime NOT NULL")]
		public System.DateTime V_DateBeg
		{
			get
			{
				return this._V_DateBeg;
			}
			set
			{
				if ((this._V_DateBeg != value))
				{
					this.OnV_DateBegChanging(value);
					this.SendPropertyChanging();
					this._V_DateBeg = value;
					this.SendPropertyChanged("V_DateBeg");
					this.OnV_DateBegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_DateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime V_DateEnd
		{
			get
			{
				return this._V_DateEnd;
			}
			set
			{
				if ((this._V_DateEnd != value))
				{
					this.OnV_DateEndChanging(value);
					this.SendPropertyChanging();
					this._V_DateEnd = value;
					this.SendPropertyChanged("V_DateEnd");
					this.OnV_DateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_DGKey", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int V_DGKey
		{
			get
			{
				return this._V_DGKey;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_Number", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string V_Number
		{
			get
			{
				return this._V_Number;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_BronNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string V_BronNumber
		{
			get
			{
				return this._V_BronNumber;
			}
			set
			{
				if ((this._V_BronNumber != value))
				{
					this.OnV_BronNumberChanging(value);
					this.SendPropertyChanging();
					this._V_BronNumber = value;
					this.SendPropertyChanged("V_BronNumber");
					this.OnV_BronNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_PRKey", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int V_PRKey
		{
			get
			{
				return this._V_PRKey;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_PartnerName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string V_PartnerName
		{
			get
			{
				return this._V_PartnerName;
			}
			set
			{
				if ((this._V_PartnerName != value))
				{
					this.OnV_PartnerNameChanging(value);
					this.SendPropertyChanging();
					this._V_PartnerName = value;
					this.SendPropertyChanged("V_PartnerName");
					this.OnV_PartnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_PartnerContact", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string V_PartnerContact
		{
			get
			{
				return this._V_PartnerContact;
			}
			set
			{
				if ((this._V_PartnerContact != value))
				{
					this.OnV_PartnerContactChanging(value);
					this.SendPropertyChanging();
					this._V_PartnerContact = value;
					this.SendPropertyChanged("V_PartnerContact");
					this.OnV_PartnerContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_CNKey", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int V_CNKey
		{
			get
			{
				return this._V_CNKey;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_CountryName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string V_CountryName
		{
			get
			{
				return this._V_CountryName;
			}
			set
			{
				if ((this._V_CountryName != value))
				{
					this.OnV_CountryNameChanging(value);
					this.SendPropertyChanging();
					this._V_CountryName = value;
					this.SendPropertyChanged("V_CountryName");
					this.OnV_CountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_ContactPerson", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string V_ContactPerson
		{
			get
			{
				return this._V_ContactPerson;
			}
			set
			{
				if ((this._V_ContactPerson != value))
				{
					this.OnV_ContactPersonChanging(value);
					this.SendPropertyChanging();
					this._V_ContactPerson = value;
					this.SendPropertyChanged("V_ContactPerson");
					this.OnV_ContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_TRKey", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int V_TRKey
		{
			get
			{
				return this._V_TRKey;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_TourName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string V_TourName
		{
			get
			{
				return this._V_TourName;
			}
			set
			{
				if ((this._V_TourName != value))
				{
					this.OnV_TourNameChanging(value);
					this.SendPropertyChanging();
					this._V_TourName = value;
					this.SendPropertyChanged("V_TourName");
					this.OnV_TourNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_AnnulDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> V_AnnulDate
		{
			get
			{
				return this._V_AnnulDate;
			}
			set
			{
				if ((this._V_AnnulDate != value))
				{
					this.OnV_AnnulDateChanging(value);
					this.SendPropertyChanging();
					this._V_AnnulDate = value;
					this.SendPropertyChanged("V_AnnulDate");
					this.OnV_AnnulDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_PrintDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> V_PrintDate
		{
			get
			{
				return this._V_PrintDate;
			}
			set
			{
				if ((this._V_PrintDate != value))
				{
					this.OnV_PrintDateChanging(value);
					this.SendPropertyChanging();
					this._V_PrintDate = value;
					this.SendPropertyChanged("V_PrintDate");
					this.OnV_PrintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_VCId", DbType="int")]
		public int V_VCId
		{
			get
			{
				return this._V_VCId;
			}
			set
			{
				if ((this._V_VCId != value))
				{
					this.OnV_VCIdChanging(value);
					this.SendPropertyChanging();
					this._V_VCId = value;
					this.SendPropertyChanged("V_VCId");
					this.OnV_VCIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_Reis", DbType="varchar(200) not null", CanBeNull=false)]
		public string V_Reis
		{
			get
			{
				return this._V_Reis;
			}
			set
			{
				if ((this._V_Reis != value))
				{
					this.OnV_ReisChanging(value);
					this.SendPropertyChanging();
					this._V_Reis = value;
					this.SendPropertyChanged("V_Reis");
					this.OnV_ReisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_V_PrintByWeb", DbType="bit not null")]
		public bool V_PrintByWeb
		{
			get
			{
				return this._V_PrintByWeb;
			}
			set
			{
				if ((this._V_PrintByWeb != value))
				{
					this.OnV_PrintByWebChanging(value);
					this.SendPropertyChanging();
					this._V_PrintByWeb = value;
					this.SendPropertyChanged("V_PrintByWeb");
					this.OnV_PrintByWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_Voucher_LT_V_Service", Storage="_LT_V_Services", ThisKey="V_Id", OtherKey="VS_VId")]
		public EntitySet<LT_V_Service> LT_V_Services
		{
			get
			{
				return this._LT_V_Services;
			}
			set
			{
				this._LT_V_Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_Voucher_LT_V_Person", Storage="_LT_V_Persons", ThisKey="V_Id", OtherKey="VT_VId")]
		public EntitySet<LT_V_Person> LT_V_Persons
		{
			get
			{
				return this._LT_V_Persons;
			}
			set
			{
				this._LT_V_Persons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Country_LT_V_Voucher", Storage="_tbl_Country", ThisKey="V_CNKey", OtherKey="CN_KEY", IsForeignKey=true)]
		public tbl_Country tbl_Country
		{
			get
			{
				return this._tbl_Country.Entity;
			}
			set
			{
				tbl_Country previousValue = this._tbl_Country.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Country.Entity = null;
						previousValue.LT_V_Vouchers.Remove(this);
					}
					this._tbl_Country.Entity = value;
					if ((value != null))
					{
						value.LT_V_Vouchers.Add(this);
						this._V_CNKey = value.CN_KEY;
					}
					else
					{
						this._V_CNKey = default(int);
					}
					this.SendPropertyChanged("tbl_Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dogovor_LT_V_Voucher", Storage="_tbl_Dogovor", ThisKey="V_DGKey", OtherKey="DG_Key", IsForeignKey=true)]
		public tbl_Dogovor tbl_Dogovor
		{
			get
			{
				return this._tbl_Dogovor.Entity;
			}
			set
			{
				tbl_Dogovor previousValue = this._tbl_Dogovor.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Dogovor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Dogovor.Entity = null;
						previousValue.LT_V_Vouchers.Remove(this);
					}
					this._tbl_Dogovor.Entity = value;
					if ((value != null))
					{
						value.LT_V_Vouchers.Add(this);
						this._V_DGKey = value.DG_Key;
					}
					else
					{
						this._V_DGKey = default(int);
					}
					this.SendPropertyChanged("tbl_Dogovor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Partner_LT_V_Voucher", Storage="_tbl_Partner", ThisKey="V_PRKey", OtherKey="PR_KEY", IsForeignKey=true)]
		public tbl_Partner tbl_Partner
		{
			get
			{
				return this._tbl_Partner.Entity;
			}
			set
			{
				tbl_Partner previousValue = this._tbl_Partner.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Partner.Entity = null;
						previousValue.LT_V_Vouchers.Remove(this);
					}
					this._tbl_Partner.Entity = value;
					if ((value != null))
					{
						value.LT_V_Vouchers.Add(this);
						this._V_PRKey = value.PR_KEY;
					}
					else
					{
						this._V_PRKey = default(int);
					}
					this.SendPropertyChanged("tbl_Partner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_LT_V_Voucher", Storage="_tbl_TurList", ThisKey="V_TRKey", OtherKey="TL_KEY", IsForeignKey=true)]
		public tbl_TurList tbl_TurList
		{
			get
			{
				return this._tbl_TurList.Entity;
			}
			set
			{
				tbl_TurList previousValue = this._tbl_TurList.Entity;
				if (((previousValue != value) 
							|| (this._tbl_TurList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_TurList.Entity = null;
						previousValue.LT_V_Vouchers.Remove(this);
					}
					this._tbl_TurList.Entity = value;
					if ((value != null))
					{
						value.LT_V_Vouchers.Add(this);
						this._V_TRKey = value.TL_KEY;
					}
					else
					{
						this._V_TRKey = default(int);
					}
					this.SendPropertyChanged("tbl_TurList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LT_V_Services(LT_V_Service entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_Voucher = this;
		}
		
		private void detach_LT_V_Services(LT_V_Service entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_Voucher = null;
		}
		
		private void attach_LT_V_Persons(LT_V_Person entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_Voucher = this;
		}
		
		private void detach_LT_V_Persons(LT_V_Person entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_Voucher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_MappingPartner")]
	public partial class LT_V_MappingPartner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VMP_PRKey;
		
		private System.Data.Linq.Binary _VMP_Image;
		
		private string _VMP_DateFormat;
		
		private string _VMP_ContactPerson;
		
		private bool _VMP_ReisOut;
		
		private string _VMP_TuristFormat;
		
		private EntityRef<tbl_Partner> _tbl_Partner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVMP_PRKeyChanging(int value);
    partial void OnVMP_PRKeyChanged();
    partial void OnVMP_ImageChanging(System.Data.Linq.Binary value);
    partial void OnVMP_ImageChanged();
    partial void OnVMP_DateFormatChanging(string value);
    partial void OnVMP_DateFormatChanged();
    partial void OnVMP_ContactPersonChanging(string value);
    partial void OnVMP_ContactPersonChanged();
    partial void OnVMP_ReisOutChanging(bool value);
    partial void OnVMP_ReisOutChanged();
    partial void OnVMP_TuristFormatChanging(string value);
    partial void OnVMP_TuristFormatChanged();
    #endregion
		
		public LT_V_MappingPartner()
		{
			this._tbl_Partner = default(EntityRef<tbl_Partner>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VMP_PRKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VMP_PRKey
		{
			get
			{
				return this._VMP_PRKey;
			}
			set
			{
				if ((this._VMP_PRKey != value))
				{
					if (this._tbl_Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVMP_PRKeyChanging(value);
					this.SendPropertyChanging();
					this._VMP_PRKey = value;
					this.SendPropertyChanged("VMP_PRKey");
					this.OnVMP_PRKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VMP_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary VMP_Image
		{
			get
			{
				return this._VMP_Image;
			}
			set
			{
				if ((this._VMP_Image != value))
				{
					this.OnVMP_ImageChanging(value);
					this.SendPropertyChanging();
					this._VMP_Image = value;
					this.SendPropertyChanged("VMP_Image");
					this.OnVMP_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VMP_DateFormat", DbType="varchar(20) not null", CanBeNull=false)]
		public string VMP_DateFormat
		{
			get
			{
				return this._VMP_DateFormat;
			}
			set
			{
				if ((this._VMP_DateFormat != value))
				{
					this.OnVMP_DateFormatChanging(value);
					this.SendPropertyChanging();
					this._VMP_DateFormat = value;
					this.SendPropertyChanged("VMP_DateFormat");
					this.OnVMP_DateFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VMP_ContactPerson", DbType="varchar(200) not null", CanBeNull=false)]
		public string VMP_ContactPerson
		{
			get
			{
				return this._VMP_ContactPerson;
			}
			set
			{
				if ((this._VMP_ContactPerson != value))
				{
					this.OnVMP_ContactPersonChanging(value);
					this.SendPropertyChanging();
					this._VMP_ContactPerson = value;
					this.SendPropertyChanged("VMP_ContactPerson");
					this.OnVMP_ContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VMP_ReisOut", DbType="bit not null")]
		public bool VMP_ReisOut
		{
			get
			{
				return this._VMP_ReisOut;
			}
			set
			{
				if ((this._VMP_ReisOut != value))
				{
					this.OnVMP_ReisOutChanging(value);
					this.SendPropertyChanging();
					this._VMP_ReisOut = value;
					this.SendPropertyChanged("VMP_ReisOut");
					this.OnVMP_ReisOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VMP_TuristFormat", DbType="varchar(max) not null", CanBeNull=false)]
		public string VMP_TuristFormat
		{
			get
			{
				return this._VMP_TuristFormat;
			}
			set
			{
				if ((this._VMP_TuristFormat != value))
				{
					this.OnVMP_TuristFormatChanging(value);
					this.SendPropertyChanging();
					this._VMP_TuristFormat = value;
					this.SendPropertyChanged("VMP_TuristFormat");
					this.OnVMP_TuristFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Partner_LT_V_MappingPartner", Storage="_tbl_Partner", ThisKey="VMP_PRKey", OtherKey="PR_KEY", IsForeignKey=true)]
		public tbl_Partner tbl_Partner
		{
			get
			{
				return this._tbl_Partner.Entity;
			}
			set
			{
				tbl_Partner previousValue = this._tbl_Partner.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Partner.Entity = null;
						previousValue.LT_V_MappingPartner = null;
					}
					this._tbl_Partner.Entity = value;
					if ((value != null))
					{
						value.LT_V_MappingPartner = this;
						this._VMP_PRKey = value.PR_KEY;
					}
					else
					{
						this._VMP_PRKey = default(int);
					}
					this.SendPropertyChanged("tbl_Partner");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SV_KEY;
		
		private string _SV_NAME;
		
		private string _SV_NAMELAT;
		
		private System.Nullable<short> _SV_TYPE;
		
		private System.Nullable<int> _SV_CONTROL;
		
		private System.Nullable<short> _SV_ISCITY;
		
		private System.Nullable<short> _SV_ISSUBCODE1;
		
		private System.Nullable<short> _SV_ISSUBCODE2;
		
		private System.Nullable<short> _SV_ROUNDBRUTTO;
		
		private System.Data.Linq.Binary _ROWID;
		
		private string _SV_StdKey;
		
		private string _SV_Code;
		
		private short _SV_IsDuration;
		
		private short _SV_UseManualInput;
		
		private System.Nullable<byte> _IsDeleted;
		
		private System.Nullable<System.DateTime> _DateIns;
		
		private string _AgentCodeIns;
		
		private System.Nullable<System.DateTime> _DateChange;
		
		private string _AgentCodeChng;
		
		private System.Nullable<byte> _IntoTKT;
		
		private short _SV_QUOTED;
		
		private System.Nullable<short> _SV_IsIndividual;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<TurService> _TurServices;
		
		private EntityRef<LT_V_ServiceNotUse> _LT_V_ServiceNotUse;
		
		private EntitySet<LT_V_ShablonFormatService> _LT_V_ShablonFormatServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSV_KEYChanging(int value);
    partial void OnSV_KEYChanged();
    partial void OnSV_NAMEChanging(string value);
    partial void OnSV_NAMEChanged();
    partial void OnSV_NAMELATChanging(string value);
    partial void OnSV_NAMELATChanged();
    partial void OnSV_TYPEChanging(System.Nullable<short> value);
    partial void OnSV_TYPEChanged();
    partial void OnSV_CONTROLChanging(System.Nullable<int> value);
    partial void OnSV_CONTROLChanged();
    partial void OnSV_ISCITYChanging(System.Nullable<short> value);
    partial void OnSV_ISCITYChanged();
    partial void OnSV_ISSUBCODE1Changing(System.Nullable<short> value);
    partial void OnSV_ISSUBCODE1Changed();
    partial void OnSV_ISSUBCODE2Changing(System.Nullable<short> value);
    partial void OnSV_ISSUBCODE2Changed();
    partial void OnSV_ROUNDBRUTTOChanging(System.Nullable<short> value);
    partial void OnSV_ROUNDBRUTTOChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnSV_StdKeyChanging(string value);
    partial void OnSV_StdKeyChanged();
    partial void OnSV_CodeChanging(string value);
    partial void OnSV_CodeChanged();
    partial void OnSV_IsDurationChanging(short value);
    partial void OnSV_IsDurationChanged();
    partial void OnSV_UseManualInputChanging(short value);
    partial void OnSV_UseManualInputChanged();
    partial void OnIsDeletedChanging(System.Nullable<byte> value);
    partial void OnIsDeletedChanged();
    partial void OnDateInsChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInsChanged();
    partial void OnAgentCodeInsChanging(string value);
    partial void OnAgentCodeInsChanged();
    partial void OnDateChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChangeChanged();
    partial void OnAgentCodeChngChanging(string value);
    partial void OnAgentCodeChngChanged();
    partial void OnIntoTKTChanging(System.Nullable<byte> value);
    partial void OnIntoTKTChanged();
    partial void OnSV_QUOTEDChanging(short value);
    partial void OnSV_QUOTEDChanged();
    partial void OnSV_IsIndividualChanging(System.Nullable<short> value);
    partial void OnSV_IsIndividualChanged();
    #endregion
		
		public Service()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._TurServices = new EntitySet<TurService>(new Action<TurService>(this.attach_TurServices), new Action<TurService>(this.detach_TurServices));
			this._LT_V_ServiceNotUse = default(EntityRef<LT_V_ServiceNotUse>);
			this._LT_V_ShablonFormatServices = new EntitySet<LT_V_ShablonFormatService>(new Action<LT_V_ShablonFormatService>(this.attach_LT_V_ShablonFormatServices), new Action<LT_V_ShablonFormatService>(this.detach_LT_V_ShablonFormatServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int SV_KEY
		{
			get
			{
				return this._SV_KEY;
			}
			set
			{
				if ((this._SV_KEY != value))
				{
					this.OnSV_KEYChanging(value);
					this.SendPropertyChanging();
					this._SV_KEY = value;
					this.SendPropertyChanged("SV_KEY");
					this.OnSV_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_NAME", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SV_NAME
		{
			get
			{
				return this._SV_NAME;
			}
			set
			{
				if ((this._SV_NAME != value))
				{
					this.OnSV_NAMEChanging(value);
					this.SendPropertyChanging();
					this._SV_NAME = value;
					this.SendPropertyChanged("SV_NAME");
					this.OnSV_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_NAMELAT", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SV_NAMELAT
		{
			get
			{
				return this._SV_NAMELAT;
			}
			set
			{
				if ((this._SV_NAMELAT != value))
				{
					this.OnSV_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._SV_NAMELAT = value;
					this.SendPropertyChanged("SV_NAMELAT");
					this.OnSV_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_TYPE", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SV_TYPE
		{
			get
			{
				return this._SV_TYPE;
			}
			set
			{
				if ((this._SV_TYPE != value))
				{
					this.OnSV_TYPEChanging(value);
					this.SendPropertyChanging();
					this._SV_TYPE = value;
					this.SendPropertyChanged("SV_TYPE");
					this.OnSV_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_CONTROL", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SV_CONTROL
		{
			get
			{
				return this._SV_CONTROL;
			}
			set
			{
				if ((this._SV_CONTROL != value))
				{
					this.OnSV_CONTROLChanging(value);
					this.SendPropertyChanging();
					this._SV_CONTROL = value;
					this.SendPropertyChanged("SV_CONTROL");
					this.OnSV_CONTROLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_ISCITY", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SV_ISCITY
		{
			get
			{
				return this._SV_ISCITY;
			}
			set
			{
				if ((this._SV_ISCITY != value))
				{
					this.OnSV_ISCITYChanging(value);
					this.SendPropertyChanging();
					this._SV_ISCITY = value;
					this.SendPropertyChanged("SV_ISCITY");
					this.OnSV_ISCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_ISSUBCODE1", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SV_ISSUBCODE1
		{
			get
			{
				return this._SV_ISSUBCODE1;
			}
			set
			{
				if ((this._SV_ISSUBCODE1 != value))
				{
					this.OnSV_ISSUBCODE1Changing(value);
					this.SendPropertyChanging();
					this._SV_ISSUBCODE1 = value;
					this.SendPropertyChanged("SV_ISSUBCODE1");
					this.OnSV_ISSUBCODE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_ISSUBCODE2", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SV_ISSUBCODE2
		{
			get
			{
				return this._SV_ISSUBCODE2;
			}
			set
			{
				if ((this._SV_ISSUBCODE2 != value))
				{
					this.OnSV_ISSUBCODE2Changing(value);
					this.SendPropertyChanging();
					this._SV_ISSUBCODE2 = value;
					this.SendPropertyChanged("SV_ISSUBCODE2");
					this.OnSV_ISSUBCODE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_ROUNDBRUTTO", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SV_ROUNDBRUTTO
		{
			get
			{
				return this._SV_ROUNDBRUTTO;
			}
			set
			{
				if ((this._SV_ROUNDBRUTTO != value))
				{
					this.OnSV_ROUNDBRUTTOChanging(value);
					this.SendPropertyChanging();
					this._SV_ROUNDBRUTTO = value;
					this.SendPropertyChanged("SV_ROUNDBRUTTO");
					this.OnSV_ROUNDBRUTTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string SV_StdKey
		{
			get
			{
				return this._SV_StdKey;
			}
			set
			{
				if ((this._SV_StdKey != value))
				{
					this.OnSV_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._SV_StdKey = value;
					this.SendPropertyChanged("SV_StdKey");
					this.OnSV_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_Code", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string SV_Code
		{
			get
			{
				return this._SV_Code;
			}
			set
			{
				if ((this._SV_Code != value))
				{
					this.OnSV_CodeChanging(value);
					this.SendPropertyChanging();
					this._SV_Code = value;
					this.SendPropertyChanged("SV_Code");
					this.OnSV_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_IsDuration", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short SV_IsDuration
		{
			get
			{
				return this._SV_IsDuration;
			}
			set
			{
				if ((this._SV_IsDuration != value))
				{
					this.OnSV_IsDurationChanging(value);
					this.SendPropertyChanging();
					this._SV_IsDuration = value;
					this.SendPropertyChanged("SV_IsDuration");
					this.OnSV_IsDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_UseManualInput", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short SV_UseManualInput
		{
			get
			{
				return this._SV_UseManualInput;
			}
			set
			{
				if ((this._SV_UseManualInput != value))
				{
					this.OnSV_UseManualInputChanging(value);
					this.SendPropertyChanging();
					this._SV_UseManualInput = value;
					this.SendPropertyChanged("SV_UseManualInput");
					this.OnSV_UseManualInputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIns", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateIns
		{
			get
			{
				return this._DateIns;
			}
			set
			{
				if ((this._DateIns != value))
				{
					this.OnDateInsChanging(value);
					this.SendPropertyChanging();
					this._DateIns = value;
					this.SendPropertyChanged("DateIns");
					this.OnDateInsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentCodeIns", DbType="VarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string AgentCodeIns
		{
			get
			{
				return this._AgentCodeIns;
			}
			set
			{
				if ((this._AgentCodeIns != value))
				{
					this.OnAgentCodeInsChanging(value);
					this.SendPropertyChanging();
					this._AgentCodeIns = value;
					this.SendPropertyChanged("AgentCodeIns");
					this.OnAgentCodeInsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChange", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateChange
		{
			get
			{
				return this._DateChange;
			}
			set
			{
				if ((this._DateChange != value))
				{
					this.OnDateChangeChanging(value);
					this.SendPropertyChanging();
					this._DateChange = value;
					this.SendPropertyChanged("DateChange");
					this.OnDateChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentCodeChng", DbType="VarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string AgentCodeChng
		{
			get
			{
				return this._AgentCodeChng;
			}
			set
			{
				if ((this._AgentCodeChng != value))
				{
					this.OnAgentCodeChngChanging(value);
					this.SendPropertyChanging();
					this._AgentCodeChng = value;
					this.SendPropertyChanged("AgentCodeChng");
					this.OnAgentCodeChngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntoTKT", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> IntoTKT
		{
			get
			{
				return this._IntoTKT;
			}
			set
			{
				if ((this._IntoTKT != value))
				{
					this.OnIntoTKTChanging(value);
					this.SendPropertyChanging();
					this._IntoTKT = value;
					this.SendPropertyChanged("IntoTKT");
					this.OnIntoTKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_QUOTED", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short SV_QUOTED
		{
			get
			{
				return this._SV_QUOTED;
			}
			set
			{
				if ((this._SV_QUOTED != value))
				{
					this.OnSV_QUOTEDChanging(value);
					this.SendPropertyChanging();
					this._SV_QUOTED = value;
					this.SendPropertyChanged("SV_QUOTED");
					this.OnSV_QUOTEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_IsIndividual", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> SV_IsIndividual
		{
			get
			{
				return this._SV_IsIndividual;
			}
			set
			{
				if ((this._SV_IsIndividual != value))
				{
					this.OnSV_IsIndividualChanging(value);
					this.SendPropertyChanging();
					this._SV_IsIndividual = value;
					this.SendPropertyChanged("SV_IsIndividual");
					this.OnSV_IsIndividualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="SV_KEY", OtherKey="DL_SVKEY")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_TurService", Storage="_TurServices", ThisKey="SV_KEY", OtherKey="TS_SVKEY")]
		public EntitySet<TurService> TurServices
		{
			get
			{
				return this._TurServices;
			}
			set
			{
				this._TurServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LT_V_ServiceNotUse", Storage="_LT_V_ServiceNotUse", ThisKey="SV_KEY", OtherKey="SV_Key", IsUnique=true, IsForeignKey=false)]
		public LT_V_ServiceNotUse LT_V_ServiceNotUse
		{
			get
			{
				return this._LT_V_ServiceNotUse.Entity;
			}
			set
			{
				LT_V_ServiceNotUse previousValue = this._LT_V_ServiceNotUse.Entity;
				if (((previousValue != value) 
							|| (this._LT_V_ServiceNotUse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LT_V_ServiceNotUse.Entity = null;
						previousValue.Service = null;
					}
					this._LT_V_ServiceNotUse.Entity = value;
					if ((value != null))
					{
						value.Service = this;
					}
					this.SendPropertyChanged("LT_V_ServiceNotUse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LT_V_ShablonFormatService", Storage="_LT_V_ShablonFormatServices", ThisKey="SV_KEY", OtherKey="SHFS_SVKey")]
		public EntitySet<LT_V_ShablonFormatService> LT_V_ShablonFormatServices
		{
			get
			{
				return this._LT_V_ShablonFormatServices;
			}
			set
			{
				this._LT_V_ShablonFormatServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_LT_V_ShablonFormatServices(LT_V_ShablonFormatService entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_LT_V_ShablonFormatServices(LT_V_ShablonFormatService entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transfer")]
	public partial class Transfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TF_KEY;
		
		private string _TF_NAME;
		
		private string _TF_NAMELAT;
		
		private System.Nullable<System.DateTime> _TF_TIMEBEG;
		
		private System.Nullable<System.DateTime> _TF_TIMEEND;
		
		private string _TF_TIME;
		
		private string _TF_PLACEFROM;
		
		private string _TF_PLACETO;
		
		private System.Nullable<short> _TF_ISMAIN;
		
		private System.Nullable<int> _TF_CTKEY;
		
		private System.Data.Linq.Binary _ROWID;
		
		private string _TF_StdKey;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<TurService> _TurServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTF_KEYChanging(int value);
    partial void OnTF_KEYChanged();
    partial void OnTF_NAMEChanging(string value);
    partial void OnTF_NAMEChanged();
    partial void OnTF_NAMELATChanging(string value);
    partial void OnTF_NAMELATChanged();
    partial void OnTF_TIMEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnTF_TIMEBEGChanged();
    partial void OnTF_TIMEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnTF_TIMEENDChanged();
    partial void OnTF_TIMEChanging(string value);
    partial void OnTF_TIMEChanged();
    partial void OnTF_PLACEFROMChanging(string value);
    partial void OnTF_PLACEFROMChanged();
    partial void OnTF_PLACETOChanging(string value);
    partial void OnTF_PLACETOChanged();
    partial void OnTF_ISMAINChanging(System.Nullable<short> value);
    partial void OnTF_ISMAINChanged();
    partial void OnTF_CTKEYChanging(System.Nullable<int> value);
    partial void OnTF_CTKEYChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnTF_StdKeyChanging(string value);
    partial void OnTF_StdKeyChanged();
    #endregion
		
		public Transfer()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._TurServices = new EntitySet<TurService>(new Action<TurService>(this.attach_TurServices), new Action<TurService>(this.detach_TurServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TF_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int TF_KEY
		{
			get
			{
				return this._TF_KEY;
			}
			set
			{
				if ((this._TF_KEY != value))
				{
					this.OnTF_KEYChanging(value);
					this.SendPropertyChanging();
					this._TF_KEY = value;
					this.SendPropertyChanged("TF_KEY");
					this.OnTF_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TF_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TF_NAME
		{
			get
			{
				return this._TF_NAME;
			}
			set
			{
				if ((this._TF_NAME != value))
				{
					this.OnTF_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TF_NAME = value;
					this.SendPropertyChanged("TF_NAME");
					this.OnTF_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TF_NAMELAT", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string TF_NAMELAT
		{
			get
			{
				return this._TF_NAMELAT;
			}
			set
			{
				if ((this._TF_NAMELAT != value))
				{
					this.OnTF_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._TF_NAMELAT = value;
					this.SendPropertyChanged("TF_NAMELAT");
					this.OnTF_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TF_TIMEBEG", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TF_TIMEBEG
		{
			get
			{
				return this._TF_TIMEBEG;
			}
			set
			{
				if ((this._TF_TIMEBEG != value))
				{
					this.OnTF_TIMEBEGChanging(value);
					this.SendPropertyChanging();
					this._TF_TIMEBEG = value;
					this.SendPropertyChanged("TF_TIMEBEG");
					this.OnTF_TIMEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TF_TIMEEND", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TF_TIMEEND
		{
			get
			{
				return this._TF_TIMEEND;
			}
			set
			{
				if ((this._TF_TIMEEND != value))
				{
					this.OnTF_TIMEENDChanging(value);
					this.SendPropertyChanging();
					this._TF_TIMEEND = value;
					this.SendPropertyChanged("TF_TIMEEND");
					this.OnTF_TIMEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TF_TIME", DbType="VarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string TF_TIME
		{
			get
			{
				return this._TF_TIME;
			}
			set
			{
				if ((this._TF_TIME != value))
				{
					this.OnTF_TIMEChanging(value);
					this.SendPropertyChanging();
					this._TF_TIME = value;
					this.SendPropertyChanged("TF_TIME");
					this.OnTF_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TF_PLACEFROM", DbType="VarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string TF_PLACEFROM
		{
			get
			{
				return this._TF_PLACEFROM;
			}
			set
			{
				if ((this._TF_PLACEFROM != value))
				{
					this.OnTF_PLACEFROMChanging(value);
					this.SendPropertyChanging();
					this._TF_PLACEFROM = value;
					this.SendPropertyChanged("TF_PLACEFROM");
					this.OnTF_PLACEFROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TF_PLACETO", DbType="VarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string TF_PLACETO
		{
			get
			{
				return this._TF_PLACETO;
			}
			set
			{
				if ((this._TF_PLACETO != value))
				{
					this.OnTF_PLACETOChanging(value);
					this.SendPropertyChanging();
					this._TF_PLACETO = value;
					this.SendPropertyChanged("TF_PLACETO");
					this.OnTF_PLACETOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TF_ISMAIN", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TF_ISMAIN
		{
			get
			{
				return this._TF_ISMAIN;
			}
			set
			{
				if ((this._TF_ISMAIN != value))
				{
					this.OnTF_ISMAINChanging(value);
					this.SendPropertyChanging();
					this._TF_ISMAIN = value;
					this.SendPropertyChanged("TF_ISMAIN");
					this.OnTF_ISMAINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TF_CTKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TF_CTKEY
		{
			get
			{
				return this._TF_CTKEY;
			}
			set
			{
				if ((this._TF_CTKEY != value))
				{
					this.OnTF_CTKEYChanging(value);
					this.SendPropertyChanging();
					this._TF_CTKEY = value;
					this.SendPropertyChanged("TF_CTKEY");
					this.OnTF_CTKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TF_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string TF_StdKey
		{
			get
			{
				return this._TF_StdKey;
			}
			set
			{
				if ((this._TF_StdKey != value))
				{
					this.OnTF_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._TF_StdKey = value;
					this.SendPropertyChanged("TF_StdKey");
					this.OnTF_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transfer_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="TF_KEY", OtherKey="DL_CODE")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transfer_TurService", Storage="_TurServices", ThisKey="TF_KEY", OtherKey="TS_CODE")]
		public EntitySet<TurService> TurServices
		{
			get
			{
				return this._TurServices;
			}
			set
			{
				this._TurServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.Transfer = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.Transfer = null;
		}
		
		private void attach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.Transfer = this;
		}
		
		private void detach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.Transfer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transport")]
	public partial class Transport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TR_KEY;
		
		private string _TR_NAME;
		
		private string _TR_NAMELAT;
		
		private System.Nullable<short> _TR_NMEN;
		
		private System.Data.Linq.Binary _ROWID;
		
		private string _TR_StdKey;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<TurService> _TurServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTR_KEYChanging(int value);
    partial void OnTR_KEYChanged();
    partial void OnTR_NAMEChanging(string value);
    partial void OnTR_NAMEChanged();
    partial void OnTR_NAMELATChanging(string value);
    partial void OnTR_NAMELATChanged();
    partial void OnTR_NMENChanging(System.Nullable<short> value);
    partial void OnTR_NMENChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnTR_StdKeyChanging(string value);
    partial void OnTR_StdKeyChanged();
    #endregion
		
		public Transport()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._TurServices = new EntitySet<TurService>(new Action<TurService>(this.attach_TurServices), new Action<TurService>(this.detach_TurServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int TR_KEY
		{
			get
			{
				return this._TR_KEY;
			}
			set
			{
				if ((this._TR_KEY != value))
				{
					this.OnTR_KEYChanging(value);
					this.SendPropertyChanging();
					this._TR_KEY = value;
					this.SendPropertyChanged("TR_KEY");
					this.OnTR_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_NAME", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TR_NAME
		{
			get
			{
				return this._TR_NAME;
			}
			set
			{
				if ((this._TR_NAME != value))
				{
					this.OnTR_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TR_NAME = value;
					this.SendPropertyChanged("TR_NAME");
					this.OnTR_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_NAMELAT", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string TR_NAMELAT
		{
			get
			{
				return this._TR_NAMELAT;
			}
			set
			{
				if ((this._TR_NAMELAT != value))
				{
					this.OnTR_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._TR_NAMELAT = value;
					this.SendPropertyChanged("TR_NAMELAT");
					this.OnTR_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_NMEN", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TR_NMEN
		{
			get
			{
				return this._TR_NMEN;
			}
			set
			{
				if ((this._TR_NMEN != value))
				{
					this.OnTR_NMENChanging(value);
					this.SendPropertyChanging();
					this._TR_NMEN = value;
					this.SendPropertyChanged("TR_NMEN");
					this.OnTR_NMENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TR_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string TR_StdKey
		{
			get
			{
				return this._TR_StdKey;
			}
			set
			{
				if ((this._TR_StdKey != value))
				{
					this.OnTR_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._TR_StdKey = value;
					this.SendPropertyChanged("TR_StdKey");
					this.OnTR_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transport_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="TR_KEY", OtherKey="DL_SUBCODE1")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transport_TurService", Storage="_TurServices", ThisKey="TR_KEY", OtherKey="TS_SUBCODE1")]
		public EntitySet<TurService> TurServices
		{
			get
			{
				return this._TurServices;
			}
			set
			{
				this._TurServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.Transport = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.Transport = null;
		}
		
		private void attach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.Transport = this;
		}
		
		private void detach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.Transport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExcurDictionary")]
	public partial class ExcurDictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ED_CNKEY;
		
		private int _ED_CTKEY;
		
		private int _ED_KEY;
		
		private string _ED_NAME;
		
		private string _ED_NAMELAT;
		
		private System.Nullable<System.DateTime> _ED_TIMEBEG;
		
		private System.Nullable<System.DateTime> _ED_TIMEEND;
		
		private string _ED_TIME;
		
		private string _ED_PLACEFROM;
		
		private string _ED_PLACETO;
		
		private string _ED_REMARK;
		
		private string _ED_COMMENT;
		
		private System.Data.Linq.Binary _ROWID;
		
		private string _ED_StdKey;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<TurService> _TurServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnED_CNKEYChanging(int value);
    partial void OnED_CNKEYChanged();
    partial void OnED_CTKEYChanging(int value);
    partial void OnED_CTKEYChanged();
    partial void OnED_KEYChanging(int value);
    partial void OnED_KEYChanged();
    partial void OnED_NAMEChanging(string value);
    partial void OnED_NAMEChanged();
    partial void OnED_NAMELATChanging(string value);
    partial void OnED_NAMELATChanged();
    partial void OnED_TIMEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnED_TIMEBEGChanged();
    partial void OnED_TIMEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnED_TIMEENDChanged();
    partial void OnED_TIMEChanging(string value);
    partial void OnED_TIMEChanged();
    partial void OnED_PLACEFROMChanging(string value);
    partial void OnED_PLACEFROMChanged();
    partial void OnED_PLACETOChanging(string value);
    partial void OnED_PLACETOChanged();
    partial void OnED_REMARKChanging(string value);
    partial void OnED_REMARKChanged();
    partial void OnED_COMMENTChanging(string value);
    partial void OnED_COMMENTChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnED_StdKeyChanging(string value);
    partial void OnED_StdKeyChanged();
    #endregion
		
		public ExcurDictionary()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._TurServices = new EntitySet<TurService>(new Action<TurService>(this.attach_TurServices), new Action<TurService>(this.detach_TurServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_CNKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ED_CNKEY
		{
			get
			{
				return this._ED_CNKEY;
			}
			set
			{
				if ((this._ED_CNKEY != value))
				{
					this.OnED_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._ED_CNKEY = value;
					this.SendPropertyChanged("ED_CNKEY");
					this.OnED_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_CTKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ED_CTKEY
		{
			get
			{
				return this._ED_CTKEY;
			}
			set
			{
				if ((this._ED_CTKEY != value))
				{
					this.OnED_CTKEYChanging(value);
					this.SendPropertyChanging();
					this._ED_CTKEY = value;
					this.SendPropertyChanged("ED_CTKEY");
					this.OnED_CTKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ED_KEY
		{
			get
			{
				return this._ED_KEY;
			}
			set
			{
				if ((this._ED_KEY != value))
				{
					this.OnED_KEYChanging(value);
					this.SendPropertyChanging();
					this._ED_KEY = value;
					this.SendPropertyChanged("ED_KEY");
					this.OnED_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ED_NAME
		{
			get
			{
				return this._ED_NAME;
			}
			set
			{
				if ((this._ED_NAME != value))
				{
					this.OnED_NAMEChanging(value);
					this.SendPropertyChanging();
					this._ED_NAME = value;
					this.SendPropertyChanged("ED_NAME");
					this.OnED_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_NAMELAT", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ED_NAMELAT
		{
			get
			{
				return this._ED_NAMELAT;
			}
			set
			{
				if ((this._ED_NAMELAT != value))
				{
					this.OnED_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._ED_NAMELAT = value;
					this.SendPropertyChanged("ED_NAMELAT");
					this.OnED_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_TIMEBEG", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ED_TIMEBEG
		{
			get
			{
				return this._ED_TIMEBEG;
			}
			set
			{
				if ((this._ED_TIMEBEG != value))
				{
					this.OnED_TIMEBEGChanging(value);
					this.SendPropertyChanging();
					this._ED_TIMEBEG = value;
					this.SendPropertyChanged("ED_TIMEBEG");
					this.OnED_TIMEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_TIMEEND", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ED_TIMEEND
		{
			get
			{
				return this._ED_TIMEEND;
			}
			set
			{
				if ((this._ED_TIMEEND != value))
				{
					this.OnED_TIMEENDChanging(value);
					this.SendPropertyChanging();
					this._ED_TIMEEND = value;
					this.SendPropertyChanged("ED_TIMEEND");
					this.OnED_TIMEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_TIME", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string ED_TIME
		{
			get
			{
				return this._ED_TIME;
			}
			set
			{
				if ((this._ED_TIME != value))
				{
					this.OnED_TIMEChanging(value);
					this.SendPropertyChanging();
					this._ED_TIME = value;
					this.SendPropertyChanged("ED_TIME");
					this.OnED_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_PLACEFROM", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string ED_PLACEFROM
		{
			get
			{
				return this._ED_PLACEFROM;
			}
			set
			{
				if ((this._ED_PLACEFROM != value))
				{
					this.OnED_PLACEFROMChanging(value);
					this.SendPropertyChanging();
					this._ED_PLACEFROM = value;
					this.SendPropertyChanged("ED_PLACEFROM");
					this.OnED_PLACEFROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_PLACETO", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string ED_PLACETO
		{
			get
			{
				return this._ED_PLACETO;
			}
			set
			{
				if ((this._ED_PLACETO != value))
				{
					this.OnED_PLACETOChanging(value);
					this.SendPropertyChanging();
					this._ED_PLACETO = value;
					this.SendPropertyChanged("ED_PLACETO");
					this.OnED_PLACETOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_REMARK", DbType="VarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string ED_REMARK
		{
			get
			{
				return this._ED_REMARK;
			}
			set
			{
				if ((this._ED_REMARK != value))
				{
					this.OnED_REMARKChanging(value);
					this.SendPropertyChanging();
					this._ED_REMARK = value;
					this.SendPropertyChanged("ED_REMARK");
					this.OnED_REMARKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_COMMENT", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ED_COMMENT
		{
			get
			{
				return this._ED_COMMENT;
			}
			set
			{
				if ((this._ED_COMMENT != value))
				{
					this.OnED_COMMENTChanging(value);
					this.SendPropertyChanging();
					this._ED_COMMENT = value;
					this.SendPropertyChanged("ED_COMMENT");
					this.OnED_COMMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ED_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string ED_StdKey
		{
			get
			{
				return this._ED_StdKey;
			}
			set
			{
				if ((this._ED_StdKey != value))
				{
					this.OnED_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._ED_StdKey = value;
					this.SendPropertyChanged("ED_StdKey");
					this.OnED_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExcurDictionary_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="ED_KEY", OtherKey="DL_CODE")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExcurDictionary_TurService", Storage="_TurServices", ThisKey="ED_KEY", OtherKey="TS_CODE")]
		public EntitySet<TurService> TurServices
		{
			get
			{
				return this._TurServices;
			}
			set
			{
				this._TurServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.ExcurDictionary = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.ExcurDictionary = null;
		}
		
		private void attach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.ExcurDictionary = this;
		}
		
		private void detach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.ExcurDictionary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LTV_AccessDogovor")]
	public partial class LTV_AccessDogovor
	{
		
		private string _VDG_DGCod;
		
		public LTV_AccessDogovor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VDG_DGCod", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string VDG_DGCod
		{
			get
			{
				return this._VDG_DGCod;
			}
			set
			{
				if ((this._VDG_DGCod != value))
				{
					this._VDG_DGCod = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Status")]
	public partial class Order_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OS_CODE;
		
		private string _OS_NAME_RUS;
		
		private System.Data.Linq.Binary _ROWID;
		
		private int _OS_GLOBAL;
		
		private string _OS_NameLat;
		
		private EntitySet<tbl_Dogovor> _tbl_Dogovors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOS_CODEChanging(int value);
    partial void OnOS_CODEChanged();
    partial void OnOS_NAME_RUSChanging(string value);
    partial void OnOS_NAME_RUSChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnOS_GLOBALChanging(int value);
    partial void OnOS_GLOBALChanged();
    partial void OnOS_NameLatChanging(string value);
    partial void OnOS_NameLatChanged();
    #endregion
		
		public Order_Status()
		{
			this._tbl_Dogovors = new EntitySet<tbl_Dogovor>(new Action<tbl_Dogovor>(this.attach_tbl_Dogovors), new Action<tbl_Dogovor>(this.detach_tbl_Dogovors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_CODE", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int OS_CODE
		{
			get
			{
				return this._OS_CODE;
			}
			set
			{
				if ((this._OS_CODE != value))
				{
					this.OnOS_CODEChanging(value);
					this.SendPropertyChanging();
					this._OS_CODE = value;
					this.SendPropertyChanged("OS_CODE");
					this.OnOS_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_NAME_RUS", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string OS_NAME_RUS
		{
			get
			{
				return this._OS_NAME_RUS;
			}
			set
			{
				if ((this._OS_NAME_RUS != value))
				{
					this.OnOS_NAME_RUSChanging(value);
					this.SendPropertyChanging();
					this._OS_NAME_RUS = value;
					this.SendPropertyChanged("OS_NAME_RUS");
					this.OnOS_NAME_RUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_GLOBAL", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int OS_GLOBAL
		{
			get
			{
				return this._OS_GLOBAL;
			}
			set
			{
				if ((this._OS_GLOBAL != value))
				{
					this.OnOS_GLOBALChanging(value);
					this.SendPropertyChanging();
					this._OS_GLOBAL = value;
					this.SendPropertyChanged("OS_GLOBAL");
					this.OnOS_GLOBALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_NameLat", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string OS_NameLat
		{
			get
			{
				return this._OS_NameLat;
			}
			set
			{
				if ((this._OS_NameLat != value))
				{
					this.OnOS_NameLatChanging(value);
					this.SendPropertyChanging();
					this._OS_NameLat = value;
					this.SendPropertyChanged("OS_NameLat");
					this.OnOS_NameLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Status_tbl_Dogovor", Storage="_tbl_Dogovors", ThisKey="OS_CODE", OtherKey="DG_SOR_CODE")]
		public EntitySet<tbl_Dogovor> tbl_Dogovors
		{
			get
			{
				return this._tbl_Dogovors;
			}
			set
			{
				this._tbl_Dogovors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Dogovors(tbl_Dogovor entity)
		{
			this.SendPropertyChanging();
			entity.Order_Status = this;
		}
		
		private void detach_tbl_Dogovors(tbl_Dogovor entity)
		{
			this.SendPropertyChanging();
			entity.Order_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TurDate")]
	public partial class TurDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TD_TRKEY;
		
		private System.DateTime _TD_DATE;
		
		private int _TD_Id;
		
		private EntityRef<tbl_TurList> _tbl_TurList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTD_TRKEYChanging(int value);
    partial void OnTD_TRKEYChanged();
    partial void OnTD_DATEChanging(System.DateTime value);
    partial void OnTD_DATEChanged();
    partial void OnTD_IdChanging(int value);
    partial void OnTD_IdChanged();
    #endregion
		
		public TurDate()
		{
			this._tbl_TurList = default(EntityRef<tbl_TurList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TD_TRKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TD_TRKEY
		{
			get
			{
				return this._TD_TRKEY;
			}
			set
			{
				if ((this._TD_TRKEY != value))
				{
					if (this._tbl_TurList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTD_TRKEYChanging(value);
					this.SendPropertyChanging();
					this._TD_TRKEY = value;
					this.SendPropertyChanged("TD_TRKEY");
					this.OnTD_TRKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TD_DATE", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime TD_DATE
		{
			get
			{
				return this._TD_DATE;
			}
			set
			{
				if ((this._TD_DATE != value))
				{
					this.OnTD_DATEChanging(value);
					this.SendPropertyChanging();
					this._TD_DATE = value;
					this.SendPropertyChanged("TD_DATE");
					this.OnTD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TD_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int TD_Id
		{
			get
			{
				return this._TD_Id;
			}
			set
			{
				if ((this._TD_Id != value))
				{
					this.OnTD_IdChanging(value);
					this.SendPropertyChanging();
					this._TD_Id = value;
					this.SendPropertyChanged("TD_Id");
					this.OnTD_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_TurDate", Storage="_tbl_TurList", ThisKey="TD_TRKEY", OtherKey="TL_KEY", IsForeignKey=true)]
		public tbl_TurList tbl_TurList
		{
			get
			{
				return this._tbl_TurList.Entity;
			}
			set
			{
				tbl_TurList previousValue = this._tbl_TurList.Entity;
				if (((previousValue != value) 
							|| (this._tbl_TurList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_TurList.Entity = null;
						previousValue.TurDates.Remove(this);
					}
					this._tbl_TurList.Entity = value;
					if ((value != null))
					{
						value.TurDates.Add(this);
						this._TD_TRKEY = value.TL_KEY;
					}
					else
					{
						this._TD_TRKEY = default(int);
					}
					this.SendPropertyChanged("tbl_TurList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TurService")]
	public partial class TurService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TS_TRKEY;
		
		private int _TS_SVKEY;
		
		private System.Nullable<int> _TS_PKKEY;
		
		private string _TS_NAME;
		
		private System.Nullable<short> _TS_DAY;
		
		private int _TS_CODE;
		
		private System.Nullable<int> _TS_SUBCODE1;
		
		private System.Nullable<int> _TS_SUBCODE2;
		
		private System.Nullable<short> _TS_NDAYS;
		
		private int _TS_CNKEY;
		
		private System.Nullable<int> _TS_CTKEY;
		
		private System.Nullable<int> _TS_PARTNERKEY;
		
		private System.Nullable<double> _TS_COST;
		
		private System.Nullable<double> _TS_PROFIT;
		
		private System.Nullable<System.DateTime> _TS_TIMEBEG;
		
		private System.Nullable<int> _TS_ATTRIBUTE;
		
		private System.Data.Linq.Binary _ROWID;
		
		private int _TS_Key;
		
		private string _TS_NameLat;
		
		private System.Nullable<int> _TS_PRTDOGKEY;
		
		private System.Nullable<int> _TS_TAXZONEID;
		
		private System.Nullable<int> _TS_WebAttribute;
		
		private System.Nullable<short> _TS_Wait;
		
		private EntityRef<tbl_TurList> _tbl_TurList;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<tbl_Partner> _tbl_Partner;
		
		private EntityRef<Transfer> _Transfer;
		
		private EntityRef<Transport> _Transport;
		
		private EntityRef<ExcurDictionary> _ExcurDictionary;
		
		private EntityRef<AddDescript1> _AddDescript1;
		
		private EntityRef<ServiceList> _ServiceList;
		
		private EntityRef<AddDescript2> _AddDescript2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTS_TRKEYChanging(int value);
    partial void OnTS_TRKEYChanged();
    partial void OnTS_SVKEYChanging(int value);
    partial void OnTS_SVKEYChanged();
    partial void OnTS_PKKEYChanging(System.Nullable<int> value);
    partial void OnTS_PKKEYChanged();
    partial void OnTS_NAMEChanging(string value);
    partial void OnTS_NAMEChanged();
    partial void OnTS_DAYChanging(System.Nullable<short> value);
    partial void OnTS_DAYChanged();
    partial void OnTS_CODEChanging(int value);
    partial void OnTS_CODEChanged();
    partial void OnTS_SUBCODE1Changing(System.Nullable<int> value);
    partial void OnTS_SUBCODE1Changed();
    partial void OnTS_SUBCODE2Changing(System.Nullable<int> value);
    partial void OnTS_SUBCODE2Changed();
    partial void OnTS_NDAYSChanging(System.Nullable<short> value);
    partial void OnTS_NDAYSChanged();
    partial void OnTS_CNKEYChanging(int value);
    partial void OnTS_CNKEYChanged();
    partial void OnTS_CTKEYChanging(System.Nullable<int> value);
    partial void OnTS_CTKEYChanged();
    partial void OnTS_PARTNERKEYChanging(System.Nullable<int> value);
    partial void OnTS_PARTNERKEYChanged();
    partial void OnTS_COSTChanging(System.Nullable<double> value);
    partial void OnTS_COSTChanged();
    partial void OnTS_PROFITChanging(System.Nullable<double> value);
    partial void OnTS_PROFITChanged();
    partial void OnTS_TIMEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnTS_TIMEBEGChanged();
    partial void OnTS_ATTRIBUTEChanging(System.Nullable<int> value);
    partial void OnTS_ATTRIBUTEChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnTS_KeyChanging(int value);
    partial void OnTS_KeyChanged();
    partial void OnTS_NameLatChanging(string value);
    partial void OnTS_NameLatChanged();
    partial void OnTS_PRTDOGKEYChanging(System.Nullable<int> value);
    partial void OnTS_PRTDOGKEYChanged();
    partial void OnTS_TAXZONEIDChanging(System.Nullable<int> value);
    partial void OnTS_TAXZONEIDChanged();
    partial void OnTS_WebAttributeChanging(System.Nullable<int> value);
    partial void OnTS_WebAttributeChanged();
    partial void OnTS_WaitChanging(System.Nullable<short> value);
    partial void OnTS_WaitChanged();
    #endregion
		
		public TurService()
		{
			this._tbl_TurList = default(EntityRef<tbl_TurList>);
			this._Service = default(EntityRef<Service>);
			this._tbl_Partner = default(EntityRef<tbl_Partner>);
			this._Transfer = default(EntityRef<Transfer>);
			this._Transport = default(EntityRef<Transport>);
			this._ExcurDictionary = default(EntityRef<ExcurDictionary>);
			this._AddDescript1 = default(EntityRef<AddDescript1>);
			this._ServiceList = default(EntityRef<ServiceList>);
			this._AddDescript2 = default(EntityRef<AddDescript2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_TRKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TS_TRKEY
		{
			get
			{
				return this._TS_TRKEY;
			}
			set
			{
				if ((this._TS_TRKEY != value))
				{
					if (this._tbl_TurList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTS_TRKEYChanging(value);
					this.SendPropertyChanging();
					this._TS_TRKEY = value;
					this.SendPropertyChanged("TS_TRKEY");
					this.OnTS_TRKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_SVKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TS_SVKEY
		{
			get
			{
				return this._TS_SVKEY;
			}
			set
			{
				if ((this._TS_SVKEY != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTS_SVKEYChanging(value);
					this.SendPropertyChanging();
					this._TS_SVKEY = value;
					this.SendPropertyChanged("TS_SVKEY");
					this.OnTS_SVKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_PKKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TS_PKKEY
		{
			get
			{
				return this._TS_PKKEY;
			}
			set
			{
				if ((this._TS_PKKEY != value))
				{
					this.OnTS_PKKEYChanging(value);
					this.SendPropertyChanging();
					this._TS_PKKEY = value;
					this.SendPropertyChanged("TS_PKKEY");
					this.OnTS_PKKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_NAME", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string TS_NAME
		{
			get
			{
				return this._TS_NAME;
			}
			set
			{
				if ((this._TS_NAME != value))
				{
					this.OnTS_NAMEChanging(value);
					this.SendPropertyChanging();
					this._TS_NAME = value;
					this.SendPropertyChanged("TS_NAME");
					this.OnTS_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_DAY", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TS_DAY
		{
			get
			{
				return this._TS_DAY;
			}
			set
			{
				if ((this._TS_DAY != value))
				{
					this.OnTS_DAYChanging(value);
					this.SendPropertyChanging();
					this._TS_DAY = value;
					this.SendPropertyChanged("TS_DAY");
					this.OnTS_DAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_CODE", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TS_CODE
		{
			get
			{
				return this._TS_CODE;
			}
			set
			{
				if ((this._TS_CODE != value))
				{
					if (((this._Transfer.HasLoadedOrAssignedValue || this._ExcurDictionary.HasLoadedOrAssignedValue) 
								|| this._ServiceList.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTS_CODEChanging(value);
					this.SendPropertyChanging();
					this._TS_CODE = value;
					this.SendPropertyChanged("TS_CODE");
					this.OnTS_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_SUBCODE1", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TS_SUBCODE1
		{
			get
			{
				return this._TS_SUBCODE1;
			}
			set
			{
				if ((this._TS_SUBCODE1 != value))
				{
					if ((this._Transport.HasLoadedOrAssignedValue || this._AddDescript1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTS_SUBCODE1Changing(value);
					this.SendPropertyChanging();
					this._TS_SUBCODE1 = value;
					this.SendPropertyChanged("TS_SUBCODE1");
					this.OnTS_SUBCODE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_SUBCODE2", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TS_SUBCODE2
		{
			get
			{
				return this._TS_SUBCODE2;
			}
			set
			{
				if ((this._TS_SUBCODE2 != value))
				{
					if (this._AddDescript2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTS_SUBCODE2Changing(value);
					this.SendPropertyChanging();
					this._TS_SUBCODE2 = value;
					this.SendPropertyChanged("TS_SUBCODE2");
					this.OnTS_SUBCODE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_NDAYS", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TS_NDAYS
		{
			get
			{
				return this._TS_NDAYS;
			}
			set
			{
				if ((this._TS_NDAYS != value))
				{
					this.OnTS_NDAYSChanging(value);
					this.SendPropertyChanging();
					this._TS_NDAYS = value;
					this.SendPropertyChanged("TS_NDAYS");
					this.OnTS_NDAYSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_CNKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TS_CNKEY
		{
			get
			{
				return this._TS_CNKEY;
			}
			set
			{
				if ((this._TS_CNKEY != value))
				{
					this.OnTS_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._TS_CNKEY = value;
					this.SendPropertyChanged("TS_CNKEY");
					this.OnTS_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_CTKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TS_CTKEY
		{
			get
			{
				return this._TS_CTKEY;
			}
			set
			{
				if ((this._TS_CTKEY != value))
				{
					this.OnTS_CTKEYChanging(value);
					this.SendPropertyChanging();
					this._TS_CTKEY = value;
					this.SendPropertyChanged("TS_CTKEY");
					this.OnTS_CTKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_PARTNERKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TS_PARTNERKEY
		{
			get
			{
				return this._TS_PARTNERKEY;
			}
			set
			{
				if ((this._TS_PARTNERKEY != value))
				{
					if (this._tbl_Partner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTS_PARTNERKEYChanging(value);
					this.SendPropertyChanging();
					this._TS_PARTNERKEY = value;
					this.SendPropertyChanged("TS_PARTNERKEY");
					this.OnTS_PARTNERKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_COST", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> TS_COST
		{
			get
			{
				return this._TS_COST;
			}
			set
			{
				if ((this._TS_COST != value))
				{
					this.OnTS_COSTChanging(value);
					this.SendPropertyChanging();
					this._TS_COST = value;
					this.SendPropertyChanged("TS_COST");
					this.OnTS_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_PROFIT", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> TS_PROFIT
		{
			get
			{
				return this._TS_PROFIT;
			}
			set
			{
				if ((this._TS_PROFIT != value))
				{
					this.OnTS_PROFITChanging(value);
					this.SendPropertyChanging();
					this._TS_PROFIT = value;
					this.SendPropertyChanged("TS_PROFIT");
					this.OnTS_PROFITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_TIMEBEG", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> TS_TIMEBEG
		{
			get
			{
				return this._TS_TIMEBEG;
			}
			set
			{
				if ((this._TS_TIMEBEG != value))
				{
					this.OnTS_TIMEBEGChanging(value);
					this.SendPropertyChanging();
					this._TS_TIMEBEG = value;
					this.SendPropertyChanged("TS_TIMEBEG");
					this.OnTS_TIMEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_ATTRIBUTE", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TS_ATTRIBUTE
		{
			get
			{
				return this._TS_ATTRIBUTE;
			}
			set
			{
				if ((this._TS_ATTRIBUTE != value))
				{
					this.OnTS_ATTRIBUTEChanging(value);
					this.SendPropertyChanging();
					this._TS_ATTRIBUTE = value;
					this.SendPropertyChanged("TS_ATTRIBUTE");
					this.OnTS_ATTRIBUTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_Key", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int TS_Key
		{
			get
			{
				return this._TS_Key;
			}
			set
			{
				if ((this._TS_Key != value))
				{
					this.OnTS_KeyChanging(value);
					this.SendPropertyChanging();
					this._TS_Key = value;
					this.SendPropertyChanged("TS_Key");
					this.OnTS_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_NameLat", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string TS_NameLat
		{
			get
			{
				return this._TS_NameLat;
			}
			set
			{
				if ((this._TS_NameLat != value))
				{
					this.OnTS_NameLatChanging(value);
					this.SendPropertyChanging();
					this._TS_NameLat = value;
					this.SendPropertyChanged("TS_NameLat");
					this.OnTS_NameLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_PRTDOGKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TS_PRTDOGKEY
		{
			get
			{
				return this._TS_PRTDOGKEY;
			}
			set
			{
				if ((this._TS_PRTDOGKEY != value))
				{
					this.OnTS_PRTDOGKEYChanging(value);
					this.SendPropertyChanging();
					this._TS_PRTDOGKEY = value;
					this.SendPropertyChanged("TS_PRTDOGKEY");
					this.OnTS_PRTDOGKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_TAXZONEID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TS_TAXZONEID
		{
			get
			{
				return this._TS_TAXZONEID;
			}
			set
			{
				if ((this._TS_TAXZONEID != value))
				{
					this.OnTS_TAXZONEIDChanging(value);
					this.SendPropertyChanging();
					this._TS_TAXZONEID = value;
					this.SendPropertyChanged("TS_TAXZONEID");
					this.OnTS_TAXZONEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_WebAttribute", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TS_WebAttribute
		{
			get
			{
				return this._TS_WebAttribute;
			}
			set
			{
				if ((this._TS_WebAttribute != value))
				{
					this.OnTS_WebAttributeChanging(value);
					this.SendPropertyChanging();
					this._TS_WebAttribute = value;
					this.SendPropertyChanged("TS_WebAttribute");
					this.OnTS_WebAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS_Wait", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> TS_Wait
		{
			get
			{
				return this._TS_Wait;
			}
			set
			{
				if ((this._TS_Wait != value))
				{
					this.OnTS_WaitChanging(value);
					this.SendPropertyChanging();
					this._TS_Wait = value;
					this.SendPropertyChanged("TS_Wait");
					this.OnTS_WaitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_TurService", Storage="_tbl_TurList", ThisKey="TS_TRKEY", OtherKey="TL_KEY", IsForeignKey=true)]
		public tbl_TurList tbl_TurList
		{
			get
			{
				return this._tbl_TurList.Entity;
			}
			set
			{
				tbl_TurList previousValue = this._tbl_TurList.Entity;
				if (((previousValue != value) 
							|| (this._tbl_TurList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_TurList.Entity = null;
						previousValue.TurServices.Remove(this);
					}
					this._tbl_TurList.Entity = value;
					if ((value != null))
					{
						value.TurServices.Add(this);
						this._TS_TRKEY = value.TL_KEY;
					}
					else
					{
						this._TS_TRKEY = default(int);
					}
					this.SendPropertyChanged("tbl_TurList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_TurService", Storage="_Service", ThisKey="TS_SVKEY", OtherKey="SV_KEY", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.TurServices.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.TurServices.Add(this);
						this._TS_SVKEY = value.SV_KEY;
					}
					else
					{
						this._TS_SVKEY = default(int);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Partner_TurService", Storage="_tbl_Partner", ThisKey="TS_PARTNERKEY", OtherKey="PR_KEY", IsForeignKey=true)]
		public tbl_Partner tbl_Partner
		{
			get
			{
				return this._tbl_Partner.Entity;
			}
			set
			{
				tbl_Partner previousValue = this._tbl_Partner.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Partner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Partner.Entity = null;
						previousValue.TurServices.Remove(this);
					}
					this._tbl_Partner.Entity = value;
					if ((value != null))
					{
						value.TurServices.Add(this);
						this._TS_PARTNERKEY = value.PR_KEY;
					}
					else
					{
						this._TS_PARTNERKEY = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Partner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transfer_TurService", Storage="_Transfer", ThisKey="TS_CODE", OtherKey="TF_KEY", IsForeignKey=true)]
		public Transfer Transfer
		{
			get
			{
				return this._Transfer.Entity;
			}
			set
			{
				Transfer previousValue = this._Transfer.Entity;
				if (((previousValue != value) 
							|| (this._Transfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transfer.Entity = null;
						previousValue.TurServices.Remove(this);
					}
					this._Transfer.Entity = value;
					if ((value != null))
					{
						value.TurServices.Add(this);
						this._TS_CODE = value.TF_KEY;
					}
					else
					{
						this._TS_CODE = default(int);
					}
					this.SendPropertyChanged("Transfer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transport_TurService", Storage="_Transport", ThisKey="TS_SUBCODE1", OtherKey="TR_KEY", IsForeignKey=true)]
		public Transport Transport
		{
			get
			{
				return this._Transport.Entity;
			}
			set
			{
				Transport previousValue = this._Transport.Entity;
				if (((previousValue != value) 
							|| (this._Transport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transport.Entity = null;
						previousValue.TurServices.Remove(this);
					}
					this._Transport.Entity = value;
					if ((value != null))
					{
						value.TurServices.Add(this);
						this._TS_SUBCODE1 = value.TR_KEY;
					}
					else
					{
						this._TS_SUBCODE1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Transport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExcurDictionary_TurService", Storage="_ExcurDictionary", ThisKey="TS_CODE", OtherKey="ED_KEY", IsForeignKey=true)]
		public ExcurDictionary ExcurDictionary
		{
			get
			{
				return this._ExcurDictionary.Entity;
			}
			set
			{
				ExcurDictionary previousValue = this._ExcurDictionary.Entity;
				if (((previousValue != value) 
							|| (this._ExcurDictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExcurDictionary.Entity = null;
						previousValue.TurServices.Remove(this);
					}
					this._ExcurDictionary.Entity = value;
					if ((value != null))
					{
						value.TurServices.Add(this);
						this._TS_CODE = value.ED_KEY;
					}
					else
					{
						this._TS_CODE = default(int);
					}
					this.SendPropertyChanged("ExcurDictionary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddDescript1_TurService", Storage="_AddDescript1", ThisKey="TS_SUBCODE1", OtherKey="A1_KEY", IsForeignKey=true)]
		public AddDescript1 AddDescript1
		{
			get
			{
				return this._AddDescript1.Entity;
			}
			set
			{
				AddDescript1 previousValue = this._AddDescript1.Entity;
				if (((previousValue != value) 
							|| (this._AddDescript1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddDescript1.Entity = null;
						previousValue.TurServices.Remove(this);
					}
					this._AddDescript1.Entity = value;
					if ((value != null))
					{
						value.TurServices.Add(this);
						this._TS_SUBCODE1 = value.A1_KEY;
					}
					else
					{
						this._TS_SUBCODE1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("AddDescript1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceList_TurService", Storage="_ServiceList", ThisKey="TS_CODE", OtherKey="SL_KEY", IsForeignKey=true)]
		public ServiceList ServiceList
		{
			get
			{
				return this._ServiceList.Entity;
			}
			set
			{
				if ((this._ServiceList.Entity != value))
				{
					this.SendPropertyChanging();
					this._ServiceList.Entity = value;
					this.SendPropertyChanged("ServiceList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddDescript2_TurService", Storage="_AddDescript2", ThisKey="TS_SUBCODE2", OtherKey="A2_KEY", IsForeignKey=true)]
		public AddDescript2 AddDescript2
		{
			get
			{
				return this._AddDescript2.Entity;
			}
			set
			{
				AddDescript2 previousValue = this._AddDescript2.Entity;
				if (((previousValue != value) 
							|| (this._AddDescript2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddDescript2.Entity = null;
						previousValue.TurServices.Remove(this);
					}
					this._AddDescript2.Entity = value;
					if ((value != null))
					{
						value.TurServices.Add(this);
						this._TS_SUBCODE2 = value.A2_KEY;
					}
					else
					{
						this._TS_SUBCODE2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("AddDescript2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_MappingTurService")]
	public partial class LT_V_MappingTurService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VS_Id;
		
		private int _VS_VTId;
		
		private int _VS_SVKey;
		
		private int _VS_Day;
		
		private int _VS_SHSId;
		
		private EntityRef<LT_V_MappingTurList> _LT_V_MappingTurList;
		
		private EntityRef<LT_V_ShablonService> _LT_V_ShablonService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVS_IdChanging(int value);
    partial void OnVS_IdChanged();
    partial void OnVS_VTIdChanging(int value);
    partial void OnVS_VTIdChanged();
    partial void OnVS_SVKeyChanging(int value);
    partial void OnVS_SVKeyChanged();
    partial void OnVS_IndexChanging(int value);
    partial void OnVS_IndexChanged();
    partial void OnVS_SHSIdChanging(int value);
    partial void OnVS_SHSIdChanged();
    #endregion
		
		public LT_V_MappingTurService()
		{
			this._LT_V_MappingTurList = default(EntityRef<LT_V_MappingTurList>);
			this._LT_V_ShablonService = default(EntityRef<LT_V_ShablonService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VS_Id
		{
			get
			{
				return this._VS_Id;
			}
			set
			{
				if ((this._VS_Id != value))
				{
					this.OnVS_IdChanging(value);
					this.SendPropertyChanging();
					this._VS_Id = value;
					this.SendPropertyChanged("VS_Id");
					this.OnVS_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_VTId", DbType="Int NOT NULL")]
		public int VS_VTId
		{
			get
			{
				return this._VS_VTId;
			}
			set
			{
				if ((this._VS_VTId != value))
				{
					if (this._LT_V_MappingTurList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVS_VTIdChanging(value);
					this.SendPropertyChanging();
					this._VS_VTId = value;
					this.SendPropertyChanged("VS_VTId");
					this.OnVS_VTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_SVKey", DbType="Int NOT NULL")]
		public int VS_SVKey
		{
			get
			{
				return this._VS_SVKey;
			}
			set
			{
				if ((this._VS_SVKey != value))
				{
					this.OnVS_SVKeyChanging(value);
					this.SendPropertyChanging();
					this._VS_SVKey = value;
					this.SendPropertyChanged("VS_SVKey");
					this.OnVS_SVKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_Day", DbType="int not null")]
		public int VS_Index
		{
			get
			{
				return this._VS_Day;
			}
			set
			{
				if ((this._VS_Day != value))
				{
					this.OnVS_IndexChanging(value);
					this.SendPropertyChanging();
					this._VS_Day = value;
					this.SendPropertyChanged("VS_Index");
					this.OnVS_IndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VS_SHSId", DbType="int not null")]
		public int VS_SHSId
		{
			get
			{
				return this._VS_SHSId;
			}
			set
			{
				if ((this._VS_SHSId != value))
				{
					if (this._LT_V_ShablonService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVS_SHSIdChanging(value);
					this.SendPropertyChanging();
					this._VS_SHSId = value;
					this.SendPropertyChanged("VS_SHSId");
					this.OnVS_SHSIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_MappingTurList_LT_V_MappingTurService", Storage="_LT_V_MappingTurList", ThisKey="VS_VTId", OtherKey="VT_Id", IsForeignKey=true)]
		public LT_V_MappingTurList LT_V_MappingTurList
		{
			get
			{
				return this._LT_V_MappingTurList.Entity;
			}
			set
			{
				LT_V_MappingTurList previousValue = this._LT_V_MappingTurList.Entity;
				if (((previousValue != value) 
							|| (this._LT_V_MappingTurList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LT_V_MappingTurList.Entity = null;
						previousValue.LT_V_MappingTurServices.Remove(this);
					}
					this._LT_V_MappingTurList.Entity = value;
					if ((value != null))
					{
						value.LT_V_MappingTurServices.Add(this);
						this._VS_VTId = value.VT_Id;
					}
					else
					{
						this._VS_VTId = default(int);
					}
					this.SendPropertyChanged("LT_V_MappingTurList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_ShablonService_LT_V_MappingTurService", Storage="_LT_V_ShablonService", ThisKey="VS_SHSId", OtherKey="SHS_Id", IsForeignKey=true)]
		public LT_V_ShablonService LT_V_ShablonService
		{
			get
			{
				return this._LT_V_ShablonService.Entity;
			}
			set
			{
				LT_V_ShablonService previousValue = this._LT_V_ShablonService.Entity;
				if (((previousValue != value) 
							|| (this._LT_V_ShablonService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LT_V_ShablonService.Entity = null;
						previousValue.LT_V_MappingTurServices.Remove(this);
					}
					this._LT_V_ShablonService.Entity = value;
					if ((value != null))
					{
						value.LT_V_MappingTurServices.Add(this);
						this._VS_SHSId = value.SHS_Id;
					}
					else
					{
						this._VS_SHSId = default(int);
					}
					this.SendPropertyChanged("LT_V_ShablonService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_MappingTurList")]
	public partial class LT_V_MappingTurList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VT_Id;
		
		private string _VT_Name;
		
		private int _VT_TLKey;
		
		private EntitySet<LT_V_MappingTurService> _LT_V_MappingTurServices;
		
		private EntityRef<tbl_TurList> _tbl_TurList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVT_IdChanging(int value);
    partial void OnVT_IdChanged();
    partial void OnVT_NameChanging(string value);
    partial void OnVT_NameChanged();
    partial void OnVT_TLKeyChanging(int value);
    partial void OnVT_TLKeyChanged();
    #endregion
		
		public LT_V_MappingTurList()
		{
			this._LT_V_MappingTurServices = new EntitySet<LT_V_MappingTurService>(new Action<LT_V_MappingTurService>(this.attach_LT_V_MappingTurServices), new Action<LT_V_MappingTurService>(this.detach_LT_V_MappingTurServices));
			this._tbl_TurList = default(EntityRef<tbl_TurList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VT_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VT_Id
		{
			get
			{
				return this._VT_Id;
			}
			set
			{
				if ((this._VT_Id != value))
				{
					this.OnVT_IdChanging(value);
					this.SendPropertyChanging();
					this._VT_Id = value;
					this.SendPropertyChanged("VT_Id");
					this.OnVT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VT_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string VT_Name
		{
			get
			{
				return this._VT_Name;
			}
			set
			{
				if ((this._VT_Name != value))
				{
					this.OnVT_NameChanging(value);
					this.SendPropertyChanging();
					this._VT_Name = value;
					this.SendPropertyChanged("VT_Name");
					this.OnVT_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VT_TLKey", DbType="int not null")]
		public int VT_TLKey
		{
			get
			{
				return this._VT_TLKey;
			}
			set
			{
				if ((this._VT_TLKey != value))
				{
					if (this._tbl_TurList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVT_TLKeyChanging(value);
					this.SendPropertyChanging();
					this._VT_TLKey = value;
					this.SendPropertyChanged("VT_TLKey");
					this.OnVT_TLKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_MappingTurList_LT_V_MappingTurService", Storage="_LT_V_MappingTurServices", ThisKey="VT_Id", OtherKey="VS_VTId")]
		public EntitySet<LT_V_MappingTurService> LT_V_MappingTurServices
		{
			get
			{
				return this._LT_V_MappingTurServices;
			}
			set
			{
				this._LT_V_MappingTurServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_LT_V_MappingTurList", Storage="_tbl_TurList", ThisKey="VT_TLKey", OtherKey="TL_KEY", IsForeignKey=true)]
		public tbl_TurList tbl_TurList
		{
			get
			{
				return this._tbl_TurList.Entity;
			}
			set
			{
				tbl_TurList previousValue = this._tbl_TurList.Entity;
				if (((previousValue != value) 
							|| (this._tbl_TurList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_TurList.Entity = null;
						previousValue.LT_V_MappingTurLists.Remove(this);
					}
					this._tbl_TurList.Entity = value;
					if ((value != null))
					{
						value.LT_V_MappingTurLists.Add(this);
						this._VT_TLKey = value.TL_KEY;
					}
					else
					{
						this._VT_TLKey = default(int);
					}
					this.SendPropertyChanged("tbl_TurList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LT_V_MappingTurServices(LT_V_MappingTurService entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_MappingTurList = this;
		}
		
		private void detach_LT_V_MappingTurServices(LT_V_MappingTurService entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_MappingTurList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_ServiceNotUse")]
	public partial class LT_V_ServiceNotUse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SV_Key;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSV_KeyChanging(int value);
    partial void OnSV_KeyChanged();
    #endregion
		
		public LT_V_ServiceNotUse()
		{
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SV_Key", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SV_Key
		{
			get
			{
				return this._SV_Key;
			}
			set
			{
				if ((this._SV_Key != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSV_KeyChanging(value);
					this.SendPropertyChanging();
					this._SV_Key = value;
					this.SendPropertyChanged("SV_Key");
					this.OnSV_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LT_V_ServiceNotUse", Storage="_Service", ThisKey="SV_Key", OtherKey="SV_KEY", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.LT_V_ServiceNotUse = null;
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.LT_V_ServiceNotUse = this;
						this._SV_Key = value.SV_KEY;
					}
					else
					{
						this._SV_Key = default(int);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_ServicesSkip")]
	public partial class LT_V_ServicesSkip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LSS_DLKey;
		
		private EntityRef<tbl_DogovorList> _tbl_DogovorList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLSS_DLKeyChanging(int value);
    partial void OnLSS_DLKeyChanged();
    #endregion
		
		public LT_V_ServicesSkip()
		{
			this._tbl_DogovorList = default(EntityRef<tbl_DogovorList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LSS_DLKey", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LSS_DLKey
		{
			get
			{
				return this._LSS_DLKey;
			}
			set
			{
				if ((this._LSS_DLKey != value))
				{
					this.OnLSS_DLKeyChanging(value);
					this.SendPropertyChanging();
					this._LSS_DLKey = value;
					this.SendPropertyChanged("LSS_DLKey");
					this.OnLSS_DLKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_ServicesSkip_tbl_DogovorList", Storage="_tbl_DogovorList", ThisKey="LSS_DLKey", OtherKey="DL_KEY", IsUnique=true, IsForeignKey=false)]
		public tbl_DogovorList tbl_DogovorList
		{
			get
			{
				return this._tbl_DogovorList.Entity;
			}
			set
			{
				tbl_DogovorList previousValue = this._tbl_DogovorList.Entity;
				if (((previousValue != value) 
							|| (this._tbl_DogovorList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_DogovorList.Entity = null;
						previousValue.LT_V_ServicesSkip = null;
					}
					this._tbl_DogovorList.Entity = value;
					if ((value != null))
					{
						value.LT_V_ServicesSkip = this;
					}
					this.SendPropertyChanged("tbl_DogovorList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceList")]
	public partial class ServiceList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SL_SVKEY;
		
		private int _SL_KEY;
		
		private string _SL_NAME;
		
		private string _SL_NAMELAT;
		
		private System.Nullable<System.DateTime> _SL_TIMEBEG;
		
		private System.Nullable<System.DateTime> _SL_TIMEEND;
		
		private string _SL_TIME;
		
		private System.Nullable<int> _SL_CNKEY;
		
		private System.Nullable<int> _SL_CTKEY;
		
		private string _SL_PLACEFROM;
		
		private string _SL_PLACETO;
		
		private string _SL_CODE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSL_SVKEYChanging(int value);
    partial void OnSL_SVKEYChanged();
    partial void OnSL_KEYChanging(int value);
    partial void OnSL_KEYChanged();
    partial void OnSL_NAMEChanging(string value);
    partial void OnSL_NAMEChanged();
    partial void OnSL_NAMELATChanging(string value);
    partial void OnSL_NAMELATChanged();
    partial void OnSL_TIMEBEGChanging(System.Nullable<System.DateTime> value);
    partial void OnSL_TIMEBEGChanged();
    partial void OnSL_TIMEENDChanging(System.Nullable<System.DateTime> value);
    partial void OnSL_TIMEENDChanged();
    partial void OnSL_TIMEChanging(string value);
    partial void OnSL_TIMEChanged();
    partial void OnSL_CNKEYChanging(System.Nullable<int> value);
    partial void OnSL_CNKEYChanged();
    partial void OnSL_CTKEYChanging(System.Nullable<int> value);
    partial void OnSL_CTKEYChanged();
    partial void OnSL_PLACEFROMChanging(string value);
    partial void OnSL_PLACEFROMChanged();
    partial void OnSL_PLACETOChanging(string value);
    partial void OnSL_PLACETOChanged();
    partial void OnSL_CODEChanging(string value);
    partial void OnSL_CODEChanged();
    #endregion
		
		public ServiceList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_SVKEY", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SL_SVKEY
		{
			get
			{
				return this._SL_SVKEY;
			}
			set
			{
				if ((this._SL_SVKEY != value))
				{
					this.OnSL_SVKEYChanging(value);
					this.SendPropertyChanging();
					this._SL_SVKEY = value;
					this.SendPropertyChanged("SL_SVKEY");
					this.OnSL_SVKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int SL_KEY
		{
			get
			{
				return this._SL_KEY;
			}
			set
			{
				if ((this._SL_KEY != value))
				{
					this.OnSL_KEYChanging(value);
					this.SendPropertyChanging();
					this._SL_KEY = value;
					this.SendPropertyChanged("SL_KEY");
					this.OnSL_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_NAME", DbType="VarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string SL_NAME
		{
			get
			{
				return this._SL_NAME;
			}
			set
			{
				if ((this._SL_NAME != value))
				{
					this.OnSL_NAMEChanging(value);
					this.SendPropertyChanging();
					this._SL_NAME = value;
					this.SendPropertyChanged("SL_NAME");
					this.OnSL_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_NAMELAT", DbType="VarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string SL_NAMELAT
		{
			get
			{
				return this._SL_NAMELAT;
			}
			set
			{
				if ((this._SL_NAMELAT != value))
				{
					this.OnSL_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._SL_NAMELAT = value;
					this.SendPropertyChanged("SL_NAMELAT");
					this.OnSL_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_TIMEBEG", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> SL_TIMEBEG
		{
			get
			{
				return this._SL_TIMEBEG;
			}
			set
			{
				if ((this._SL_TIMEBEG != value))
				{
					this.OnSL_TIMEBEGChanging(value);
					this.SendPropertyChanging();
					this._SL_TIMEBEG = value;
					this.SendPropertyChanged("SL_TIMEBEG");
					this.OnSL_TIMEBEGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_TIMEEND", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> SL_TIMEEND
		{
			get
			{
				return this._SL_TIMEEND;
			}
			set
			{
				if ((this._SL_TIMEEND != value))
				{
					this.OnSL_TIMEENDChanging(value);
					this.SendPropertyChanging();
					this._SL_TIMEEND = value;
					this.SendPropertyChanged("SL_TIMEEND");
					this.OnSL_TIMEENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_TIME", DbType="VarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string SL_TIME
		{
			get
			{
				return this._SL_TIME;
			}
			set
			{
				if ((this._SL_TIME != value))
				{
					this.OnSL_TIMEChanging(value);
					this.SendPropertyChanging();
					this._SL_TIME = value;
					this.SendPropertyChanged("SL_TIME");
					this.OnSL_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_CNKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SL_CNKEY
		{
			get
			{
				return this._SL_CNKEY;
			}
			set
			{
				if ((this._SL_CNKEY != value))
				{
					this.OnSL_CNKEYChanging(value);
					this.SendPropertyChanging();
					this._SL_CNKEY = value;
					this.SendPropertyChanged("SL_CNKEY");
					this.OnSL_CNKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_CTKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SL_CTKEY
		{
			get
			{
				return this._SL_CTKEY;
			}
			set
			{
				if ((this._SL_CTKEY != value))
				{
					this.OnSL_CTKEYChanging(value);
					this.SendPropertyChanging();
					this._SL_CTKEY = value;
					this.SendPropertyChanged("SL_CTKEY");
					this.OnSL_CTKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_PLACEFROM", DbType="VarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string SL_PLACEFROM
		{
			get
			{
				return this._SL_PLACEFROM;
			}
			set
			{
				if ((this._SL_PLACEFROM != value))
				{
					this.OnSL_PLACEFROMChanging(value);
					this.SendPropertyChanging();
					this._SL_PLACEFROM = value;
					this.SendPropertyChanged("SL_PLACEFROM");
					this.OnSL_PLACEFROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_PLACETO", DbType="VarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string SL_PLACETO
		{
			get
			{
				return this._SL_PLACETO;
			}
			set
			{
				if ((this._SL_PLACETO != value))
				{
					this.OnSL_PLACETOChanging(value);
					this.SendPropertyChanging();
					this._SL_PLACETO = value;
					this.SendPropertyChanged("SL_PLACETO");
					this.OnSL_PLACETOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_CODE", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string SL_CODE
		{
			get
			{
				return this._SL_CODE;
			}
			set
			{
				if ((this._SL_CODE != value))
				{
					this.OnSL_CODEChanging(value);
					this.SendPropertyChanging();
					this._SL_CODE = value;
					this.SendPropertyChanged("SL_CODE");
					this.OnSL_CODEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddDescript1")]
	public partial class AddDescript1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _A1_KEY;
		
		private System.Nullable<int> _A1_SVKEY;
		
		private string _A1_CODE;
		
		private string _A1_NAME;
		
		private string _A1_NAMELAT;
		
		private System.Data.Linq.Binary _ROWID;
		
		private string _A1_StdKey;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<TurService> _TurServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnA1_KEYChanging(int value);
    partial void OnA1_KEYChanged();
    partial void OnA1_SVKEYChanging(System.Nullable<int> value);
    partial void OnA1_SVKEYChanged();
    partial void OnA1_CODEChanging(string value);
    partial void OnA1_CODEChanged();
    partial void OnA1_NAMEChanging(string value);
    partial void OnA1_NAMEChanged();
    partial void OnA1_NAMELATChanging(string value);
    partial void OnA1_NAMELATChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnA1_StdKeyChanging(string value);
    partial void OnA1_StdKeyChanged();
    #endregion
		
		public AddDescript1()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._TurServices = new EntitySet<TurService>(new Action<TurService>(this.attach_TurServices), new Action<TurService>(this.detach_TurServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A1_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int A1_KEY
		{
			get
			{
				return this._A1_KEY;
			}
			set
			{
				if ((this._A1_KEY != value))
				{
					this.OnA1_KEYChanging(value);
					this.SendPropertyChanging();
					this._A1_KEY = value;
					this.SendPropertyChanged("A1_KEY");
					this.OnA1_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A1_SVKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> A1_SVKEY
		{
			get
			{
				return this._A1_SVKEY;
			}
			set
			{
				if ((this._A1_SVKEY != value))
				{
					this.OnA1_SVKEYChanging(value);
					this.SendPropertyChanging();
					this._A1_SVKEY = value;
					this.SendPropertyChanged("A1_SVKEY");
					this.OnA1_SVKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A1_CODE", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string A1_CODE
		{
			get
			{
				return this._A1_CODE;
			}
			set
			{
				if ((this._A1_CODE != value))
				{
					this.OnA1_CODEChanging(value);
					this.SendPropertyChanging();
					this._A1_CODE = value;
					this.SendPropertyChanged("A1_CODE");
					this.OnA1_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A1_NAME", DbType="VarChar(40) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string A1_NAME
		{
			get
			{
				return this._A1_NAME;
			}
			set
			{
				if ((this._A1_NAME != value))
				{
					this.OnA1_NAMEChanging(value);
					this.SendPropertyChanging();
					this._A1_NAME = value;
					this.SendPropertyChanged("A1_NAME");
					this.OnA1_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A1_NAMELAT", DbType="VarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string A1_NAMELAT
		{
			get
			{
				return this._A1_NAMELAT;
			}
			set
			{
				if ((this._A1_NAMELAT != value))
				{
					this.OnA1_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._A1_NAMELAT = value;
					this.SendPropertyChanged("A1_NAMELAT");
					this.OnA1_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A1_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string A1_StdKey
		{
			get
			{
				return this._A1_StdKey;
			}
			set
			{
				if ((this._A1_StdKey != value))
				{
					this.OnA1_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._A1_StdKey = value;
					this.SendPropertyChanged("A1_StdKey");
					this.OnA1_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddDescript1_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="A1_KEY", OtherKey="DL_SUBCODE1")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddDescript1_TurService", Storage="_TurServices", ThisKey="A1_KEY", OtherKey="TS_SUBCODE1")]
		public EntitySet<TurService> TurServices
		{
			get
			{
				return this._TurServices;
			}
			set
			{
				this._TurServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.AddDescript1 = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.AddDescript1 = null;
		}
		
		private void attach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.AddDescript1 = this;
		}
		
		private void detach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.AddDescript1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_Shablon")]
	public partial class LT_V_Shablon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SH_Id;
		
		private string _SH_Name;
		
		private EntitySet<LT_V_ShablonService> _LT_V_ShablonServices;
		
		private EntitySet<LT_V_ShablonTourGroup> _LT_V_ShablonTourGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSH_IdChanging(int value);
    partial void OnSH_IdChanged();
    partial void OnSH_NameChanging(string value);
    partial void OnSH_NameChanged();
    #endregion
		
		public LT_V_Shablon()
		{
			this._LT_V_ShablonServices = new EntitySet<LT_V_ShablonService>(new Action<LT_V_ShablonService>(this.attach_LT_V_ShablonServices), new Action<LT_V_ShablonService>(this.detach_LT_V_ShablonServices));
			this._LT_V_ShablonTourGroups = new EntitySet<LT_V_ShablonTourGroup>(new Action<LT_V_ShablonTourGroup>(this.attach_LT_V_ShablonTourGroups), new Action<LT_V_ShablonTourGroup>(this.detach_LT_V_ShablonTourGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SH_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SH_Id
		{
			get
			{
				return this._SH_Id;
			}
			set
			{
				if ((this._SH_Id != value))
				{
					this.OnSH_IdChanging(value);
					this.SendPropertyChanging();
					this._SH_Id = value;
					this.SendPropertyChanged("SH_Id");
					this.OnSH_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SH_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SH_Name
		{
			get
			{
				return this._SH_Name;
			}
			set
			{
				if ((this._SH_Name != value))
				{
					this.OnSH_NameChanging(value);
					this.SendPropertyChanging();
					this._SH_Name = value;
					this.SendPropertyChanged("SH_Name");
					this.OnSH_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_Shablon_LT_V_ShablonService", Storage="_LT_V_ShablonServices", ThisKey="SH_Id", OtherKey="SHS_SHId")]
		public EntitySet<LT_V_ShablonService> LT_V_ShablonServices
		{
			get
			{
				return this._LT_V_ShablonServices;
			}
			set
			{
				this._LT_V_ShablonServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_Shablon_LT_V_ShablonTourGroup", Storage="_LT_V_ShablonTourGroups", ThisKey="SH_Id", OtherKey="SHTR_SHId")]
		public EntitySet<LT_V_ShablonTourGroup> LT_V_ShablonTourGroups
		{
			get
			{
				return this._LT_V_ShablonTourGroups;
			}
			set
			{
				this._LT_V_ShablonTourGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LT_V_ShablonServices(LT_V_ShablonService entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_Shablon = this;
		}
		
		private void detach_LT_V_ShablonServices(LT_V_ShablonService entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_Shablon = null;
		}
		
		private void attach_LT_V_ShablonTourGroups(LT_V_ShablonTourGroup entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_Shablon = this;
		}
		
		private void detach_LT_V_ShablonTourGroups(LT_V_ShablonTourGroup entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_Shablon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_ShablonTourNames")]
	public partial class LT_V_ShablonTourNames : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SHTN_Id;
		
		private string _SHTN_Name;
		
		private int _SHTN_CNKey;
		
		private EntitySet<LT_V_ShablonTourGroup> _LT_V_ShablonTourGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSHTN_IdChanging(int value);
    partial void OnSHTN_IdChanged();
    partial void OnSHTN_NameChanging(string value);
    partial void OnSHTN_NameChanged();
    partial void OnSHTN_CNKeyChanging(int value);
    partial void OnSHTN_CNKeyChanged();
    #endregion
		
		public LT_V_ShablonTourNames()
		{
			this._LT_V_ShablonTourGroups = new EntitySet<LT_V_ShablonTourGroup>(new Action<LT_V_ShablonTourGroup>(this.attach_LT_V_ShablonTourGroups), new Action<LT_V_ShablonTourGroup>(this.detach_LT_V_ShablonTourGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHTN_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SHTN_Id
		{
			get
			{
				return this._SHTN_Id;
			}
			set
			{
				if ((this._SHTN_Id != value))
				{
					this.OnSHTN_IdChanging(value);
					this.SendPropertyChanging();
					this._SHTN_Id = value;
					this.SendPropertyChanged("SHTN_Id");
					this.OnSHTN_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHTN_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string SHTN_Name
		{
			get
			{
				return this._SHTN_Name;
			}
			set
			{
				if ((this._SHTN_Name != value))
				{
					this.OnSHTN_NameChanging(value);
					this.SendPropertyChanging();
					this._SHTN_Name = value;
					this.SendPropertyChanged("SHTN_Name");
					this.OnSHTN_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHTN_CNKey", DbType="Int NOT NULL")]
		public int SHTN_CNKey
		{
			get
			{
				return this._SHTN_CNKey;
			}
			set
			{
				if ((this._SHTN_CNKey != value))
				{
					this.OnSHTN_CNKeyChanging(value);
					this.SendPropertyChanging();
					this._SHTN_CNKey = value;
					this.SendPropertyChanged("SHTN_CNKey");
					this.OnSHTN_CNKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_ShablonTourNames_LT_V_ShablonTourGroup", Storage="_LT_V_ShablonTourGroups", ThisKey="SHTN_Id", OtherKey="SHTR_SHTNId")]
		public EntitySet<LT_V_ShablonTourGroup> LT_V_ShablonTourGroups
		{
			get
			{
				return this._LT_V_ShablonTourGroups;
			}
			set
			{
				this._LT_V_ShablonTourGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LT_V_ShablonTourGroups(LT_V_ShablonTourGroup entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_ShablonTourNames = this;
		}
		
		private void detach_LT_V_ShablonTourGroups(LT_V_ShablonTourGroup entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_ShablonTourNames = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_ShablonFormatService")]
	public partial class LT_V_ShablonFormatService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SHFS_Id;
		
		private int _SHFS_SVKey;
		
		private string _SHFS_FormatOut;
		
		private EntitySet<LT_V_ShablonService> _LT_V_ShablonServices;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSHFS_IdChanging(int value);
    partial void OnSHFS_IdChanged();
    partial void OnSHFS_SVKeyChanging(int value);
    partial void OnSHFS_SVKeyChanged();
    partial void OnSHFS_FormatOutChanging(string value);
    partial void OnSHFS_FormatOutChanged();
    #endregion
		
		public LT_V_ShablonFormatService()
		{
			this._LT_V_ShablonServices = new EntitySet<LT_V_ShablonService>(new Action<LT_V_ShablonService>(this.attach_LT_V_ShablonServices), new Action<LT_V_ShablonService>(this.detach_LT_V_ShablonServices));
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHFS_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SHFS_Id
		{
			get
			{
				return this._SHFS_Id;
			}
			set
			{
				if ((this._SHFS_Id != value))
				{
					this.OnSHFS_IdChanging(value);
					this.SendPropertyChanging();
					this._SHFS_Id = value;
					this.SendPropertyChanged("SHFS_Id");
					this.OnSHFS_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHFS_SVKey", DbType="Int NOT NULL")]
		public int SHFS_SVKey
		{
			get
			{
				return this._SHFS_SVKey;
			}
			set
			{
				if ((this._SHFS_SVKey != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSHFS_SVKeyChanging(value);
					this.SendPropertyChanging();
					this._SHFS_SVKey = value;
					this.SendPropertyChanged("SHFS_SVKey");
					this.OnSHFS_SVKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHFS_FormatOut", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SHFS_FormatOut
		{
			get
			{
				return this._SHFS_FormatOut;
			}
			set
			{
				if ((this._SHFS_FormatOut != value))
				{
					this.OnSHFS_FormatOutChanging(value);
					this.SendPropertyChanging();
					this._SHFS_FormatOut = value;
					this.SendPropertyChanged("SHFS_FormatOut");
					this.OnSHFS_FormatOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_ShablonFormatService_LT_V_ShablonService", Storage="_LT_V_ShablonServices", ThisKey="SHFS_Id", OtherKey="SHS_SHFSId")]
		public EntitySet<LT_V_ShablonService> LT_V_ShablonServices
		{
			get
			{
				return this._LT_V_ShablonServices;
			}
			set
			{
				this._LT_V_ShablonServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LT_V_ShablonFormatService", Storage="_Service", ThisKey="SHFS_SVKey", OtherKey="SV_KEY", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.LT_V_ShablonFormatServices.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.LT_V_ShablonFormatServices.Add(this);
						this._SHFS_SVKey = value.SV_KEY;
					}
					else
					{
						this._SHFS_SVKey = default(int);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LT_V_ShablonServices(LT_V_ShablonService entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_ShablonFormatService = this;
		}
		
		private void detach_LT_V_ShablonServices(LT_V_ShablonService entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_ShablonFormatService = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_ShablonService")]
	public partial class LT_V_ShablonService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SHS_Id;
		
		private int _SHS_SHId;
		
		private int _SHS_SHFSId;
		
		private int _SHS_LineOut;
		
		private bool _SHS_UseCommentToBron;
		
		private bool _SHS_IsMultiVariant;
		
		private bool _SHS_IsGroupToOneVoucher;
		
		private EntitySet<LT_V_MappingTurService> _LT_V_MappingTurServices;
		
		private EntityRef<LT_V_Shablon> _LT_V_Shablon;
		
		private EntityRef<LT_V_ShablonFormatService> _LT_V_ShablonFormatService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSHS_IdChanging(int value);
    partial void OnSHS_IdChanged();
    partial void OnSHS_SHIdChanging(int value);
    partial void OnSHS_SHIdChanged();
    partial void OnSHS_SHFSIdChanging(int value);
    partial void OnSHS_SHFSIdChanged();
    partial void OnSHS_LineOutChanging(int value);
    partial void OnSHS_LineOutChanged();
    partial void OnSHS_UseCommentToBronChanging(bool value);
    partial void OnSHS_UseCommentToBronChanged();
    partial void OnSHS_IsMultiVariantChanging(bool value);
    partial void OnSHS_IsMultiVariantChanged();
    partial void OnSHS_IsGroupToOneVoucherChanging(bool value);
    partial void OnSHS_IsGroupToOneVoucherChanged();
    #endregion
		
		public LT_V_ShablonService()
		{
			this._LT_V_MappingTurServices = new EntitySet<LT_V_MappingTurService>(new Action<LT_V_MappingTurService>(this.attach_LT_V_MappingTurServices), new Action<LT_V_MappingTurService>(this.detach_LT_V_MappingTurServices));
			this._LT_V_Shablon = default(EntityRef<LT_V_Shablon>);
			this._LT_V_ShablonFormatService = default(EntityRef<LT_V_ShablonFormatService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHS_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SHS_Id
		{
			get
			{
				return this._SHS_Id;
			}
			set
			{
				if ((this._SHS_Id != value))
				{
					this.OnSHS_IdChanging(value);
					this.SendPropertyChanging();
					this._SHS_Id = value;
					this.SendPropertyChanged("SHS_Id");
					this.OnSHS_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHS_SHId", DbType="Int NOT NULL")]
		public int SHS_SHId
		{
			get
			{
				return this._SHS_SHId;
			}
			set
			{
				if ((this._SHS_SHId != value))
				{
					if (this._LT_V_Shablon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSHS_SHIdChanging(value);
					this.SendPropertyChanging();
					this._SHS_SHId = value;
					this.SendPropertyChanged("SHS_SHId");
					this.OnSHS_SHIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHS_SHFSId", DbType="Int NOT NULL")]
		public int SHS_SHFSId
		{
			get
			{
				return this._SHS_SHFSId;
			}
			set
			{
				if ((this._SHS_SHFSId != value))
				{
					if (this._LT_V_ShablonFormatService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSHS_SHFSIdChanging(value);
					this.SendPropertyChanging();
					this._SHS_SHFSId = value;
					this.SendPropertyChanged("SHS_SHFSId");
					this.OnSHS_SHFSIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHS_LineOut", DbType="Int NOT NULL")]
		public int SHS_LineOut
		{
			get
			{
				return this._SHS_LineOut;
			}
			set
			{
				if ((this._SHS_LineOut != value))
				{
					this.OnSHS_LineOutChanging(value);
					this.SendPropertyChanging();
					this._SHS_LineOut = value;
					this.SendPropertyChanged("SHS_LineOut");
					this.OnSHS_LineOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHS_UseCommentToBron", DbType="Bit NOT NULL")]
		public bool SHS_UseCommentToBron
		{
			get
			{
				return this._SHS_UseCommentToBron;
			}
			set
			{
				if ((this._SHS_UseCommentToBron != value))
				{
					this.OnSHS_UseCommentToBronChanging(value);
					this.SendPropertyChanging();
					this._SHS_UseCommentToBron = value;
					this.SendPropertyChanged("SHS_UseCommentToBron");
					this.OnSHS_UseCommentToBronChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHS_IsMultiVariant", DbType="Bit NOT NULL")]
		public bool SHS_IsMultiVariant
		{
			get
			{
				return this._SHS_IsMultiVariant;
			}
			set
			{
				if ((this._SHS_IsMultiVariant != value))
				{
					this.OnSHS_IsMultiVariantChanging(value);
					this.SendPropertyChanging();
					this._SHS_IsMultiVariant = value;
					this.SendPropertyChanged("SHS_IsMultiVariant");
					this.OnSHS_IsMultiVariantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHS_IsGroupToOneVoucher", DbType="Bit NOT NULL")]
		public bool SHS_IsGroupToOneVoucher
		{
			get
			{
				return this._SHS_IsGroupToOneVoucher;
			}
			set
			{
				if ((this._SHS_IsGroupToOneVoucher != value))
				{
					this.OnSHS_IsGroupToOneVoucherChanging(value);
					this.SendPropertyChanging();
					this._SHS_IsGroupToOneVoucher = value;
					this.SendPropertyChanged("SHS_IsGroupToOneVoucher");
					this.OnSHS_IsGroupToOneVoucherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_ShablonService_LT_V_MappingTurService", Storage="_LT_V_MappingTurServices", ThisKey="SHS_Id", OtherKey="VS_SHSId")]
		public EntitySet<LT_V_MappingTurService> LT_V_MappingTurServices
		{
			get
			{
				return this._LT_V_MappingTurServices;
			}
			set
			{
				this._LT_V_MappingTurServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_Shablon_LT_V_ShablonService", Storage="_LT_V_Shablon", ThisKey="SHS_SHId", OtherKey="SH_Id", IsForeignKey=true)]
		public LT_V_Shablon LT_V_Shablon
		{
			get
			{
				return this._LT_V_Shablon.Entity;
			}
			set
			{
				LT_V_Shablon previousValue = this._LT_V_Shablon.Entity;
				if (((previousValue != value) 
							|| (this._LT_V_Shablon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LT_V_Shablon.Entity = null;
						previousValue.LT_V_ShablonServices.Remove(this);
					}
					this._LT_V_Shablon.Entity = value;
					if ((value != null))
					{
						value.LT_V_ShablonServices.Add(this);
						this._SHS_SHId = value.SH_Id;
					}
					else
					{
						this._SHS_SHId = default(int);
					}
					this.SendPropertyChanged("LT_V_Shablon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_ShablonFormatService_LT_V_ShablonService", Storage="_LT_V_ShablonFormatService", ThisKey="SHS_SHFSId", OtherKey="SHFS_Id", IsForeignKey=true)]
		public LT_V_ShablonFormatService LT_V_ShablonFormatService
		{
			get
			{
				return this._LT_V_ShablonFormatService.Entity;
			}
			set
			{
				LT_V_ShablonFormatService previousValue = this._LT_V_ShablonFormatService.Entity;
				if (((previousValue != value) 
							|| (this._LT_V_ShablonFormatService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LT_V_ShablonFormatService.Entity = null;
						previousValue.LT_V_ShablonServices.Remove(this);
					}
					this._LT_V_ShablonFormatService.Entity = value;
					if ((value != null))
					{
						value.LT_V_ShablonServices.Add(this);
						this._SHS_SHFSId = value.SHFS_Id;
					}
					else
					{
						this._SHS_SHFSId = default(int);
					}
					this.SendPropertyChanged("LT_V_ShablonFormatService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LT_V_MappingTurServices(LT_V_MappingTurService entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_ShablonService = this;
		}
		
		private void detach_LT_V_MappingTurServices(LT_V_MappingTurService entity)
		{
			this.SendPropertyChanging();
			entity.LT_V_ShablonService = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_V_ShablonTourGroup")]
	public partial class LT_V_ShablonTourGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SHTR_Id;
		
		private int _SHTR_SHId;
		
		private int _SHTR_SHTNId;
		
		private EntityRef<LT_V_Shablon> _LT_V_Shablon;
		
		private EntityRef<LT_V_ShablonTourNames> _LT_V_ShablonTourName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSHTR_IdChanging(int value);
    partial void OnSHTR_IdChanged();
    partial void OnSHTR_SHIdChanging(int value);
    partial void OnSHTR_SHIdChanged();
    partial void OnSHTR_SHTNIdChanging(int value);
    partial void OnSHTR_SHTNIdChanged();
    #endregion
		
		public LT_V_ShablonTourGroup()
		{
			this._LT_V_Shablon = default(EntityRef<LT_V_Shablon>);
			this._LT_V_ShablonTourName = default(EntityRef<LT_V_ShablonTourNames>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHTR_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SHTR_Id
		{
			get
			{
				return this._SHTR_Id;
			}
			set
			{
				if ((this._SHTR_Id != value))
				{
					this.OnSHTR_IdChanging(value);
					this.SendPropertyChanging();
					this._SHTR_Id = value;
					this.SendPropertyChanged("SHTR_Id");
					this.OnSHTR_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHTR_SHId", DbType="Int NOT NULL")]
		public int SHTR_SHId
		{
			get
			{
				return this._SHTR_SHId;
			}
			set
			{
				if ((this._SHTR_SHId != value))
				{
					if (this._LT_V_Shablon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSHTR_SHIdChanging(value);
					this.SendPropertyChanging();
					this._SHTR_SHId = value;
					this.SendPropertyChanged("SHTR_SHId");
					this.OnSHTR_SHIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHTR_SHTNId", DbType="Int NOT NULL")]
		public int SHTR_SHTNId
		{
			get
			{
				return this._SHTR_SHTNId;
			}
			set
			{
				if ((this._SHTR_SHTNId != value))
				{
					if (this._LT_V_ShablonTourName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSHTR_SHTNIdChanging(value);
					this.SendPropertyChanging();
					this._SHTR_SHTNId = value;
					this.SendPropertyChanged("SHTR_SHTNId");
					this.OnSHTR_SHTNIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_Shablon_LT_V_ShablonTourGroup", Storage="_LT_V_Shablon", ThisKey="SHTR_SHId", OtherKey="SH_Id", IsForeignKey=true)]
		public LT_V_Shablon LT_V_Shablon
		{
			get
			{
				return this._LT_V_Shablon.Entity;
			}
			set
			{
				LT_V_Shablon previousValue = this._LT_V_Shablon.Entity;
				if (((previousValue != value) 
							|| (this._LT_V_Shablon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LT_V_Shablon.Entity = null;
						previousValue.LT_V_ShablonTourGroups.Remove(this);
					}
					this._LT_V_Shablon.Entity = value;
					if ((value != null))
					{
						value.LT_V_ShablonTourGroups.Add(this);
						this._SHTR_SHId = value.SH_Id;
					}
					else
					{
						this._SHTR_SHId = default(int);
					}
					this.SendPropertyChanged("LT_V_Shablon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LT_V_ShablonTourNames_LT_V_ShablonTourGroup", Storage="_LT_V_ShablonTourName", ThisKey="SHTR_SHTNId", OtherKey="SHTN_Id", IsForeignKey=true)]
		public LT_V_ShablonTourNames LT_V_ShablonTourNames
		{
			get
			{
				return this._LT_V_ShablonTourName.Entity;
			}
			set
			{
				LT_V_ShablonTourNames previousValue = this._LT_V_ShablonTourName.Entity;
				if (((previousValue != value) 
							|| (this._LT_V_ShablonTourName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LT_V_ShablonTourName.Entity = null;
						previousValue.LT_V_ShablonTourGroups.Remove(this);
					}
					this._LT_V_ShablonTourName.Entity = value;
					if ((value != null))
					{
						value.LT_V_ShablonTourGroups.Add(this);
						this._SHTR_SHTNId = value.SHTN_Id;
					}
					else
					{
						this._SHTR_SHTNId = default(int);
					}
					this.SendPropertyChanged("LT_V_ShablonTourNames");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddDescript2")]
	public partial class AddDescript2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _A2_KEY;
		
		private System.Nullable<int> _A2_SVKEY;
		
		private string _A2_CODE;
		
		private string _A2_NAME;
		
		private string _A2_NAMELAT;
		
		private System.Data.Linq.Binary _ROWID;
		
		private string _A2_StdKey;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
		private EntitySet<TurService> _TurServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnA2_KEYChanging(int value);
    partial void OnA2_KEYChanged();
    partial void OnA2_SVKEYChanging(System.Nullable<int> value);
    partial void OnA2_SVKEYChanged();
    partial void OnA2_CODEChanging(string value);
    partial void OnA2_CODEChanged();
    partial void OnA2_NAMEChanging(string value);
    partial void OnA2_NAMEChanged();
    partial void OnA2_NAMELATChanging(string value);
    partial void OnA2_NAMELATChanged();
    partial void OnROWIDChanging(System.Data.Linq.Binary value);
    partial void OnROWIDChanged();
    partial void OnA2_StdKeyChanging(string value);
    partial void OnA2_StdKeyChanged();
    #endregion
		
		public AddDescript2()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			this._TurServices = new EntitySet<TurService>(new Action<TurService>(this.attach_TurServices), new Action<TurService>(this.detach_TurServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A2_KEY", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int A2_KEY
		{
			get
			{
				return this._A2_KEY;
			}
			set
			{
				if ((this._A2_KEY != value))
				{
					this.OnA2_KEYChanging(value);
					this.SendPropertyChanging();
					this._A2_KEY = value;
					this.SendPropertyChanged("A2_KEY");
					this.OnA2_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A2_SVKEY", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> A2_SVKEY
		{
			get
			{
				return this._A2_SVKEY;
			}
			set
			{
				if ((this._A2_SVKEY != value))
				{
					this.OnA2_SVKEYChanging(value);
					this.SendPropertyChanging();
					this._A2_SVKEY = value;
					this.SendPropertyChanged("A2_SVKEY");
					this.OnA2_SVKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A2_CODE", DbType="VarChar(7)", UpdateCheck=UpdateCheck.Never)]
		public string A2_CODE
		{
			get
			{
				return this._A2_CODE;
			}
			set
			{
				if ((this._A2_CODE != value))
				{
					this.OnA2_CODEChanging(value);
					this.SendPropertyChanging();
					this._A2_CODE = value;
					this.SendPropertyChanged("A2_CODE");
					this.OnA2_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A2_NAME", DbType="VarChar(40) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string A2_NAME
		{
			get
			{
				return this._A2_NAME;
			}
			set
			{
				if ((this._A2_NAME != value))
				{
					this.OnA2_NAMEChanging(value);
					this.SendPropertyChanging();
					this._A2_NAME = value;
					this.SendPropertyChanged("A2_NAME");
					this.OnA2_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A2_NAMELAT", DbType="VarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string A2_NAMELAT
		{
			get
			{
				return this._A2_NAMELAT;
			}
			set
			{
				if ((this._A2_NAMELAT != value))
				{
					this.OnA2_NAMELATChanging(value);
					this.SendPropertyChanging();
					this._A2_NAMELAT = value;
					this.SendPropertyChanged("A2_NAMELAT");
					this.OnA2_NAMELATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWID", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ROWID
		{
			get
			{
				return this._ROWID;
			}
			set
			{
				if ((this._ROWID != value))
				{
					this.OnROWIDChanging(value);
					this.SendPropertyChanging();
					this._ROWID = value;
					this.SendPropertyChanged("ROWID");
					this.OnROWIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A2_StdKey", DbType="Char(10)", UpdateCheck=UpdateCheck.Never)]
		public string A2_StdKey
		{
			get
			{
				return this._A2_StdKey;
			}
			set
			{
				if ((this._A2_StdKey != value))
				{
					this.OnA2_StdKeyChanging(value);
					this.SendPropertyChanging();
					this._A2_StdKey = value;
					this.SendPropertyChanged("A2_StdKey");
					this.OnA2_StdKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddDescript2_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="A2_KEY", OtherKey="DL_SUBCODE2")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddDescript2_TurService", Storage="_TurServices", ThisKey="A2_KEY", OtherKey="TS_SUBCODE2")]
		public EntitySet<TurService> TurServices
		{
			get
			{
				return this._TurServices;
			}
			set
			{
				this._TurServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.AddDescript2 = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.AddDescript2 = null;
		}
		
		private void attach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.AddDescript2 = this;
		}
		
		private void detach_TurServices(TurService entity)
		{
			this.SendPropertyChanging();
			entity.AddDescript2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LT_GroupToBaseTour")]
	public partial class LT_GroupToBaseTour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GT_Key;
		
		private int _GT_RootTLKey;
		
		private int _GT_ParentTLKey;
		
		private EntityRef<tbl_TurList> _RootTour;
		
		private EntityRef<tbl_TurList> _ChieldTour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGT_KeyChanging(int value);
    partial void OnGT_KeyChanged();
    partial void OnGT_RootTLKeyChanging(int value);
    partial void OnGT_RootTLKeyChanged();
    partial void OnGT_ParentTLKeyChanging(int value);
    partial void OnGT_ParentTLKeyChanged();
    #endregion
		
		public LT_GroupToBaseTour()
		{
			this._RootTour = default(EntityRef<tbl_TurList>);
			this._ChieldTour = default(EntityRef<tbl_TurList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GT_Key", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GT_Key
		{
			get
			{
				return this._GT_Key;
			}
			set
			{
				if ((this._GT_Key != value))
				{
					this.OnGT_KeyChanging(value);
					this.SendPropertyChanging();
					this._GT_Key = value;
					this.SendPropertyChanged("GT_Key");
					this.OnGT_KeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GT_RootTLKey", DbType="Int NOT NULL")]
		public int GT_RootTLKey
		{
			get
			{
				return this._GT_RootTLKey;
			}
			set
			{
				if ((this._GT_RootTLKey != value))
				{
					if (this._RootTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGT_RootTLKeyChanging(value);
					this.SendPropertyChanging();
					this._GT_RootTLKey = value;
					this.SendPropertyChanged("GT_RootTLKey");
					this.OnGT_RootTLKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GT_ParentTLKey", DbType="Int NOT NULL")]
		public int GT_ParentTLKey
		{
			get
			{
				return this._GT_ParentTLKey;
			}
			set
			{
				if ((this._GT_ParentTLKey != value))
				{
					if (this._ChieldTour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGT_ParentTLKeyChanging(value);
					this.SendPropertyChanging();
					this._GT_ParentTLKey = value;
					this.SendPropertyChanged("GT_ParentTLKey");
					this.OnGT_ParentTLKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_LT_GroupToBaseTour", Storage="_RootTour", ThisKey="GT_RootTLKey", OtherKey="TL_KEY", IsForeignKey=true)]
		public tbl_TurList RootTour
		{
			get
			{
				return this._RootTour.Entity;
			}
			set
			{
				if ((this._RootTour.Entity != value))
				{
					this.SendPropertyChanging();
					this._RootTour.Entity = value;
					this.SendPropertyChanged("RootTour");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TurList_LT_GroupToBaseTour1", Storage="_ChieldTour", ThisKey="GT_ParentTLKey", OtherKey="TL_KEY", IsForeignKey=true)]
		public tbl_TurList ChieldTour
		{
			get
			{
				return this._ChieldTour.Entity;
			}
			set
			{
				if ((this._ChieldTour.Entity != value))
				{
					this.SendPropertyChanging();
					this._ChieldTour.Entity = value;
					this.SendPropertyChanged("ChieldTour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lanta_2011_hotelFIT_adon")]
	public partial class lanta_2011_hotelFIT_adon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sl_key;
		
		private string _HotelName;
		
		private string _hotelstar;
		
		private string _hdadress;
		
		private string _hdpfone;
		
		private string _hdcity;
		
		private string _hdcountru;
		
		private string _hdroom;
		
		private string _hdpansion;
		
		private EntitySet<tbl_DogovorList> _tbl_DogovorLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsl_keyChanging(int value);
    partial void Onsl_keyChanged();
    partial void OnHotelNameChanging(string value);
    partial void OnHotelNameChanged();
    partial void OnhotelstarChanging(string value);
    partial void OnhotelstarChanged();
    partial void OnhdadressChanging(string value);
    partial void OnhdadressChanged();
    partial void OnhdpfoneChanging(string value);
    partial void OnhdpfoneChanged();
    partial void OnhdcityChanging(string value);
    partial void OnhdcityChanged();
    partial void OnhdcountruChanging(string value);
    partial void OnhdcountruChanged();
    partial void OnhdroomChanging(string value);
    partial void OnhdroomChanged();
    partial void OnhdpansionChanging(string value);
    partial void OnhdpansionChanged();
    #endregion
		
		public lanta_2011_hotelFIT_adon()
		{
			this._tbl_DogovorLists = new EntitySet<tbl_DogovorList>(new Action<tbl_DogovorList>(this.attach_tbl_DogovorLists), new Action<tbl_DogovorList>(this.detach_tbl_DogovorLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sl_key", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int sl_key
		{
			get
			{
				return this._sl_key;
			}
			set
			{
				if ((this._sl_key != value))
				{
					this.Onsl_keyChanging(value);
					this.SendPropertyChanging();
					this._sl_key = value;
					this.SendPropertyChanged("sl_key");
					this.Onsl_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelName", DbType="NChar(100)")]
		public string HotelName
		{
			get
			{
				return this._HotelName;
			}
			set
			{
				if ((this._HotelName != value))
				{
					this.OnHotelNameChanging(value);
					this.SendPropertyChanging();
					this._HotelName = value;
					this.SendPropertyChanged("HotelName");
					this.OnHotelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotelstar", DbType="NChar(4)")]
		public string hotelstar
		{
			get
			{
				return this._hotelstar;
			}
			set
			{
				if ((this._hotelstar != value))
				{
					this.OnhotelstarChanging(value);
					this.SendPropertyChanging();
					this._hotelstar = value;
					this.SendPropertyChanged("hotelstar");
					this.OnhotelstarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hdadress", DbType="NChar(150)")]
		public string hdadress
		{
			get
			{
				return this._hdadress;
			}
			set
			{
				if ((this._hdadress != value))
				{
					this.OnhdadressChanging(value);
					this.SendPropertyChanging();
					this._hdadress = value;
					this.SendPropertyChanged("hdadress");
					this.OnhdadressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hdpfone", DbType="NChar(30)")]
		public string hdpfone
		{
			get
			{
				return this._hdpfone;
			}
			set
			{
				if ((this._hdpfone != value))
				{
					this.OnhdpfoneChanging(value);
					this.SendPropertyChanging();
					this._hdpfone = value;
					this.SendPropertyChanged("hdpfone");
					this.OnhdpfoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hdcity", DbType="NChar(100)")]
		public string hdcity
		{
			get
			{
				return this._hdcity;
			}
			set
			{
				if ((this._hdcity != value))
				{
					this.OnhdcityChanging(value);
					this.SendPropertyChanging();
					this._hdcity = value;
					this.SendPropertyChanged("hdcity");
					this.OnhdcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hdcountru", DbType="NChar(50)")]
		public string hdcountru
		{
			get
			{
				return this._hdcountru;
			}
			set
			{
				if ((this._hdcountru != value))
				{
					this.OnhdcountruChanging(value);
					this.SendPropertyChanging();
					this._hdcountru = value;
					this.SendPropertyChanged("hdcountru");
					this.OnhdcountruChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hdroom", DbType="NChar(50)")]
		public string hdroom
		{
			get
			{
				return this._hdroom;
			}
			set
			{
				if ((this._hdroom != value))
				{
					this.OnhdroomChanging(value);
					this.SendPropertyChanging();
					this._hdroom = value;
					this.SendPropertyChanged("hdroom");
					this.OnhdroomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hdpansion", DbType="NChar(10)")]
		public string hdpansion
		{
			get
			{
				return this._hdpansion;
			}
			set
			{
				if ((this._hdpansion != value))
				{
					this.OnhdpansionChanging(value);
					this.SendPropertyChanging();
					this._hdpansion = value;
					this.SendPropertyChanged("hdpansion");
					this.OnhdpansionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lanta_2011_hotelFIT_adon_tbl_DogovorList", Storage="_tbl_DogovorLists", ThisKey="sl_key", OtherKey="DL_CODE")]
		public EntitySet<tbl_DogovorList> tbl_DogovorLists
		{
			get
			{
				return this._tbl_DogovorLists;
			}
			set
			{
				this._tbl_DogovorLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.lanta_2011_hotelFIT_adon = this;
		}
		
		private void detach_tbl_DogovorLists(tbl_DogovorList entity)
		{
			this.SendPropertyChanging();
			entity.lanta_2011_hotelFIT_adon = null;
		}
	}
}
#pragma warning restore 1591
